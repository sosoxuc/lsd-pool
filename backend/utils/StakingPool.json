{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "keyGenerator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "depositAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "withdrawal",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "ssv_contract",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "ssv_token",
          "type": "address"
        },
        {
          "internalType": "uint32[4]",
          "name": "ids",
          "type": "uint32[4]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "valueSent",
          "type": "uint256"
        }
      ],
      "name": "StakingPool__CantStakeZeroAmount",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "whitelistedAddress",
          "type": "address"
        }
      ],
      "name": "StakingPool__OnlyWhitelistAddress",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "pubkey",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "sharesPublicKeys",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "KeySharesDeposited",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint32[4]",
          "name": "newOperators",
          "type": "uint32[4]"
        }
      ],
      "name": "OperatorIDsChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "pubkey",
          "type": "bytes"
        }
      ],
      "name": "PubKeyDeposited",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newPrice",
          "type": "uint256"
        }
      ],
      "name": "SharePriceUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "user_address",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "UserStaked",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "SSV_CONTRACT_ADDR",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "SSV_TOKEN_ADDR",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "VALIDATOR_AMOUNT",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "Validators",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "WITHDRAWAL_ADDRESS",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "WhitelistKeyGenerator",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "_pubkey",
          "type": "bytes"
        },
        {
          "internalType": "uint64[]",
          "name": "_operatorIds",
          "type": "uint64[]"
        },
        {
          "internalType": "bytes",
          "name": "_shares",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "uint32",
              "name": "validatorCount",
              "type": "uint32"
            },
            {
              "internalType": "uint64",
              "name": "networkFeeIndex",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "index",
              "type": "uint64"
            },
            {
              "internalType": "uint256",
              "name": "balance",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "active",
              "type": "bool"
            }
          ],
          "internalType": "struct ISSVNetworkCore.Cluster",
          "name": "_cluster",
          "type": "tuple"
        }
      ],
      "name": "depositShares",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "_pubkey",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "_withdrawal_credentials",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        },
        {
          "internalType": "bytes32",
          "name": "_deposit_data_root",
          "type": "bytes32"
        }
      ],
      "name": "depositValidator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOperators",
      "outputs": [
        {
          "internalType": "uint32[4]",
          "name": "",
          "type": "uint32[4]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getShareprice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_userAddress",
          "type": "address"
        }
      ],
      "name": "getUserStake",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getValidators",
      "outputs": [
        {
          "internalType": "bytes[]",
          "name": "",
          "type": "bytes[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ssvETH",
      "outputs": [
        {
          "internalType": "contract SSVETH",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stake",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "unStake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_newBeaconRewards",
          "type": "uint256"
        }
      ],
      "name": "updateBeaconRewards",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32[4]",
          "name": "_newOperators",
          "type": "uint32[4]"
        }
      ],
      "name": "updateOperators",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "allSourcePaths": {
    "12": "contracts/SSVETH.sol",
    "13": "contracts/StakingPool.sol",
    "16": "interfaces/IDepositContract.sol",
    "17": "interfaces/mocks/ISSVNetwork.sol",
    "2": "/home/rohit/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/access/Ownable.sol",
    "3": "/home/rohit/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/security/ReentrancyGuard.sol",
    "4": "/home/rohit/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/token/ERC20/ERC20.sol",
    "5": "/home/rohit/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/token/ERC20/IERC20.sol",
    "6": "/home/rohit/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/token/ERC20/extensions/IERC20Metadata.sol",
    "7": "/home/rohit/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/utils/Context.sol"
  },
  "ast": {
    "absolutePath": "contracts/StakingPool.sol",
    "exportedSymbols": {
      "AccessControl": [
        1995
      ],
      "Context": [
        1679
      ],
      "ERC165": [
        2964
      ],
      "ERC20": [
        2582
      ],
      "IAccessControl": [
        2765
      ],
      "IDepositContract": [
        1290
      ],
      "IERC165": [
        3866
      ],
      "IERC20": [
        1195
      ],
      "IERC20Metadata": [
        2989
      ],
      "ISSVNetwork": [
        1657
      ],
      "ISSVNetworkCore": [
        2692
      ],
      "Math": [
        3854
      ],
      "Ownable": [
        1063
      ],
      "ReentrancyGuard": [
        1117
      ],
      "SSVETH": [
        1250
      ],
      "StakingPool": [
        473
      ],
      "StakingPool__CantStakeZeroAmount": [
        12
      ],
      "StakingPool__OnlyWhitelistAddress": [
        18
      ],
      "Strings": [
        2940
      ]
    },
    "id": 474,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "31:23:13"
      },
      {
        "absolutePath": "/home/rohit/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/security/ReentrancyGuard.sol",
        "file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 474,
        "sourceUnit": 1118,
        "src": "56:62:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/rohit/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 474,
        "sourceUnit": 1196,
        "src": "119:56:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/rohit/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 474,
        "sourceUnit": 1064,
        "src": "176:52:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/IDepositContract.sol",
        "file": "../interfaces/IDepositContract.sol",
        "id": 5,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 474,
        "sourceUnit": 1291,
        "src": "229:44:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/mocks/ISSVNetwork.sol",
        "file": "../interfaces/mocks/ISSVNetwork.sol",
        "id": 6,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 474,
        "sourceUnit": 1658,
        "src": "274:45:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/SSVETH.sol",
        "file": "./SSVETH.sol",
        "id": 7,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 474,
        "sourceUnit": 1251,
        "src": "320:22:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "documentation": {
          "id": 8,
          "nodeType": "StructuredDocumentation",
          "src": "344:333:13",
          "text": "this contract utilizes custom errors to optimize gas usage, instead of normal `require` conditionals. \n By using custom errors instead, we don't need to use up storage space on the `require`'s revert string messages.\n This also allows developers and users to see customizable output values when the custom error is invoked "
        },
        "errorSelector": "9ed431ad",
        "id": 12,
        "name": "StakingPool__CantStakeZeroAmount",
        "nameLocation": "684:32:13",
        "nodeType": "ErrorDefinition",
        "parameters": {
          "id": 11,
          "nodeType": "ParameterList",
          "parameters": [
            {
              "constant": false,
              "id": 10,
              "mutability": "mutable",
              "name": "valueSent",
              "nameLocation": "722:9:13",
              "nodeType": "VariableDeclaration",
              "scope": 12,
              "src": "717:14:13",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 9,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "717:4:13",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "visibility": "internal"
            }
          ],
          "src": "716:16:13"
        },
        "src": "678:55:13"
      },
      {
        "errorSelector": "fad18f80",
        "id": 18,
        "name": "StakingPool__OnlyWhitelistAddress",
        "nameLocation": "740:33:13",
        "nodeType": "ErrorDefinition",
        "parameters": {
          "id": 17,
          "nodeType": "ParameterList",
          "parameters": [
            {
              "constant": false,
              "id": 14,
              "mutability": "mutable",
              "name": "caller",
              "nameLocation": "782:6:13",
              "nodeType": "VariableDeclaration",
              "scope": 18,
              "src": "774:14:13",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "typeName": {
                "id": 13,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "774:7:13",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "visibility": "internal"
            },
            {
              "constant": false,
              "id": 16,
              "mutability": "mutable",
              "name": "whitelistedAddress",
              "nameLocation": "798:18:13",
              "nodeType": "VariableDeclaration",
              "scope": 18,
              "src": "790:26:13",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "typeName": {
                "id": 15,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "790:7:13",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "visibility": "internal"
            }
          ],
          "src": "773:44:13"
        },
        "src": "734:84:13"
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 19,
              "name": "Ownable",
              "nameLocations": [
                "844:7:13"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1063,
              "src": "844:7:13"
            },
            "id": 20,
            "nodeType": "InheritanceSpecifier",
            "src": "844:7:13"
          },
          {
            "baseName": {
              "id": 21,
              "name": "ReentrancyGuard",
              "nameLocations": [
                "853:15:13"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1117,
              "src": "853:15:13"
            },
            "id": 22,
            "nodeType": "InheritanceSpecifier",
            "src": "853:15:13"
          }
        ],
        "canonicalName": "StakingPool",
        "contractDependencies": [
          1250
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 473,
        "linearizedBaseContracts": [
          473,
          1117,
          1063,
          1679
        ],
        "name": "StakingPool",
        "nameLocation": "829:11:13",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "f8d0c40b",
            "id": 24,
            "mutability": "mutable",
            "name": "WhitelistKeyGenerator",
            "nameLocation": "890:21:13",
            "nodeType": "VariableDeclaration",
            "scope": 473,
            "src": "875:36:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 23,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "875:7:13",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "2601d3c7",
            "id": 26,
            "mutability": "mutable",
            "name": "WITHDRAWAL_ADDRESS",
            "nameLocation": "932:18:13",
            "nodeType": "VariableDeclaration",
            "scope": 473,
            "src": "917:33:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 25,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "917:7:13",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 29,
            "mutability": "immutable",
            "name": "DepositContract",
            "nameLocation": "983:15:13",
            "nodeType": "VariableDeclaration",
            "scope": 473,
            "src": "956:42:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IDepositContract_$1290",
              "typeString": "contract IDepositContract"
            },
            "typeName": {
              "id": 28,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 27,
                "name": "IDepositContract",
                "nameLocations": [
                  "956:16:13"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1290,
                "src": "956:16:13"
              },
              "referencedDeclaration": 1290,
              "src": "956:16:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IDepositContract_$1290",
                "typeString": "contract IDepositContract"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "df8af7c2",
            "id": 32,
            "mutability": "mutable",
            "name": "ssvETH",
            "nameLocation": "1018:6:13",
            "nodeType": "VariableDeclaration",
            "scope": 473,
            "src": "1004:20:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_SSVETH_$1250",
              "typeString": "contract SSVETH"
            },
            "typeName": {
              "id": 31,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 30,
                "name": "SSVETH",
                "nameLocations": [
                  "1004:6:13"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1250,
                "src": "1004:6:13"
              },
              "referencedDeclaration": 1250,
              "src": "1004:6:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SSVETH_$1250",
                "typeString": "contract SSVETH"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "7b4bc935",
            "id": 37,
            "mutability": "immutable",
            "name": "VALIDATOR_AMOUNT",
            "nameLocation": "1055:16:13",
            "nodeType": "VariableDeclaration",
            "scope": 473,
            "src": "1030:53:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 33,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1030:7:13",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_rational_32000000000000000000_by_1",
                "typeString": "int_const 32000000000000000000"
              },
              "id": 36,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "hexValue": "3332",
                "id": 34,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1074:2:13",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_32_by_1",
                  "typeString": "int_const 32"
                },
                "value": "32"
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "hexValue": "31653138",
                "id": 35,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1079:4:13",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                  "typeString": "int_const 1000000000000000000"
                },
                "value": "1e18"
              },
              "src": "1074:9:13",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_32000000000000000000_by_1",
                "typeString": "int_const 32000000000000000000"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "07d0e540",
            "id": 39,
            "mutability": "mutable",
            "name": "SSV_TOKEN_ADDR",
            "nameLocation": "1104:14:13",
            "nodeType": "VariableDeclaration",
            "scope": 473,
            "src": "1089:29:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 38,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1089:7:13",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "cc9fbb76",
            "id": 41,
            "mutability": "mutable",
            "name": "SSV_CONTRACT_ADDR",
            "nameLocation": "1139:17:13",
            "nodeType": "VariableDeclaration",
            "scope": 473,
            "src": "1124:32:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 40,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1124:7:13",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 45,
            "mutability": "mutable",
            "name": "OperatorIDs",
            "nameLocation": "1172:11:13",
            "nodeType": "VariableDeclaration",
            "scope": 473,
            "src": "1162:21:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint32_$4_storage",
              "typeString": "uint32[4]"
            },
            "typeName": {
              "baseType": {
                "id": 42,
                "name": "uint32",
                "nodeType": "ElementaryTypeName",
                "src": "1162:6:13",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint32",
                  "typeString": "uint32"
                }
              },
              "id": 44,
              "length": {
                "hexValue": "34",
                "id": 43,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1169:1:13",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_4_by_1",
                  "typeString": "int_const 4"
                },
                "value": "4"
              },
              "nodeType": "ArrayTypeName",
              "src": "1162:9:13",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint32_$4_storage_ptr",
                "typeString": "uint32[4]"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "07dc739f",
            "id": 48,
            "mutability": "mutable",
            "name": "Validators",
            "nameLocation": "1204:10:13",
            "nodeType": "VariableDeclaration",
            "scope": 473,
            "src": "1189:25:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage",
              "typeString": "bytes[]"
            },
            "typeName": {
              "baseType": {
                "id": 46,
                "name": "bytes",
                "nodeType": "ElementaryTypeName",
                "src": "1189:5:13",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes_storage_ptr",
                  "typeString": "bytes"
                }
              },
              "id": 47,
              "nodeType": "ArrayTypeName",
              "src": "1189:7:13",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                "typeString": "bytes[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 50,
            "mutability": "mutable",
            "name": "beaconRewards",
            "nameLocation": "1272:13:13",
            "nodeType": "VariableDeclaration",
            "scope": 473,
            "src": "1264:21:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 49,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1264:7:13",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 52,
            "mutability": "mutable",
            "name": "executionRewards",
            "nameLocation": "1299:16:13",
            "nodeType": "VariableDeclaration",
            "scope": 473,
            "src": "1291:24:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 51,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1291:7:13",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 56,
            "mutability": "mutable",
            "name": "userStake",
            "nameLocation": "1358:9:13",
            "nodeType": "VariableDeclaration",
            "scope": 473,
            "src": "1322:45:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 55,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 53,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1330:7:13",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1322:27:13",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 54,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1341:7:13",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "anonymous": false,
            "eventSelector": "8c265adcfa641899d6632b86254dda7a76f27701f1d21a732621d51f2328c460",
            "id": 62,
            "name": "UserStaked",
            "nameLocation": "1380:10:13",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 61,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 58,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "user_address",
                  "nameLocation": "1399:12:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 62,
                  "src": "1391:20:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 57,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1391:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1421:6:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 62,
                  "src": "1413:14:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 59,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1413:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1390:38:13"
            },
            "src": "1374:55:13"
          },
          {
            "anonymous": false,
            "eventSelector": "144679c9e19454710222d38e13b257573a15b6ca6a4d10a1254ebc2480cb6863",
            "id": 66,
            "name": "PubKeyDeposited",
            "nameLocation": "1440:15:13",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 65,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "pubkey",
                  "nameLocation": "1462:6:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 66,
                  "src": "1456:12:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 63,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1456:5:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1455:14:13"
            },
            "src": "1434:36:13"
          },
          {
            "anonymous": false,
            "eventSelector": "a31d33307023a78b2b477792a91efbed5ee91448638292c891e81233cb6108f8",
            "id": 72,
            "name": "OperatorIDsChanged",
            "nameLocation": "1481:18:13",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 71,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 70,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newOperators",
                  "nameLocation": "1510:12:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 72,
                  "src": "1500:22:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint32_$4_memory_ptr",
                    "typeString": "uint32[4]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 67,
                      "name": "uint32",
                      "nodeType": "ElementaryTypeName",
                      "src": "1500:6:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "id": 69,
                    "length": {
                      "hexValue": "34",
                      "id": 68,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1507:1:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_4_by_1",
                        "typeString": "int_const 4"
                      },
                      "value": "4"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1500:9:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint32_$4_storage_ptr",
                      "typeString": "uint32[4]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1499:24:13"
            },
            "src": "1475:49:13"
          },
          {
            "anonymous": false,
            "eventSelector": "ce44720b7462058f31ddecab3daa427921e5975d9acb555f043682dada866569",
            "id": 76,
            "name": "SharePriceUpdated",
            "nameLocation": "1535:17:13",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 75,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newPrice",
                  "nameLocation": "1561:8:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 76,
                  "src": "1553:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 73,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1553:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1552:18:13"
            },
            "src": "1529:42:13"
          },
          {
            "anonymous": false,
            "eventSelector": "b23f6ce72d618df33a33105741ed7e13469f7f9ca6eda19e5e505b28783b1f28",
            "id": 84,
            "name": "KeySharesDeposited",
            "nameLocation": "1582:18:13",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 83,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 78,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "pubkey",
                  "nameLocation": "1616:6:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 84,
                  "src": "1610:12:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 77,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1610:5:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 80,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "sharesPublicKeys",
                  "nameLocation": "1638:16:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 84,
                  "src": "1632:22:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 79,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1632:5:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 82,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1672:6:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 84,
                  "src": "1664:14:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 81,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1664:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1600:84:13"
            },
            "src": "1576:109:13"
          },
          {
            "body": {
              "id": 144,
              "nodeType": "Block",
              "src": "1886:341:13",
              "statements": [
                {
                  "expression": {
                    "id": 103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 101,
                      "name": "WITHDRAWAL_ADDRESS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26,
                      "src": "1896:18:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 102,
                      "name": "withdrawal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 90,
                      "src": "1917:10:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1896:31:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 104,
                  "nodeType": "ExpressionStatement",
                  "src": "1896:31:13"
                },
                {
                  "expression": {
                    "id": 107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 105,
                      "name": "WhitelistKeyGenerator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24,
                      "src": "1937:21:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 106,
                      "name": "keyGenerator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 86,
                      "src": "1961:12:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1937:36:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 108,
                  "nodeType": "ExpressionStatement",
                  "src": "1937:36:13"
                },
                {
                  "expression": {
                    "id": 113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 109,
                      "name": "DepositContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29,
                      "src": "1983:15:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IDepositContract_$1290",
                        "typeString": "contract IDepositContract"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 111,
                          "name": "depositAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 88,
                          "src": "2018:14:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 110,
                        "name": "IDepositContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1290,
                        "src": "2001:16:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IDepositContract_$1290_$",
                          "typeString": "type(contract IDepositContract)"
                        }
                      },
                      "id": 112,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2001:32:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IDepositContract_$1290",
                        "typeString": "contract IDepositContract"
                      }
                    },
                    "src": "1983:50:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IDepositContract_$1290",
                      "typeString": "contract IDepositContract"
                    }
                  },
                  "id": 114,
                  "nodeType": "ExpressionStatement",
                  "src": "1983:50:13"
                },
                {
                  "assignments": [
                    117
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 117,
                      "mutability": "mutable",
                      "name": "_ssvETH",
                      "nameLocation": "2050:7:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 144,
                      "src": "2043:14:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SSVETH_$1250",
                        "typeString": "contract SSVETH"
                      },
                      "typeName": {
                        "id": 116,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 115,
                          "name": "SSVETH",
                          "nameLocations": [
                            "2043:6:13"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1250,
                          "src": "2043:6:13"
                        },
                        "referencedDeclaration": 1250,
                        "src": "2043:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SSVETH_$1250",
                          "typeString": "contract SSVETH"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 122,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 120,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "2060:10:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_SSVETH_$1250_$",
                        "typeString": "function () returns (contract SSVETH)"
                      },
                      "typeName": {
                        "id": 119,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 118,
                          "name": "SSVETH",
                          "nameLocations": [
                            "2064:6:13"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1250,
                          "src": "2064:6:13"
                        },
                        "referencedDeclaration": 1250,
                        "src": "2064:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SSVETH_$1250",
                          "typeString": "contract SSVETH"
                        }
                      }
                    },
                    "id": 121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2060:12:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SSVETH_$1250",
                      "typeString": "contract SSVETH"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2043:29:13"
                },
                {
                  "expression": {
                    "id": 130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 123,
                      "name": "ssvETH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32,
                      "src": "2082:6:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SSVETH_$1250",
                        "typeString": "contract SSVETH"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 127,
                              "name": "_ssvETH",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 117,
                              "src": "2106:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_SSVETH_$1250",
                                "typeString": "contract SSVETH"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_SSVETH_$1250",
                                "typeString": "contract SSVETH"
                              }
                            ],
                            "id": 126,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2098:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 125,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2098:7:13",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 128,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2098:16:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 124,
                        "name": "SSVETH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1250,
                        "src": "2091:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SSVETH_$1250_$",
                          "typeString": "type(contract SSVETH)"
                        }
                      },
                      "id": 129,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2091:24:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SSVETH_$1250",
                        "typeString": "contract SSVETH"
                      }
                    },
                    "src": "2082:33:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SSVETH_$1250",
                      "typeString": "contract SSVETH"
                    }
                  },
                  "id": 131,
                  "nodeType": "ExpressionStatement",
                  "src": "2082:33:13"
                },
                {
                  "expression": {
                    "id": 134,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 132,
                      "name": "SSV_CONTRACT_ADDR",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41,
                      "src": "2125:17:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 133,
                      "name": "ssv_contract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 92,
                      "src": "2145:12:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2125:32:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 135,
                  "nodeType": "ExpressionStatement",
                  "src": "2125:32:13"
                },
                {
                  "expression": {
                    "id": 138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 136,
                      "name": "SSV_TOKEN_ADDR",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39,
                      "src": "2167:14:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 137,
                      "name": "ssv_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 94,
                      "src": "2184:9:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2167:26:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 139,
                  "nodeType": "ExpressionStatement",
                  "src": "2167:26:13"
                },
                {
                  "expression": {
                    "id": 142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 140,
                      "name": "OperatorIDs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45,
                      "src": "2203:11:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint32_$4_storage",
                        "typeString": "uint32[4] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 141,
                      "name": "ids",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 98,
                      "src": "2217:3:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint32_$4_memory_ptr",
                        "typeString": "uint32[4] memory"
                      }
                    },
                    "src": "2203:17:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint32_$4_storage",
                      "typeString": "uint32[4] storage ref"
                    }
                  },
                  "id": 143,
                  "nodeType": "ExpressionStatement",
                  "src": "2203:17:13"
                }
              ]
            },
            "id": 145,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 99,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 86,
                  "mutability": "mutable",
                  "name": "keyGenerator",
                  "nameLocation": "1720:12:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 145,
                  "src": "1712:20:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 85,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1712:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 88,
                  "mutability": "mutable",
                  "name": "depositAddress",
                  "nameLocation": "1750:14:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 145,
                  "src": "1742:22:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 87,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1742:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 90,
                  "mutability": "mutable",
                  "name": "withdrawal",
                  "nameLocation": "1782:10:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 145,
                  "src": "1774:18:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 89,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1774:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 92,
                  "mutability": "mutable",
                  "name": "ssv_contract",
                  "nameLocation": "1810:12:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 145,
                  "src": "1802:20:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 91,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1802:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 94,
                  "mutability": "mutable",
                  "name": "ssv_token",
                  "nameLocation": "1840:9:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 145,
                  "src": "1832:17:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 93,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1832:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 98,
                  "mutability": "mutable",
                  "name": "ids",
                  "nameLocation": "1876:3:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 145,
                  "src": "1859:20:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint32_$4_memory_ptr",
                    "typeString": "uint32[4]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 95,
                      "name": "uint32",
                      "nodeType": "ElementaryTypeName",
                      "src": "1859:6:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "id": 97,
                    "length": {
                      "hexValue": "34",
                      "id": 96,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1866:1:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_4_by_1",
                        "typeString": "int_const 4"
                      },
                      "value": "4"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1859:9:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint32_$4_storage_ptr",
                      "typeString": "uint32[4]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1702:183:13"
            },
            "returnParameters": {
              "id": 100,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1886:0:13"
            },
            "scope": 473,
            "src": "1691:536:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 154,
              "nodeType": "Block",
              "src": "2330:50:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 150,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2363:3:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 151,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2367:5:13",
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "2363:9:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 149,
                      "name": "updateExecutionRewards",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 455,
                      "src": "2340:22:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2340:33:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 153,
                  "nodeType": "ExpressionStatement",
                  "src": "2340:33:13"
                }
              ]
            },
            "documentation": {
              "id": 146,
              "nodeType": "StructuredDocumentation",
              "src": "2233:65:13",
              "text": " @notice called when the contract receives eth"
            },
            "id": 155,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 147,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2310:2:13"
            },
            "returnParameters": {
              "id": 148,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2330:0:13"
            },
            "scope": 473,
            "src": "2303:77:13",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 165,
              "nodeType": "Block",
              "src": "2549:35:13",
              "statements": [
                {
                  "expression": {
                    "id": 163,
                    "name": "OperatorIDs",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 45,
                    "src": "2566:11:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint32_$4_storage",
                      "typeString": "uint32[4] storage ref"
                    }
                  },
                  "functionReturnParameters": 162,
                  "id": 164,
                  "nodeType": "Return",
                  "src": "2559:18:13"
                }
              ]
            },
            "documentation": {
              "id": 156,
              "nodeType": "StructuredDocumentation",
              "src": "2386:95:13",
              "text": " @notice Get operator ids, check operators here https://explorer.ssv.network/"
            },
            "functionSelector": "27a099d8",
            "id": 166,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getOperators",
            "nameLocation": "2495:12:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 157,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2507:2:13"
            },
            "returnParameters": {
              "id": 162,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 161,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 166,
                  "src": "2531:16:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint32_$4_memory_ptr",
                    "typeString": "uint32[4]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 158,
                      "name": "uint32",
                      "nodeType": "ElementaryTypeName",
                      "src": "2531:6:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "id": 160,
                    "length": {
                      "hexValue": "34",
                      "id": 159,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2538:1:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_4_by_1",
                        "typeString": "int_const 4"
                      },
                      "value": "4"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "2531:9:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint32_$4_storage_ptr",
                      "typeString": "uint32[4]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2530:18:13"
            },
            "scope": 473,
            "src": "2486:98:13",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 175,
              "nodeType": "Block",
              "src": "2704:34:13",
              "statements": [
                {
                  "expression": {
                    "id": 173,
                    "name": "Validators",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 48,
                    "src": "2721:10:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage",
                      "typeString": "bytes storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 172,
                  "id": 174,
                  "nodeType": "Return",
                  "src": "2714:17:13"
                }
              ]
            },
            "documentation": {
              "id": 167,
              "nodeType": "StructuredDocumentation",
              "src": "2590:47:13",
              "text": " @notice Get validators array"
            },
            "functionSelector": "b7ab4db5",
            "id": 176,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getValidators",
            "nameLocation": "2651:13:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 168,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2664:2:13"
            },
            "returnParameters": {
              "id": 172,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 171,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 176,
                  "src": "2688:14:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                    "typeString": "bytes[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 169,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "2688:5:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 170,
                    "nodeType": "ArrayTypeName",
                    "src": "2688:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                      "typeString": "bytes[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2687:16:13"
            },
            "scope": 473,
            "src": "2642:96:13",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 188,
              "nodeType": "Block",
              "src": "2874:47:13",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 184,
                      "name": "userStake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56,
                      "src": "2891:9:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 186,
                    "indexExpression": {
                      "id": 185,
                      "name": "_userAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 179,
                      "src": "2901:12:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2891:23:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 183,
                  "id": 187,
                  "nodeType": "Return",
                  "src": "2884:30:13"
                }
              ]
            },
            "documentation": {
              "id": 177,
              "nodeType": "StructuredDocumentation",
              "src": "2744:51:13",
              "text": " @notice Get user's staked amount"
            },
            "functionSelector": "bbadc93a",
            "id": 189,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUserStake",
            "nameLocation": "2809:12:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 180,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 179,
                  "mutability": "mutable",
                  "name": "_userAddress",
                  "nameLocation": "2830:12:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 189,
                  "src": "2822:20:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 178,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2822:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2821:22:13"
            },
            "returnParameters": {
              "id": 183,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 182,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 189,
                  "src": "2865:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 181,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2865:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2864:9:13"
            },
            "scope": 473,
            "src": "2800:121:13",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 203,
              "nodeType": "Block",
              "src": "3029:86:13",
              "statements": [
                {
                  "assignments": [
                    196
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 196,
                      "mutability": "mutable",
                      "name": "_sharePrice",
                      "nameLocation": "3047:11:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 203,
                      "src": "3039:19:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 195,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3039:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 200,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 197,
                        "name": "ssvETH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32,
                        "src": "3061:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SSVETH_$1250",
                          "typeString": "contract SSVETH"
                        }
                      },
                      "id": 198,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3068:10:13",
                      "memberName": "sharePrice",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1209,
                      "src": "3061:17:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3061:19:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3039:41:13"
                },
                {
                  "expression": {
                    "id": 201,
                    "name": "_sharePrice",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 196,
                    "src": "3097:11:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 194,
                  "id": 202,
                  "nodeType": "Return",
                  "src": "3090:18:13"
                }
              ]
            },
            "documentation": {
              "id": 190,
              "nodeType": "StructuredDocumentation",
              "src": "2927:42:13",
              "text": " @notice Get share price"
            },
            "functionSelector": "e6ebe20c",
            "id": 204,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getShareprice",
            "nameLocation": "2983:13:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 191,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2996:2:13"
            },
            "returnParameters": {
              "id": 194,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 193,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 204,
                  "src": "3020:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 192,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3020:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3019:9:13"
            },
            "scope": 473,
            "src": "2974:141:13",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 222,
              "nodeType": "Block",
              "src": "3304:92:13",
              "statements": [
                {
                  "expression": {
                    "id": 216,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 214,
                      "name": "OperatorIDs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45,
                      "src": "3314:11:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint32_$4_storage",
                        "typeString": "uint32[4] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 215,
                      "name": "_newOperators",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 209,
                      "src": "3328:13:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint32_$4_memory_ptr",
                        "typeString": "uint32[4] memory"
                      }
                    },
                    "src": "3314:27:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint32_$4_storage",
                      "typeString": "uint32[4] storage ref"
                    }
                  },
                  "id": 217,
                  "nodeType": "ExpressionStatement",
                  "src": "3314:27:13"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 219,
                        "name": "_newOperators",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 209,
                        "src": "3375:13:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint32_$4_memory_ptr",
                          "typeString": "uint32[4] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_uint32_$4_memory_ptr",
                          "typeString": "uint32[4] memory"
                        }
                      ],
                      "id": 218,
                      "name": "OperatorIDsChanged",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 72,
                      "src": "3356:18:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_array$_t_uint32_$4_memory_ptr_$returns$__$",
                        "typeString": "function (uint32[4] memory)"
                      }
                    },
                    "id": 220,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3356:33:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 221,
                  "nodeType": "EmitStatement",
                  "src": "3351:38:13"
                }
              ]
            },
            "documentation": {
              "id": 205,
              "nodeType": "StructuredDocumentation",
              "src": "3121:104:13",
              "text": " @dev Update operators\n @param _newOperators: Array of the the new operators Ids"
            },
            "functionSelector": "ed97013b",
            "id": 223,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 212,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 211,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "3294:9:13"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 982,
                  "src": "3294:9:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "3294:9:13"
              }
            ],
            "name": "updateOperators",
            "nameLocation": "3239:15:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 210,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 209,
                  "mutability": "mutable",
                  "name": "_newOperators",
                  "nameLocation": "3272:13:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 223,
                  "src": "3255:30:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint32_$4_memory_ptr",
                    "typeString": "uint32[4]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 206,
                      "name": "uint32",
                      "nodeType": "ElementaryTypeName",
                      "src": "3255:6:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "id": 208,
                    "length": {
                      "hexValue": "34",
                      "id": 207,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3262:1:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_4_by_1",
                        "typeString": "int_const 4"
                      },
                      "value": "4"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "3255:9:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint32_$4_storage_ptr",
                      "typeString": "uint32[4]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3254:32:13"
            },
            "returnParameters": {
              "id": 213,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3304:0:13"
            },
            "scope": 473,
            "src": "3230:166:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 258,
              "nodeType": "Block",
              "src": "3607:239:13",
              "statements": [
                {
                  "expression": {
                    "id": 233,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 231,
                      "name": "beaconRewards",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50,
                      "src": "3617:13:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 232,
                      "name": "_newBeaconRewards",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 226,
                      "src": "3633:17:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3617:33:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 234,
                  "nodeType": "ExpressionStatement",
                  "src": "3617:33:13"
                },
                {
                  "assignments": [
                    236
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 236,
                      "mutability": "mutable",
                      "name": "_newSharePrice",
                      "nameLocation": "3668:14:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 258,
                      "src": "3660:22:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 235,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3660:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 253,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 252,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 245,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 239,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 237,
                              "name": "beaconRewards",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 50,
                              "src": "3686:13:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 238,
                              "name": "executionRewards",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 52,
                              "src": "3714:16:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "3686:44:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 243,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 240,
                                    "name": "Validators",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 48,
                                    "src": "3746:10:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage",
                                      "typeString": "bytes storage ref[] storage ref"
                                    }
                                  },
                                  "id": 241,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "3757:6:13",
                                  "memberName": "length",
                                  "nodeType": "MemberAccess",
                                  "src": "3746:17:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "hexValue": "3332",
                                  "id": 242,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3766:2:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_32_by_1",
                                    "typeString": "int_const 32"
                                  },
                                  "value": "32"
                                },
                                "src": "3746:22:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 244,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "3745:24:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3686:83:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 246,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "3685:85:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 250,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 247,
                              "name": "Validators",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 48,
                              "src": "3774:10:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage",
                                "typeString": "bytes storage ref[] storage ref"
                              }
                            },
                            "id": 248,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3785:6:13",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "3774:17:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "3332",
                            "id": 249,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3794:2:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_32_by_1",
                              "typeString": "int_const 32"
                            },
                            "value": "32"
                          },
                          "src": "3774:22:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 251,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "3773:24:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3685:112:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3660:137:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 255,
                        "name": "_newSharePrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 236,
                        "src": "3824:14:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 254,
                      "name": "updateSharePrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 472,
                      "src": "3807:16:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 256,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3807:32:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 257,
                  "nodeType": "ExpressionStatement",
                  "src": "3807:32:13"
                }
              ]
            },
            "documentation": {
              "id": 224,
              "nodeType": "StructuredDocumentation",
              "src": "3402:125:13",
              "text": " @dev Update share price of the staking pool\n @param _newBeaconRewards: The new beacon rewards amount"
            },
            "functionSelector": "1b7e5127",
            "id": 259,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 229,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 228,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "3597:9:13"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 982,
                  "src": "3597:9:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "3597:9:13"
              }
            ],
            "name": "updateBeaconRewards",
            "nameLocation": "3541:19:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 227,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 226,
                  "mutability": "mutable",
                  "name": "_newBeaconRewards",
                  "nameLocation": "3569:17:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 259,
                  "src": "3561:25:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 225,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3561:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3560:27:13"
            },
            "returnParameters": {
              "id": 230,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3607:0:13"
            },
            "scope": 473,
            "src": "3532:314:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 309,
              "nodeType": "Block",
              "src": "3929:530:13",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 266,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 263,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "4148:3:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 264,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4152:5:13",
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "4148:9:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 265,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4161:1:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4148:14:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "documentation": "Ensuring that the caller has passed atleast some value to the function/contract. \nThis contract utilizes custom errors to optimize gas usage, instead of normal `require` conditionals ",
                  "id": 273,
                  "nodeType": "IfStatement",
                  "src": "4145:94:13",
                  "trueBody": {
                    "id": 272,
                    "nodeType": "Block",
                    "src": "4164:75:13",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 268,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4218:3:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 269,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4222:5:13",
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "src": "4218:9:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 267,
                            "name": "StakingPool__CantStakeZeroAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12,
                            "src": "4185:32:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
                              "typeString": "function (uint256) pure"
                            }
                          },
                          "id": 270,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4185:43:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 271,
                        "nodeType": "RevertStatement",
                        "src": "4178:50:13"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    275
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 275,
                      "mutability": "mutable",
                      "name": "amount_minted",
                      "nameLocation": "4256:13:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 309,
                      "src": "4248:21:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 274,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4248:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 285,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 284,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 281,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 276,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "4273:3:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 277,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4277:5:13",
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "src": "4273:9:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 278,
                                "name": "ssvETH",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32,
                                "src": "4285:6:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_SSVETH_$1250",
                                  "typeString": "contract SSVETH"
                                }
                              },
                              "id": 279,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4292:10:13",
                              "memberName": "sharePrice",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1209,
                              "src": "4285:17:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                "typeString": "function () view external returns (uint256)"
                              }
                            },
                            "id": 280,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4285:19:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4273:31:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 282,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "4272:33:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "31653138",
                      "id": 283,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4308:4:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      },
                      "value": "1e18"
                    },
                    "src": "4272:40:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4248:64:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 289,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4334:3:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 290,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4338:6:13",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4334:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 291,
                        "name": "amount_minted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 275,
                        "src": "4346:13:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 286,
                        "name": "ssvETH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32,
                        "src": "4322:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SSVETH_$1250",
                          "typeString": "contract SSVETH"
                        }
                      },
                      "id": 288,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4329:4:13",
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1237,
                      "src": "4322:11:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 292,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4322:38:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 293,
                  "nodeType": "ExpressionStatement",
                  "src": "4322:38:13"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 295,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4386:3:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 296,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4390:6:13",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4386:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 297,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4398:3:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 298,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4402:5:13",
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "4398:9:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 294,
                      "name": "UserStaked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 62,
                      "src": "4375:10:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 299,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4375:33:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 300,
                  "nodeType": "EmitStatement",
                  "src": "4370:38:13"
                },
                {
                  "expression": {
                    "id": 307,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 301,
                        "name": "userStake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56,
                        "src": "4418:9:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 304,
                      "indexExpression": {
                        "expression": {
                          "id": 302,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4428:3:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 303,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4432:6:13",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4428:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4418:21:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "expression": {
                        "id": 305,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "4443:3:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 306,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4447:5:13",
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "4443:9:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4418:34:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 308,
                  "nodeType": "ExpressionStatement",
                  "src": "4418:34:13"
                }
              ]
            },
            "documentation": {
              "id": 260,
              "nodeType": "StructuredDocumentation",
              "src": "3852:39:13",
              "text": " @notice Stake tokens"
            },
            "functionSelector": "3a4b66f1",
            "id": 310,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "stake",
            "nameLocation": "3906:5:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 261,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3911:2:13"
            },
            "returnParameters": {
              "id": 262,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3929:0:13"
            },
            "scope": 473,
            "src": "3897:562:13",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 355,
              "nodeType": "Block",
              "src": "4597:251:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 319,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4627:3:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 320,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4631:6:13",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4627:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 323,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4647:4:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakingPool_$473",
                              "typeString": "contract StakingPool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StakingPool_$473",
                              "typeString": "contract StakingPool"
                            }
                          ],
                          "id": 322,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4639:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 321,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4639:7:13",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 324,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4639:13:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 325,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 313,
                        "src": "4654:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 316,
                        "name": "ssvETH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32,
                        "src": "4607:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SSVETH_$1250",
                          "typeString": "contract SSVETH"
                        }
                      },
                      "id": 318,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4614:12:13",
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2195,
                      "src": "4607:19:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 326,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4607:55:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 327,
                  "nodeType": "ExpressionStatement",
                  "src": "4607:55:13"
                },
                {
                  "assignments": [
                    329
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 329,
                      "mutability": "mutable",
                      "name": "_amount_to_transfer",
                      "nameLocation": "4680:19:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 355,
                      "src": "4672:27:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 328,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4672:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 338,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 337,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 334,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 330,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 313,
                            "src": "4703:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 331,
                                "name": "ssvETH",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32,
                                "src": "4713:6:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_SSVETH_$1250",
                                  "typeString": "contract SSVETH"
                                }
                              },
                              "id": 332,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4720:10:13",
                              "memberName": "sharePrice",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1209,
                              "src": "4713:17:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                "typeString": "function () view external returns (uint256)"
                              }
                            },
                            "id": 333,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4713:19:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4703:29:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 335,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "4702:31:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "hexValue": "31653138",
                      "id": 336,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4736:4:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      },
                      "value": "1e18"
                    },
                    "src": "4702:38:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4672:68:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 345,
                        "name": "_amount_to_transfer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 329,
                        "src": "4779:19:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 341,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "4758:3:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 342,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4762:6:13",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4758:10:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 340,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4750:8:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 339,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4750:8:13",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 343,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4750:19:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 344,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4770:8:13",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "4750:28:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 346,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4750:49:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 347,
                  "nodeType": "ExpressionStatement",
                  "src": "4750:49:13"
                },
                {
                  "expression": {
                    "id": 353,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 348,
                        "name": "userStake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56,
                        "src": "4809:9:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 351,
                      "indexExpression": {
                        "expression": {
                          "id": 349,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4819:3:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 350,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4823:6:13",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4819:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4809:21:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 352,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 313,
                      "src": "4834:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4809:32:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 354,
                  "nodeType": "ExpressionStatement",
                  "src": "4809:32:13"
                }
              ]
            },
            "documentation": {
              "id": 311,
              "nodeType": "StructuredDocumentation",
              "src": "4465:86:13",
              "text": " @notice Unstake tokens\n @param _amount: Amount to be unstaked"
            },
            "functionSelector": "5d3eea91",
            "id": 356,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unStake",
            "nameLocation": "4565:7:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 314,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 313,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "4581:7:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 356,
                  "src": "4573:15:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 312,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4573:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4572:17:13"
            },
            "returnParameters": {
              "id": 315,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4597:0:13"
            },
            "scope": 473,
            "src": "4556:292:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 383,
              "nodeType": "Block",
              "src": "5366:347:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 373,
                        "name": "_pubkey",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 359,
                        "src": "5495:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "id": 374,
                        "name": "_withdrawal_credentials",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 361,
                        "src": "5516:23:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "id": 375,
                        "name": "_signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 363,
                        "src": "5553:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "id": 376,
                        "name": "_deposit_data_root",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 365,
                        "src": "5577:18:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          },
                          {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          },
                          {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "expression": {
                          "id": 368,
                          "name": "DepositContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29,
                          "src": "5433:15:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IDepositContract_$1290",
                            "typeString": "contract IDepositContract"
                          }
                        },
                        "id": 370,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5449:7:13",
                        "memberName": "deposit",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1277,
                        "src": "5433:23:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes32_$returns$__$",
                          "typeString": "function (bytes memory,bytes memory,bytes memory,bytes32) payable external"
                        }
                      },
                      "id": 372,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 371,
                          "name": "VALIDATOR_AMOUNT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37,
                          "src": "5464:16:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "5433:48:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes32_$returns$__$value",
                        "typeString": "function (bytes memory,bytes memory,bytes memory,bytes32) payable external"
                      }
                    },
                    "id": 377,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5433:172:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 378,
                  "nodeType": "ExpressionStatement",
                  "src": "5433:172:13"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 380,
                        "name": "_pubkey",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 359,
                        "src": "5698:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "id": 379,
                      "name": "PubKeyDeposited",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66,
                      "src": "5682:15:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory)"
                      }
                    },
                    "id": 381,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5682:24:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 382,
                  "nodeType": "EmitStatement",
                  "src": "5677:29:13"
                }
              ]
            },
            "documentation": {
              "id": 357,
              "nodeType": "StructuredDocumentation",
              "src": "4854:315:13",
              "text": " @notice Deposit a validator to the deposit contract\n @param _pubkey: Public key of the validator\n @param _withdrawal_credentials: Withdrawal credentials of the validator\n @param _signature: Signature of the deposit data\n @param _deposit_data_root: Root of the deposit data"
            },
            "functionSelector": "bf3a6c0a",
            "id": 384,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "depositValidator",
            "nameLocation": "5183:16:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 366,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 359,
                  "mutability": "mutable",
                  "name": "_pubkey",
                  "nameLocation": "5224:7:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 384,
                  "src": "5209:22:13",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 358,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5209:5:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 361,
                  "mutability": "mutable",
                  "name": "_withdrawal_credentials",
                  "nameLocation": "5256:23:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 384,
                  "src": "5241:38:13",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 360,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5241:5:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 363,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "5304:10:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 384,
                  "src": "5289:25:13",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 362,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5289:5:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 365,
                  "mutability": "mutable",
                  "name": "_deposit_data_root",
                  "nameLocation": "5332:18:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 384,
                  "src": "5324:26:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 364,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5324:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5199:157:13"
            },
            "returnParameters": {
              "id": 367,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5366:0:13"
            },
            "scope": 473,
            "src": "5174:539:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 443,
              "nodeType": "Block",
              "src": "6313:907:13",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 403,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 400,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "6507:3:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 401,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6511:6:13",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "6507:10:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 402,
                      "name": "WhitelistKeyGenerator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24,
                      "src": "6521:21:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6507:35:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 411,
                  "nodeType": "IfStatement",
                  "src": "6504:140:13",
                  "trueBody": {
                    "id": 410,
                    "nodeType": "Block",
                    "src": "6544:100:13",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 405,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "6599:3:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 406,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6603:6:13",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "6599:10:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 407,
                              "name": "WhitelistKeyGenerator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24,
                              "src": "6611:21:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 404,
                            "name": "StakingPool__OnlyWhitelistAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18,
                            "src": "6565:33:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address) pure"
                            }
                          },
                          "id": 408,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6565:68:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 409,
                        "nodeType": "RevertStatement",
                        "src": "6558:75:13"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 416,
                        "name": "SSV_CONTRACT_ADDR",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41,
                        "src": "6746:17:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 417,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 394,
                        "src": "6765:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 413,
                            "name": "SSV_TOKEN_ADDR",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39,
                            "src": "6722:14:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 412,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1195,
                          "src": "6715:6:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$1195_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 414,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6715:22:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1195",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 415,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6738:7:13",
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1182,
                      "src": "6715:30:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 418,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6715:58:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 419,
                  "nodeType": "ExpressionStatement",
                  "src": "6715:58:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 424,
                        "name": "_pubkey",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 387,
                        "src": "6902:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "id": 425,
                        "name": "_operatorIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 390,
                        "src": "6923:12:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint64_$dyn_calldata_ptr",
                          "typeString": "uint64[] calldata"
                        }
                      },
                      {
                        "id": 426,
                        "name": "_shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 392,
                        "src": "6949:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "id": 427,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 394,
                        "src": "6970:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 428,
                        "name": "_cluster",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 397,
                        "src": "6991:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Cluster_$2629_memory_ptr",
                          "typeString": "struct ISSVNetworkCore.Cluster memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint64_$dyn_calldata_ptr",
                          "typeString": "uint64[] calldata"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_struct$_Cluster_$2629_memory_ptr",
                          "typeString": "struct ISSVNetworkCore.Cluster memory"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 421,
                            "name": "SSV_CONTRACT_ADDR",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41,
                            "src": "6852:17:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 420,
                          "name": "ISSVNetwork",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1657,
                          "src": "6840:11:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ISSVNetwork_$1657_$",
                            "typeString": "type(contract ISSVNetwork)"
                          }
                        },
                        "id": 422,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6840:30:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISSVNetwork_$1657",
                          "typeString": "contract ISSVNetwork"
                        }
                      },
                      "id": 423,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6871:17:13",
                      "memberName": "registerValidator",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1552,
                      "src": "6840:48:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$_t_array$_t_uint64_$dyn_memory_ptr_$_t_bytes_memory_ptr_$_t_uint256_$_t_struct$_Cluster_$2629_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory,uint64[] memory,bytes memory,uint256,struct ISSVNetworkCore.Cluster memory) external"
                      }
                    },
                    "id": 429,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6840:169:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 430,
                  "nodeType": "ExpressionStatement",
                  "src": "6840:169:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 434,
                        "name": "_pubkey",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 387,
                        "src": "7091:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "expression": {
                        "id": 431,
                        "name": "Validators",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48,
                        "src": "7075:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage",
                          "typeString": "bytes storage ref[] storage ref"
                        }
                      },
                      "id": 433,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7086:4:13",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "7075:15:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_bytes_storage_$dyn_storage_ptr_$_t_bytes_storage_$returns$__$attached_to$_t_array$_t_bytes_storage_$dyn_storage_ptr_$",
                        "typeString": "function (bytes storage ref[] storage pointer,bytes storage ref)"
                      }
                    },
                    "id": 435,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7075:24:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 436,
                  "nodeType": "ExpressionStatement",
                  "src": "7075:24:13"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 438,
                        "name": "_pubkey",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 387,
                        "src": "7187:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "id": 439,
                        "name": "_shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 392,
                        "src": "7196:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "id": 440,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 394,
                        "src": "7205:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 437,
                      "name": "KeySharesDeposited",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 84,
                      "src": "7168:18:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (bytes memory,bytes memory,uint256)"
                      }
                    },
                    "id": 441,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7168:45:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 442,
                  "nodeType": "EmitStatement",
                  "src": "7163:50:13"
                }
              ]
            },
            "documentation": {
              "id": 385,
              "nodeType": "StructuredDocumentation",
              "src": "5719:373:13",
              "text": " @notice Deposit shares for a validator\n @param _pubkey: Public key of the validator\n @param _operatorIds: IDs of the validator's operators\n @param _shares: Public keys of the shares\n @param _amount: Amount of tokens to be deposited\n @param _cluster: Latest Cluster information\n @dev Callable by the whitelisted address"
            },
            "functionSelector": "98e4349f",
            "id": 444,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "depositShares",
            "nameLocation": "6106:13:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 398,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 387,
                  "mutability": "mutable",
                  "name": "_pubkey",
                  "nameLocation": "6144:7:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 444,
                  "src": "6129:22:13",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 386,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6129:5:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 390,
                  "mutability": "mutable",
                  "name": "_operatorIds",
                  "nameLocation": "6179:12:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 444,
                  "src": "6161:30:13",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint64_$dyn_calldata_ptr",
                    "typeString": "uint64[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 388,
                      "name": "uint64",
                      "nodeType": "ElementaryTypeName",
                      "src": "6161:6:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "id": 389,
                    "nodeType": "ArrayTypeName",
                    "src": "6161:8:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint64_$dyn_storage_ptr",
                      "typeString": "uint64[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 392,
                  "mutability": "mutable",
                  "name": "_shares",
                  "nameLocation": "6216:7:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 444,
                  "src": "6201:22:13",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 391,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6201:5:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 394,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "6241:7:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 444,
                  "src": "6233:15:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 393,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6233:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 397,
                  "mutability": "mutable",
                  "name": "_cluster",
                  "nameLocation": "6289:8:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 444,
                  "src": "6258:39:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Cluster_$2629_memory_ptr",
                    "typeString": "struct ISSVNetworkCore.Cluster"
                  },
                  "typeName": {
                    "id": 396,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 395,
                      "name": "ISSVNetworkCore.Cluster",
                      "nameLocations": [
                        "6258:15:13",
                        "6274:7:13"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2629,
                      "src": "6258:23:13"
                    },
                    "referencedDeclaration": 2629,
                    "src": "6258:23:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Cluster_$2629_storage_ptr",
                      "typeString": "struct ISSVNetworkCore.Cluster"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6119:184:13"
            },
            "returnParameters": {
              "id": 399,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6313:0:13"
            },
            "scope": 473,
            "src": "6097:1123:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 454,
              "nodeType": "Block",
              "src": "7421:57:13",
              "statements": [
                {
                  "expression": {
                    "id": 452,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 450,
                      "name": "executionRewards",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52,
                      "src": "7431:16:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 451,
                      "name": "_newExecutionRewards",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 447,
                      "src": "7451:20:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7431:40:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 453,
                  "nodeType": "ExpressionStatement",
                  "src": "7431:40:13"
                }
              ]
            },
            "documentation": {
              "id": 445,
              "nodeType": "StructuredDocumentation",
              "src": "7226:119:13",
              "text": " @notice update execution rewards\n @param _newExecutionRewards:  Execution rewards amount added"
            },
            "id": 455,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateExecutionRewards",
            "nameLocation": "7359:22:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 448,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 447,
                  "mutability": "mutable",
                  "name": "_newExecutionRewards",
                  "nameLocation": "7390:20:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 455,
                  "src": "7382:28:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 446,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7382:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7381:30:13"
            },
            "returnParameters": {
              "id": 449,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7421:0:13"
            },
            "scope": 473,
            "src": "7350:128:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 471,
              "nodeType": "Block",
              "src": "7667:104:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 464,
                        "name": "_newSharePrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 458,
                        "src": "7701:14:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 461,
                        "name": "ssvETH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32,
                        "src": "7677:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SSVETH_$1250",
                          "typeString": "contract SSVETH"
                        }
                      },
                      "id": 463,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7684:16:13",
                      "memberName": "changeSharePrice",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1249,
                      "src": "7677:23:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 465,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7677:39:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 466,
                  "nodeType": "ExpressionStatement",
                  "src": "7677:39:13"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 468,
                        "name": "_newSharePrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 458,
                        "src": "7749:14:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 467,
                      "name": "SharePriceUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 76,
                      "src": "7731:17:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 469,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7731:33:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 470,
                  "nodeType": "EmitStatement",
                  "src": "7726:38:13"
                }
              ]
            },
            "documentation": {
              "id": 456,
              "nodeType": "StructuredDocumentation",
              "src": "7484:119:13",
              "text": " @dev Update share price of the staking pool\n @param _newSharePrice: The new share price amount"
            },
            "id": 472,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateSharePrice",
            "nameLocation": "7617:16:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 459,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 458,
                  "mutability": "mutable",
                  "name": "_newSharePrice",
                  "nameLocation": "7642:14:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 472,
                  "src": "7634:22:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 457,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7634:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7633:24:13"
            },
            "returnParameters": {
              "id": 460,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7667:0:13"
            },
            "scope": 473,
            "src": "7608:163:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 474,
        "src": "820:6954:13",
        "usedErrors": [
          12,
          18
        ]
      }
    ],
    "src": "31:7744:13"
  },
  "bytecode": "60c06040526801bc16d674ec80000060a0523480156200001e57600080fd5b50604051620029053803806200290583398101604081905262000041916200026c565b6200004c336200010c565b60018055600380546001600160a01b038087166001600160a01b031992831617909255600280548984169216919091179055851660805260405160009062000094906200015c565b604051809103906000f080158015620000b1573d6000803e3d6000fd5b50600480546001600160a01b038084166001600160a01b0319928316178355600680548983169084161790556005805491881691909216179055909150620000fe9060079084906200016a565b50505050505050506200035a565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610e1a8062001aeb83390190565b600183019183908215620001fb5791602002820160005b83821115620001c757835183826101000a81548163ffffffff021916908363ffffffff160217905550926020019260040160208160030104928301926001030262000181565b8015620001f95782816101000a81549063ffffffff0219169055600401602081600301049283019260010302620001c7565b505b50620002099291506200020d565b5090565b5b808211156200020957600081556001016200020e565b80516001600160a01b03811681146200023c57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b805163ffffffff811681146200023c57600080fd5b60008060008060008061012080888a0312156200028857600080fd5b620002938862000224565b96506020620002a4818a0162000224565b9650620002b460408a0162000224565b9550620002c460608a0162000224565b9450620002d460808a0162000224565b93508960bf8a0112620002e657600080fd5b604051608081016001600160401b03811182821017156200030b576200030b62000241565b60405291890191808b8411156200032157600080fd5b60a08b015b8481101562000348576200033a8162000257565b825290830190830162000326565b50508093505050509295509295509295565b60805160a05161176462000387600039600081816102530152610b3701526000610b0e01526117646000f3fe6080604052600436106101235760003560e01c806398e4349f116100a0578063df8af7c211610064578063df8af7c214610359578063e6ebe20c14610379578063ed97013b1461038e578063f2fde38b146103ae578063f8d0c40b146103ce57600080fd5b806398e4349f146102a1578063b7ab4db5146102c1578063bbadc93a146102e3578063bf3a6c0a14610319578063cc9fbb761461033957600080fd5b80633a4b66f1116100e75780633a4b66f1146102045780635d3eea911461020c578063715018a61461022c5780637b4bc935146102415780638da5cb5b1461028357600080fd5b806307d0e5401461013857806307dc739f146101755780631b7e5127146101a25780632601d3c7146101c257806327a099d8146101e257600080fd5b3661013357610131346103ee565b005b600080fd5b34801561014457600080fd5b50600554610158906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561018157600080fd5b50610195610190366004610f27565b610408565b60405161016c9190610f86565b3480156101ae57600080fd5b506101316101bd366004610f27565b6104b4565b3480156101ce57600080fd5b50600354610158906001600160a01b031681565b3480156101ee57600080fd5b506101f7610513565b60405161016c9190610fa0565b610131610579565b34801561021857600080fd5b50610131610227366004610f27565b6106ec565b34801561023857600080fd5b50610131610857565b34801561024d57600080fd5b506102757f000000000000000000000000000000000000000000000000000000000000000081565b60405190815260200161016c565b34801561028f57600080fd5b506000546001600160a01b0316610158565b3480156102ad57600080fd5b506101316102bc366004611102565b61086b565b3480156102cd57600080fd5b506102d6610a1e565b60405161016c91906111e8565b3480156102ef57600080fd5b506102756102fe36600461124a565b6001600160a01b03166000908152600b602052604090205490565b34801561032557600080fd5b50610131610334366004611273565b610af7565b34801561034557600080fd5b50600654610158906001600160a01b031681565b34801561036557600080fd5b50600454610158906001600160a01b031681565b34801561038557600080fd5b50610275610be5565b34801561039a57600080fd5b506101316103a9366004611316565b610c58565b3480156103ba57600080fd5b506101316103c936600461124a565b610ca8565b3480156103da57600080fd5b50600254610158906001600160a01b031681565b80600a600082825461040091906113b1565b909155505050565b6008818154811061041857600080fd5b906000526020600020016000915090508054610433906113c4565b80601f016020809104026020016040519081016040528092919081815260200182805461045f906113c4565b80156104ac5780601f10610481576101008083540402835291602001916104ac565b820191906000526020600020905b81548152906001019060200180831161048f57829003601f168201915b505050505081565b6104bc610d21565b60098190556008546000906104d29060206113fe565b6008546104e09060206113fe565b600a546009546104f091906113b1565b6104fa91906113b1565b6105049190611415565b905061050f81610d7b565b5050565b61051b610e58565b60408051608081019182905290600790600490826000855b82829054906101000a900463ffffffff1663ffffffff16815260200190600401906020826003010492830192600103820291508084116105335790505050505050905090565b600034116105a157604051639ed431ad60e01b81523460048201526024015b60405180910390fd5b6004805460408051638726972960e01b81529051600093670de0b6b3a7640000936001600160a01b031692638726972992818301926020928290030181865afa1580156105f2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106169190611437565b61062090346113fe565b61062a9190611415565b600480546040516340c10f1960e01b81523392810192909252602482018390529192506001600160a01b03909116906340c10f1990604401600060405180830381600087803b15801561067c57600080fd5b505af1158015610690573d6000803e3d6000fd5b5050604080513381523460208201527f8c265adcfa641899d6632b86254dda7a76f27701f1d21a732621d51f2328c460935001905060405180910390a1336000908152600b6020526040812080543492906104009084906113b1565b600480546040516323b872dd60e01b81523392810192909252306024830152604482018390526001600160a01b0316906323b872dd906064016020604051808303816000875af1158015610744573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107689190611450565b506000600460009054906101000a90046001600160a01b03166001600160a01b031663872697296040518163ffffffff1660e01b8152600401602060405180830381865afa1580156107be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107e29190611437565b6107ec9083611415565b6107fe90670de0b6b3a76400006113fe565b604051909150339082156108fc029083906000818181858888f1935050505015801561082e573d6000803e3d6000fd5b50336000908152600b60205260408120805484929061084e90849061146d565b90915550505050565b61085f610d21565b6108696000610e08565b565b6002546001600160a01b031633146108ab576002546040516301f5a31f60e71b81523360048201526001600160a01b039091166024820152604401610598565b60055460065460405163095ea7b360e01b81526001600160a01b0391821660048201526024810185905291169063095ea7b3906044016020604051808303816000875af1158015610900573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109249190611450565b5060065460405163967ef80760e01b81526001600160a01b039091169063967ef80790610963908b908b908b908b908b908b908b908b906004016114a9565b600060405180830381600087803b15801561097d57600080fd5b505af1158015610991573d6000803e3d6000fd5b5050600880546001810182556000919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30191506109d49050888a836115c6565b507fb23f6ce72d618df33a33105741ed7e13469f7f9ca6eda19e5e505b28783b1f288888868686604051610a0c959493929190611687565b60405180910390a15050505050505050565b60606008805480602002602001604051908101604052809291908181526020016000905b82821015610aee578382906000526020600020018054610a61906113c4565b80601f0160208091040260200160405190810160405280929190818152602001828054610a8d906113c4565b8015610ada5780601f10610aaf57610100808354040283529160200191610ada565b820191906000526020600020905b815481529060010190602001808311610abd57829003601f168201915b505050505081526020019060010190610a42565b50505050905090565b6040516304512a2360e31b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906322895118907f000000000000000000000000000000000000000000000000000000000000000090610b71908b908b908b908b908b908b908b906004016116c1565b6000604051808303818588803b158015610b8a57600080fd5b505af1158015610b9e573d6000803e3d6000fd5b50505050507f144679c9e19454710222d38e13b257573a15b6ca6a4d10a1254ebc2480cb68638787604051610bd4929190611712565b60405180910390a150505050505050565b6004805460408051638726972960e01b8152905160009384936001600160a01b031692638726972992818301926020928290030181865afa158015610c2e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c529190611437565b92915050565b610c60610d21565b610c6d6007826004610e76565b507fa31d33307023a78b2b477792a91efbed5ee91448638292c891e81233cb6108f881604051610c9d9190610fa0565b60405180910390a150565b610cb0610d21565b6001600160a01b038116610d155760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610598565b610d1e81610e08565b50565b6000546001600160a01b031633146108695760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610598565b60048054604051634164020160e01b81529182018390526001600160a01b031690634164020190602401600060405180830381600087803b158015610dbf57600080fd5b505af1158015610dd3573d6000803e3d6000fd5b505050507fce44720b7462058f31ddecab3daa427921e5975d9acb555f043682dada86656981604051610c9d91815260200190565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60405180608001604052806004906020820280368337509192915050565b600183019183908215610f025791602002820160005b83821115610ed057835183826101000a81548163ffffffff021916908363ffffffff1602179055509260200192600401602081600301049283019260010302610e8c565b8015610f005782816101000a81549063ffffffff0219169055600401602081600301049283019260010302610ed0565b505b50610f0e929150610f12565b5090565b5b80821115610f0e5760008155600101610f13565b600060208284031215610f3957600080fd5b5035919050565b6000815180845260005b81811015610f6657602081850181015186830182015201610f4a565b506000602082860101526020601f19601f83011685010191505092915050565b602081526000610f996020830184610f40565b9392505050565b60808101818360005b6004811015610fce57815163ffffffff16835260209283019290910190600101610fa9565b50505092915050565b60008083601f840112610fe957600080fd5b50813567ffffffffffffffff81111561100157600080fd5b60208301915083602082850101111561101957600080fd5b9250929050565b634e487b7160e01b600052604160045260246000fd5b803563ffffffff8116811461104a57600080fd5b919050565b803567ffffffffffffffff8116811461104a57600080fd5b8015158114610d1e57600080fd5b600060a0828403121561108757600080fd5b60405160a0810181811067ffffffffffffffff821117156110aa576110aa611020565b6040529050806110b983611036565b81526110c76020840161104f565b60208201526110d86040840161104f565b60408201526060830135606082015260808301356110f581611067565b6080919091015292915050565b600080600080600080600080610120898b03121561111f57600080fd5b883567ffffffffffffffff8082111561113757600080fd5b6111438c838d01610fd7565b909a50985060208b013591508082111561115c57600080fd5b818b0191508b601f83011261117057600080fd5b81358181111561117f57600080fd5b8c60208260051b850101111561119457600080fd5b6020830198508097505060408b01359150808211156111b257600080fd5b506111bf8b828c01610fd7565b909550935050606089013591506111d98a60808b01611075565b90509295985092959890939650565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561123d57603f1988860301845261122b858351610f40565b9450928501929085019060010161120f565b5092979650505050505050565b60006020828403121561125c57600080fd5b81356001600160a01b0381168114610f9957600080fd5b60008060008060008060006080888a03121561128e57600080fd5b873567ffffffffffffffff808211156112a657600080fd5b6112b28b838c01610fd7565b909950975060208a01359150808211156112cb57600080fd5b6112d78b838c01610fd7565b909750955060408a01359150808211156112f057600080fd5b506112fd8a828b01610fd7565b989b979a50959894979596606090950135949350505050565b60006080828403121561132857600080fd5b82601f83011261133757600080fd5b6040516080810181811067ffffffffffffffff8211171561135a5761135a611020565b60405280608084018581111561136f57600080fd5b845b818110156113905761138281611036565b835260209283019201611371565b509195945050505050565b634e487b7160e01b600052601160045260246000fd5b80820180821115610c5257610c5261139b565b600181811c908216806113d857607f821691505b6020821081036113f857634e487b7160e01b600052602260045260246000fd5b50919050565b8082028115828204841417610c5257610c5261139b565b60008261143257634e487b7160e01b600052601260045260246000fd5b500490565b60006020828403121561144957600080fd5b5051919050565b60006020828403121561146257600080fd5b8151610f9981611067565b81810381811115610c5257610c5261139b565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60006101208083526114be8184018b8d611480565b8381036020858101919091528982528a925090810160005b8a8110156115035767ffffffffffffffff6114f08561104f565b16825292820192908201906001016114d6565b50848103604086015261151781898b611480565b93505085606085015263ffffffff85511660808501528085015191505067ffffffffffffffff80821660a08501528060408601511660c08501525050606083015160e0830152608083015115156101008301529998505050505050505050565b601f8211156115c157600081815260208120601f850160051c8101602086101561159e5750805b601f850160051c820191505b818110156115bd578281556001016115aa565b5050505b505050565b67ffffffffffffffff8311156115de576115de611020565b6115f2836115ec83546113c4565b83611577565b6000601f841160018114611626576000851561160e5750838201355b600019600387901b1c1916600186901b178355611680565b600083815260209020601f19861690835b828110156116575786850135825560209485019460019092019101611637565b50868210156116745760001960f88860031b161c19848701351681555b505060018560011b0183555b5050505050565b60608152600061169b606083018789611480565b82810360208401526116ae818688611480565b9150508260408301529695505050505050565b6080815260006116d560808301898b611480565b82810360208401526116e881888a611480565b905082810360408401526116fd818688611480565b91505082606083015298975050505050505050565b602081526000611726602083018486611480565b94935050505056fea2646970667358221220b44c497520ed940a8e3f8515ba04b58a179aab218309d0dbcfe0f47e771d257864736f6c634300081200336080604052670de0b6b3a76400006007553480156200001d57600080fd5b506040518060400160405280601d81526020017f646563656e7472616c697a65207374616b696e67207769746820737376000000815250604051806040016040528060068152602001650e6e6ec8aa8960d31b8152508160039081620000849190620001c3565b506004620000938282620001c3565b505050620000b0620000aa620000c860201b60201c565b620000cc565b600680546001600160a01b031916331790556200028f565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200014957607f821691505b6020821081036200016a57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620001be57600081815260208120601f850160051c81016020861015620001995750805b601f850160051c820191505b81811015620001ba57828155600101620001a5565b5050505b505050565b81516001600160401b03811115620001df57620001df6200011e565b620001f781620001f0845462000134565b8462000170565b602080601f8311600181146200022f5760008415620002165750858301515b600019600386901b1c1916600185901b178555620001ba565b600085815260208120601f198616915b8281101562000260578886015182559484019460019091019084016200023f565b50858210156200027f5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b610b7b806200029f6000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c806370a08231116100a257806395d89b411161007157806395d89b4114610241578063a457c2d714610249578063a9059cbb1461025c578063dd62ed3e1461026f578063f2fde38b1461028257600080fd5b806370a08231146101f6578063715018a61461021f57806387269729146102275780638da5cb5b1461023057600080fd5b806323b872dd116100e957806323b872dd14610199578063313ce567146101ac57806339509351146101bb57806340c10f19146101ce57806341640201146101e357600080fd5b806306fdde031461011b5780630754617214610139578063095ea7b31461016457806318160ddd14610187575b600080fd5b610123610295565b60405161013091906109ac565b60405180910390f35b60065461014c906001600160a01b031681565b6040516001600160a01b039091168152602001610130565b610177610172366004610a16565b610327565b6040519015158152602001610130565b6002545b604051908152602001610130565b6101776101a7366004610a40565b610341565b60405160128152602001610130565b6101776101c9366004610a16565b610365565b6101e16101dc366004610a16565b610387565b005b6101e16101f1366004610a7c565b61039d565b61018b610204366004610a95565b6001600160a01b031660009081526020819052604090205490565b6101e16103aa565b61018b60075481565b6005546001600160a01b031661014c565b6101236103be565b610177610257366004610a16565b6103cd565b61017761026a366004610a16565b61044d565b61018b61027d366004610ab7565b61045b565b6101e1610290366004610a95565b610486565b6060600380546102a490610aea565b80601f01602080910402602001604051908101604052809291908181526020018280546102d090610aea565b801561031d5780601f106102f25761010080835404028352916020019161031d565b820191906000526020600020905b81548152906001019060200180831161030057829003601f168201915b5050505050905090565b6000336103358185856104ff565b60019150505b92915050565b60003361034f858285610623565b61035a85858561069d565b506001949350505050565b600033610335818585610378838361045b565b6103829190610b24565b6104ff565b61038f610841565b610399828261089b565b5050565b6103a5610841565b600755565b6103b2610841565b6103bc600061095a565b565b6060600480546102a490610aea565b600033816103db828661045b565b9050838110156104405760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b61035a82868684036104ff565b60003361033581858561069d565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61048e610841565b6001600160a01b0381166104f35760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610437565b6104fc8161095a565b50565b6001600160a01b0383166105615760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610437565b6001600160a01b0382166105c25760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610437565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600061062f848461045b565b90506000198114610697578181101561068a5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610437565b61069784848484036104ff565b50505050565b6001600160a01b0383166107015760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610437565b6001600160a01b0382166107635760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610437565b6001600160a01b038316600090815260208190526040902054818110156107db5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610437565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610697565b6005546001600160a01b031633146103bc5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610437565b6001600160a01b0382166108f15760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610437565b80600260008282546109039190610b24565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600060208083528351808285015260005b818110156109d9578581018301518582016040015282016109bd565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610a1157600080fd5b919050565b60008060408385031215610a2957600080fd5b610a32836109fa565b946020939093013593505050565b600080600060608486031215610a5557600080fd5b610a5e846109fa565b9250610a6c602085016109fa565b9150604084013590509250925092565b600060208284031215610a8e57600080fd5b5035919050565b600060208284031215610aa757600080fd5b610ab0826109fa565b9392505050565b60008060408385031215610aca57600080fd5b610ad3836109fa565b9150610ae1602084016109fa565b90509250929050565b600181811c90821680610afe57607f821691505b602082108103610b1e57634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561033b57634e487b7160e01b600052601160045260246000fdfea2646970667358221220ba5c4a38d36085826d3caeea30cec59042e4336cda952e167f7ccbc40822a12364736f6c63430008120033",
  "bytecodeSha1": "2bbf600ec56404268d95c7a0e1b7885d8c55b198",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.18+commit.87f61d96"
  },
  "contractName": "StakingPool",
  "coverageMap": {
    "branches": {
      "12": {},
      "13": {
        "StakingPool.depositShares": {
          "34": [
            6507,
            6542,
            false
          ]
        },
        "StakingPool.stake": {
          "33": [
            4148,
            4162,
            false
          ]
        }
      },
      "16": {},
      "17": {},
      "2": {
        "Ownable._checkOwner": {
          "36": [
            1422,
            1445,
            true
          ]
        },
        "Ownable.transferOwnership": {
          "35": [
            2169,
            2191,
            true
          ]
        }
      },
      "3": {},
      "4": {},
      "5": {},
      "6": {},
      "7": {}
    },
    "statements": {
      "12": {},
      "13": {
        "StakingPool.<receive>": {
          "0": [
            2340,
            2373
          ]
        },
        "StakingPool.depositShares": {
          "15": [
            6504,
            6644
          ],
          "16": [
            6715,
            6773
          ],
          "17": [
            6840,
            7009
          ],
          "18": [
            7075,
            7099
          ],
          "19": [
            7163,
            7213
          ]
        },
        "StakingPool.depositValidator": {
          "21": [
            5433,
            5605
          ],
          "22": [
            5677,
            5706
          ]
        },
        "StakingPool.getOperators": {
          "6": [
            2559,
            2577
          ]
        },
        "StakingPool.getUserStake": {
          "2": [
            2884,
            2914
          ]
        },
        "StakingPool.getValidators": {
          "20": [
            2714,
            2731
          ]
        },
        "StakingPool.stake": {
          "7": [
            4145,
            4239
          ],
          "8": [
            4322,
            4360
          ],
          "9": [
            4370,
            4408
          ],
          "10": [
            4418,
            4452
          ]
        },
        "StakingPool.unStake": {
          "11": [
            4607,
            4662
          ],
          "12": [
            4750,
            4799
          ],
          "13": [
            4809,
            4841
          ]
        },
        "StakingPool.updateBeaconRewards": {
          "4": [
            3617,
            3650
          ],
          "5": [
            3807,
            3839
          ]
        },
        "StakingPool.updateExecutionRewards": {
          "3": [
            7431,
            7471
          ]
        },
        "StakingPool.updateOperators": {
          "23": [
            3314,
            3341
          ],
          "24": [
            3351,
            3389
          ]
        },
        "StakingPool.updateSharePrice": {
          "29": [
            7677,
            7716
          ],
          "30": [
            7726,
            7764
          ]
        }
      },
      "16": {},
      "17": {},
      "2": {
        "Ownable._checkOwner": {
          "28": [
            1414,
            1482
          ]
        },
        "Ownable._transferOwnership": {
          "31": [
            2541,
            2558
          ],
          "32": [
            2568,
            2613
          ]
        },
        "Ownable.owner": {
          "1": [
            1266,
            1279
          ]
        },
        "Ownable.renounceOwnership": {
          "14": [
            1895,
            1925
          ]
        },
        "Ownable.transferOwnership": {
          "25": [
            2161,
            2234
          ],
          "26": [
            2244,
            2272
          ]
        }
      },
      "3": {},
      "4": {},
      "5": {},
      "6": {},
      "7": {
        "Context._msgSender": {
          "27": [
            712,
            729
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.8.0/Context",
    "OpenZeppelin/openzeppelin-contracts@4.8.0/ERC20",
    "IDepositContract",
    "OpenZeppelin/openzeppelin-contracts@4.8.0/IERC20",
    "OpenZeppelin/openzeppelin-contracts@4.8.0/IERC20Metadata",
    "ISSVNetwork",
    "OpenZeppelin/openzeppelin-contracts@4.8.0/Ownable",
    "OpenZeppelin/openzeppelin-contracts@4.8.0/ReentrancyGuard",
    "SSVETH"
  ],
  "deployedBytecode": "6080604052600436106101235760003560e01c806398e4349f116100a0578063df8af7c211610064578063df8af7c214610359578063e6ebe20c14610379578063ed97013b1461038e578063f2fde38b146103ae578063f8d0c40b146103ce57600080fd5b806398e4349f146102a1578063b7ab4db5146102c1578063bbadc93a146102e3578063bf3a6c0a14610319578063cc9fbb761461033957600080fd5b80633a4b66f1116100e75780633a4b66f1146102045780635d3eea911461020c578063715018a61461022c5780637b4bc935146102415780638da5cb5b1461028357600080fd5b806307d0e5401461013857806307dc739f146101755780631b7e5127146101a25780632601d3c7146101c257806327a099d8146101e257600080fd5b3661013357610131346103ee565b005b600080fd5b34801561014457600080fd5b50600554610158906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561018157600080fd5b50610195610190366004610f27565b610408565b60405161016c9190610f86565b3480156101ae57600080fd5b506101316101bd366004610f27565b6104b4565b3480156101ce57600080fd5b50600354610158906001600160a01b031681565b3480156101ee57600080fd5b506101f7610513565b60405161016c9190610fa0565b610131610579565b34801561021857600080fd5b50610131610227366004610f27565b6106ec565b34801561023857600080fd5b50610131610857565b34801561024d57600080fd5b506102757f000000000000000000000000000000000000000000000000000000000000000081565b60405190815260200161016c565b34801561028f57600080fd5b506000546001600160a01b0316610158565b3480156102ad57600080fd5b506101316102bc366004611102565b61086b565b3480156102cd57600080fd5b506102d6610a1e565b60405161016c91906111e8565b3480156102ef57600080fd5b506102756102fe36600461124a565b6001600160a01b03166000908152600b602052604090205490565b34801561032557600080fd5b50610131610334366004611273565b610af7565b34801561034557600080fd5b50600654610158906001600160a01b031681565b34801561036557600080fd5b50600454610158906001600160a01b031681565b34801561038557600080fd5b50610275610be5565b34801561039a57600080fd5b506101316103a9366004611316565b610c58565b3480156103ba57600080fd5b506101316103c936600461124a565b610ca8565b3480156103da57600080fd5b50600254610158906001600160a01b031681565b80600a600082825461040091906113b1565b909155505050565b6008818154811061041857600080fd5b906000526020600020016000915090508054610433906113c4565b80601f016020809104026020016040519081016040528092919081815260200182805461045f906113c4565b80156104ac5780601f10610481576101008083540402835291602001916104ac565b820191906000526020600020905b81548152906001019060200180831161048f57829003601f168201915b505050505081565b6104bc610d21565b60098190556008546000906104d29060206113fe565b6008546104e09060206113fe565b600a546009546104f091906113b1565b6104fa91906113b1565b6105049190611415565b905061050f81610d7b565b5050565b61051b610e58565b60408051608081019182905290600790600490826000855b82829054906101000a900463ffffffff1663ffffffff16815260200190600401906020826003010492830192600103820291508084116105335790505050505050905090565b600034116105a157604051639ed431ad60e01b81523460048201526024015b60405180910390fd5b6004805460408051638726972960e01b81529051600093670de0b6b3a7640000936001600160a01b031692638726972992818301926020928290030181865afa1580156105f2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106169190611437565b61062090346113fe565b61062a9190611415565b600480546040516340c10f1960e01b81523392810192909252602482018390529192506001600160a01b03909116906340c10f1990604401600060405180830381600087803b15801561067c57600080fd5b505af1158015610690573d6000803e3d6000fd5b5050604080513381523460208201527f8c265adcfa641899d6632b86254dda7a76f27701f1d21a732621d51f2328c460935001905060405180910390a1336000908152600b6020526040812080543492906104009084906113b1565b600480546040516323b872dd60e01b81523392810192909252306024830152604482018390526001600160a01b0316906323b872dd906064016020604051808303816000875af1158015610744573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107689190611450565b506000600460009054906101000a90046001600160a01b03166001600160a01b031663872697296040518163ffffffff1660e01b8152600401602060405180830381865afa1580156107be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107e29190611437565b6107ec9083611415565b6107fe90670de0b6b3a76400006113fe565b604051909150339082156108fc029083906000818181858888f1935050505015801561082e573d6000803e3d6000fd5b50336000908152600b60205260408120805484929061084e90849061146d565b90915550505050565b61085f610d21565b6108696000610e08565b565b6002546001600160a01b031633146108ab576002546040516301f5a31f60e71b81523360048201526001600160a01b039091166024820152604401610598565b60055460065460405163095ea7b360e01b81526001600160a01b0391821660048201526024810185905291169063095ea7b3906044016020604051808303816000875af1158015610900573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109249190611450565b5060065460405163967ef80760e01b81526001600160a01b039091169063967ef80790610963908b908b908b908b908b908b908b908b906004016114a9565b600060405180830381600087803b15801561097d57600080fd5b505af1158015610991573d6000803e3d6000fd5b5050600880546001810182556000919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30191506109d49050888a836115c6565b507fb23f6ce72d618df33a33105741ed7e13469f7f9ca6eda19e5e505b28783b1f288888868686604051610a0c959493929190611687565b60405180910390a15050505050505050565b60606008805480602002602001604051908101604052809291908181526020016000905b82821015610aee578382906000526020600020018054610a61906113c4565b80601f0160208091040260200160405190810160405280929190818152602001828054610a8d906113c4565b8015610ada5780601f10610aaf57610100808354040283529160200191610ada565b820191906000526020600020905b815481529060010190602001808311610abd57829003601f168201915b505050505081526020019060010190610a42565b50505050905090565b6040516304512a2360e31b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906322895118907f000000000000000000000000000000000000000000000000000000000000000090610b71908b908b908b908b908b908b908b906004016116c1565b6000604051808303818588803b158015610b8a57600080fd5b505af1158015610b9e573d6000803e3d6000fd5b50505050507f144679c9e19454710222d38e13b257573a15b6ca6a4d10a1254ebc2480cb68638787604051610bd4929190611712565b60405180910390a150505050505050565b6004805460408051638726972960e01b8152905160009384936001600160a01b031692638726972992818301926020928290030181865afa158015610c2e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c529190611437565b92915050565b610c60610d21565b610c6d6007826004610e76565b507fa31d33307023a78b2b477792a91efbed5ee91448638292c891e81233cb6108f881604051610c9d9190610fa0565b60405180910390a150565b610cb0610d21565b6001600160a01b038116610d155760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610598565b610d1e81610e08565b50565b6000546001600160a01b031633146108695760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610598565b60048054604051634164020160e01b81529182018390526001600160a01b031690634164020190602401600060405180830381600087803b158015610dbf57600080fd5b505af1158015610dd3573d6000803e3d6000fd5b505050507fce44720b7462058f31ddecab3daa427921e5975d9acb555f043682dada86656981604051610c9d91815260200190565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60405180608001604052806004906020820280368337509192915050565b600183019183908215610f025791602002820160005b83821115610ed057835183826101000a81548163ffffffff021916908363ffffffff1602179055509260200192600401602081600301049283019260010302610e8c565b8015610f005782816101000a81549063ffffffff0219169055600401602081600301049283019260010302610ed0565b505b50610f0e929150610f12565b5090565b5b80821115610f0e5760008155600101610f13565b600060208284031215610f3957600080fd5b5035919050565b6000815180845260005b81811015610f6657602081850181015186830182015201610f4a565b506000602082860101526020601f19601f83011685010191505092915050565b602081526000610f996020830184610f40565b9392505050565b60808101818360005b6004811015610fce57815163ffffffff16835260209283019290910190600101610fa9565b50505092915050565b60008083601f840112610fe957600080fd5b50813567ffffffffffffffff81111561100157600080fd5b60208301915083602082850101111561101957600080fd5b9250929050565b634e487b7160e01b600052604160045260246000fd5b803563ffffffff8116811461104a57600080fd5b919050565b803567ffffffffffffffff8116811461104a57600080fd5b8015158114610d1e57600080fd5b600060a0828403121561108757600080fd5b60405160a0810181811067ffffffffffffffff821117156110aa576110aa611020565b6040529050806110b983611036565b81526110c76020840161104f565b60208201526110d86040840161104f565b60408201526060830135606082015260808301356110f581611067565b6080919091015292915050565b600080600080600080600080610120898b03121561111f57600080fd5b883567ffffffffffffffff8082111561113757600080fd5b6111438c838d01610fd7565b909a50985060208b013591508082111561115c57600080fd5b818b0191508b601f83011261117057600080fd5b81358181111561117f57600080fd5b8c60208260051b850101111561119457600080fd5b6020830198508097505060408b01359150808211156111b257600080fd5b506111bf8b828c01610fd7565b909550935050606089013591506111d98a60808b01611075565b90509295985092959890939650565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561123d57603f1988860301845261122b858351610f40565b9450928501929085019060010161120f565b5092979650505050505050565b60006020828403121561125c57600080fd5b81356001600160a01b0381168114610f9957600080fd5b60008060008060008060006080888a03121561128e57600080fd5b873567ffffffffffffffff808211156112a657600080fd5b6112b28b838c01610fd7565b909950975060208a01359150808211156112cb57600080fd5b6112d78b838c01610fd7565b909750955060408a01359150808211156112f057600080fd5b506112fd8a828b01610fd7565b989b979a50959894979596606090950135949350505050565b60006080828403121561132857600080fd5b82601f83011261133757600080fd5b6040516080810181811067ffffffffffffffff8211171561135a5761135a611020565b60405280608084018581111561136f57600080fd5b845b818110156113905761138281611036565b835260209283019201611371565b509195945050505050565b634e487b7160e01b600052601160045260246000fd5b80820180821115610c5257610c5261139b565b600181811c908216806113d857607f821691505b6020821081036113f857634e487b7160e01b600052602260045260246000fd5b50919050565b8082028115828204841417610c5257610c5261139b565b60008261143257634e487b7160e01b600052601260045260246000fd5b500490565b60006020828403121561144957600080fd5b5051919050565b60006020828403121561146257600080fd5b8151610f9981611067565b81810381811115610c5257610c5261139b565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60006101208083526114be8184018b8d611480565b8381036020858101919091528982528a925090810160005b8a8110156115035767ffffffffffffffff6114f08561104f565b16825292820192908201906001016114d6565b50848103604086015261151781898b611480565b93505085606085015263ffffffff85511660808501528085015191505067ffffffffffffffff80821660a08501528060408601511660c08501525050606083015160e0830152608083015115156101008301529998505050505050505050565b601f8211156115c157600081815260208120601f850160051c8101602086101561159e5750805b601f850160051c820191505b818110156115bd578281556001016115aa565b5050505b505050565b67ffffffffffffffff8311156115de576115de611020565b6115f2836115ec83546113c4565b83611577565b6000601f841160018114611626576000851561160e5750838201355b600019600387901b1c1916600186901b178355611680565b600083815260209020601f19861690835b828110156116575786850135825560209485019460019092019101611637565b50868210156116745760001960f88860031b161c19848701351681555b505060018560011b0183555b5050505050565b60608152600061169b606083018789611480565b82810360208401526116ae818688611480565b9150508260408301529695505050505050565b6080815260006116d560808301898b611480565b82810360208401526116e881888a611480565b905082810360408401526116fd818688611480565b91505082606083015298975050505050505050565b602081526000611726602083018486611480565b94935050505056fea2646970667358221220b44c497520ed940a8e3f8515ba04b58a179aab218309d0dbcfe0f47e771d257864736f6c63430008120033",
  "deployedSourceMap": "820:6954:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2340:33;2363:9;2340:22;:33::i;:::-;820:6954;;;;;1089:29;;;;;;;;;;-1:-1:-1;1089:29:13;;;;-1:-1:-1;;;;;1089:29:13;;;;;;-1:-1:-1;;;;;178:32:19;;;160:51;;148:2;133:18;1089:29:13;;;;;;;;1189:25;;;;;;;;;;-1:-1:-1;1189:25:13;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3532:314::-;;;;;;;;;;-1:-1:-1;3532:314:13;;;;;:::i;:::-;;:::i;917:33::-;;;;;;;;;;-1:-1:-1;917:33:13;;;;-1:-1:-1;;;;;917:33:13;;;2486:98;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;3897:562::-;;;:::i;4556:292::-;;;;;;;;;;-1:-1:-1;4556:292:13;;;;;:::i;:::-;;:::i;1831:101:2:-;;;;;;;;;;;;;:::i;1030:53:13:-;;;;;;;;;;;;;;;;;;1717:25:19;;;1705:2;1690:18;1030:53:13;1571:177:19;1201:85:2;;;;;;;;;;-1:-1:-1;1247:7:2;1273:6;-1:-1:-1;;;;;1273:6:2;1201:85;;6097:1123:13;;;;;;;;;;-1:-1:-1;6097:1123:13;;;;;:::i;:::-;;:::i;2642:96::-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;2800:121::-;;;;;;;;;;-1:-1:-1;2800:121:13;;;;;:::i;:::-;-1:-1:-1;;;;;2891:23:13;2865:7;2891:23;;;:9;:23;;;;;;;2800:121;5174:539;;;;;;;;;;-1:-1:-1;5174:539:13;;;;;:::i;:::-;;:::i;1124:32::-;;;;;;;;;;-1:-1:-1;1124:32:13;;;;-1:-1:-1;;;;;1124:32:13;;;1004:20;;;;;;;;;;-1:-1:-1;1004:20:13;;;;-1:-1:-1;;;;;1004:20:13;;;2974:141;;;;;;;;;;;;;:::i;3230:166::-;;;;;;;;;;-1:-1:-1;3230:166:13;;;;;:::i;:::-;;:::i;2081:198:2:-;;;;;;;;;;-1:-1:-1;2081:198:2;;;;;:::i;:::-;;:::i;875:36:13:-;;;;;;;;;;-1:-1:-1;875:36:13;;;;-1:-1:-1;;;;;875:36:13;;;7350:128;7451:20;7431:16;;:40;;;;;;;:::i;:::-;;;;-1:-1:-1;;;7350:128:13:o;1189:25::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3532:314::-;1094:13:2;:11;:13::i;:::-;3617::13::1;:33:::0;;;3774:10:::1;:17:::0;3660:22:::1;::::0;3774::::1;::::0;3794:2:::1;3774:22;:::i;:::-;3746:10;:17:::0;:22:::1;::::0;3766:2:::1;3746:22;:::i;:::-;3714:16;;3686:13;;:44;;;;:::i;:::-;:83;;;;:::i;:::-;3685:112;;;;:::i;:::-;3660:137;;3807:32;3824:14;3807:16;:32::i;:::-;3607:239;3532:314:::0;:::o;2486:98::-;2531:16;;:::i;:::-;2559:18;;;;;;;;;;;2566:11;;2559:18;;2566:11;-1:-1:-1;2559:18:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2486:98;:::o;3897:562::-;4161:1;4148:9;:14;4145:94;;4185:43;;-1:-1:-1;;;4185:43:13;;4218:9;4185:43;;;1717:25:19;1690:18;;4185:43:13;;;;;;;;4145:94;4285:6;;;:19;;;-1:-1:-1;;;4285:19:13;;;;4248:21;;4308:4;;-1:-1:-1;;;;;4285:6:13;;:17;;:19;;;;;;;;;;;:6;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4273:31;;:9;:31;:::i;:::-;4272:40;;;;:::i;:::-;4322:6;;;:38;;-1:-1:-1;;;4322:38:13;;4334:10;4322:38;;;9416:51:19;;;;9483:18;;;9476:34;;;4248:64:13;;-1:-1:-1;;;;;;4322:6:13;;;;:11;;9389:18:19;;4322:38:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4375:33:13;;;4386:10;9416:51:19;;4398:9:13;9498:2:19;9483:18;;9476:34;4375:33:13;;-1:-1:-1;9389:18:19;;-1:-1:-1;4375:33:13;;;;;;;4428:10;4418:21;;;;:9;:21;;;;;:34;;4443:9;;4418:21;:34;;4443:9;;4418:34;:::i;4556:292::-;4607:6;;;:55;;-1:-1:-1;;;4607:55:13;;4627:10;4607:55;;;9761:34:19;;;;4647:4:13;9811:18:19;;;9804:43;9863:18;;;9856:34;;;-1:-1:-1;;;;;4607:6:13;;:19;;9696:18:19;;4607:55:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4672:27;4713:6;;;;;;;;;-1:-1:-1;;;;;4713:6:13;-1:-1:-1;;;;;4713:17:13;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4703:29;;:7;:29;:::i;:::-;4702:38;;4736:4;4702:38;:::i;:::-;4750:49;;4672:68;;-1:-1:-1;4758:10:13;;4750:49;;;;;4672:68;;4750:49;;;;4672:68;4758:10;4750:49;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4819:10:13;4809:21;;;;:9;:21;;;;;:32;;4834:7;;4809:21;:32;;4834:7;;4809:32;:::i;:::-;;;;-1:-1:-1;;;;4556:292:13:o;1831:101:2:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;6097:1123:13:-;6521:21;;-1:-1:-1;;;;;6521:21:13;6507:10;:35;6504:140;;6611:21;;6565:68;;-1:-1:-1;;;6565:68:13;;6599:10;6565:68;;;10496:34:19;-1:-1:-1;;;;;6611:21:13;;;10546:18:19;;;10539:43;10431:18;;6565:68:13;10284:304:19;6504:140:13;6722:14;;6746:17;;6715:58;;-1:-1:-1;;;6715:58:13;;-1:-1:-1;;;;;6746:17:13;;;6715:58;;;9416:51:19;9483:18;;;9476:34;;;6722:14:13;;;6715:30;;9389:18:19;;6715:58:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;6852:17:13;;6840:169;;-1:-1:-1;;;6840:169:13;;-1:-1:-1;;;;;6852:17:13;;;;6840:48;;:169;;6902:7;;;;6923:12;;;;6949:7;;;;6970;;6991:8;;6840:169;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7075:10:13;:24;;;;;;;-1:-1:-1;7075:24:13;;;;;;;-1:-1:-1;7075:24:13;;-1:-1:-1;7091:7:13;;7075:24;;:::i;:::-;;7168:45;7187:7;;7196;;7205;7168:45;;;;;;;;;;:::i;:::-;;;;;;;;6097:1123;;;;;;;;:::o;2642:96::-;2688:14;2721:10;2714:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2642:96;:::o;5174:539::-;5433:172;;-1:-1:-1;;;5433:172:13;;-1:-1:-1;;;;;5433:15:13;:23;;;;5464:16;;5433:172;;5495:7;;;;5516:23;;;;5553:10;;;;5577:18;;5433:172;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5682:24;5698:7;;5682:24;;;;;;;:::i;:::-;;;;;;;;5174:539;;;;;;;:::o;2974:141::-;3061:6;;;:19;;;-1:-1:-1;;;3061:19:13;;;;3020:7;;;;-1:-1:-1;;;;;3061:6:13;;:17;;:19;;;;;;;;;;;:6;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3039:41;2974:141;-1:-1:-1;;2974:141:13:o;3230:166::-;1094:13:2;:11;:13::i;:::-;3314:27:13::1;:11;3328:13:::0;3314:27:::1;;:::i;:::-;;3356:33;3375:13;3356:33;;;;;;:::i;:::-;;;;;;;;3230:166:::0;:::o;2081:198:2:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:2;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:2;;16109:2:19;2161:73:2::1;::::0;::::1;16091:21:19::0;16148:2;16128:18;;;16121:30;16187:34;16167:18;;;16160:62;-1:-1:-1;;;16238:18:19;;;16231:36;16284:19;;2161:73:2::1;15907:402:19::0;2161:73:2::1;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;1359:130::-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:2;719:10:7;1422:23:2;1414:68;;;;-1:-1:-1;;;1414:68:2;;16516:2:19;1414:68:2;;;16498:21:19;;;16535:18;;;16528:30;16594:34;16574:18;;;16567:62;16646:18;;1414:68:2;16314:356:19;7608:163:13;7677:6;;;:39;;-1:-1:-1;;;7677:39:13;;;;;1717:25:19;;;-1:-1:-1;;;;;7677:6:13;;:23;;1690:18:19;;7677:39:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7731:33;7749:14;7731:33;;;;1717:25:19;;1705:2;1690:18;;1571:177;2433:187:2;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:2;;;-1:-1:-1;;;;;;2541:17:2;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;222:180:19;281:6;334:2;322:9;313:7;309:23;305:32;302:52;;;350:1;347;340:12;302:52;-1:-1:-1;373:23:19;;222:180;-1:-1:-1;222:180:19:o;407:422::-;448:3;486:5;480:12;513:6;508:3;501:19;538:1;548:162;562:6;559:1;556:13;548:162;;;624:4;680:13;;;676:22;;670:29;652:11;;;648:20;;641:59;577:12;548:162;;;552:3;755:1;748:4;739:6;734:3;730:16;726:27;719:38;818:4;811:2;807:7;802:2;794:6;790:15;786:29;781:3;777:39;773:50;766:57;;;407:422;;;;:::o;834:217::-;981:2;970:9;963:21;944:4;1001:44;1041:2;1030:9;1026:18;1018:6;1001:44;:::i;:::-;993:52;834:217;-1:-1:-1;;;834:217:19:o;1056:510::-;1234:3;1219:19;;1223:9;1315:6;1192:4;1349:211;1363:4;1360:1;1357:11;1349:211;;;1426:13;;1441:10;1422:30;1410:43;;1476:4;1500:12;;;;1535:15;;;;1383:1;1376:9;1349:211;;;1353:3;;;1056:510;;;;:::o;1753:347::-;1804:8;1814:6;1868:3;1861:4;1853:6;1849:17;1845:27;1835:55;;1886:1;1883;1876:12;1835:55;-1:-1:-1;1909:20:19;;1952:18;1941:30;;1938:50;;;1984:1;1981;1974:12;1938:50;2021:4;2013:6;2009:17;1997:29;;2073:3;2066:4;2057:6;2049;2045:19;2041:30;2038:39;2035:59;;;2090:1;2087;2080:12;2035:59;1753:347;;;;;:::o;2105:127::-;2166:10;2161:3;2157:20;2154:1;2147:31;2197:4;2194:1;2187:15;2221:4;2218:1;2211:15;2237:163;2304:20;;2364:10;2353:22;;2343:33;;2333:61;;2390:1;2387;2380:12;2333:61;2237:163;;;:::o;2405:171::-;2472:20;;2532:18;2521:30;;2511:41;;2501:69;;2566:1;2563;2556:12;2581:118;2667:5;2660:13;2653:21;2646:5;2643:32;2633:60;;2689:1;2686;2679:12;2704:757;2758:5;2806:4;2794:9;2789:3;2785:19;2781:30;2778:50;;;2824:1;2821;2814:12;2778:50;2857:2;2851:9;2899:4;2891:6;2887:17;2970:6;2958:10;2955:22;2934:18;2922:10;2919:34;2916:62;2913:88;;;2981:18;;:::i;:::-;3017:2;3010:22;3050:6;-1:-1:-1;3050:6:19;3080:28;3098:9;3080:28;:::i;:::-;3072:6;3065:44;3142:37;3175:2;3164:9;3160:18;3142:37;:::i;:::-;3137:2;3129:6;3125:15;3118:62;3213:37;3246:2;3235:9;3231:18;3213:37;:::i;:::-;3208:2;3200:6;3196:15;3189:62;3312:2;3301:9;3297:18;3284:32;3279:2;3271:6;3267:15;3260:57;3369:3;3358:9;3354:19;3341:33;3383:30;3405:7;3383:30;:::i;:::-;3441:3;3429:16;;;;3422:33;2704:757;;-1:-1:-1;;2704:757:19:o;3466:1373::-;3634:6;3642;3650;3658;3666;3674;3682;3690;3743:3;3731:9;3722:7;3718:23;3714:33;3711:53;;;3760:1;3757;3750:12;3711:53;3800:9;3787:23;3829:18;3870:2;3862:6;3859:14;3856:34;;;3886:1;3883;3876:12;3856:34;3925:58;3975:7;3966:6;3955:9;3951:22;3925:58;:::i;:::-;4002:8;;-1:-1:-1;3899:84:19;-1:-1:-1;4090:2:19;4075:18;;4062:32;;-1:-1:-1;4106:16:19;;;4103:36;;;4135:1;4132;4125:12;4103:36;4173:8;4162:9;4158:24;4148:34;;4220:7;4213:4;4209:2;4205:13;4201:27;4191:55;;4242:1;4239;4232:12;4191:55;4282:2;4269:16;4308:2;4300:6;4297:14;4294:34;;;4324:1;4321;4314:12;4294:34;4377:7;4372:2;4362:6;4359:1;4355:14;4351:2;4347:23;4343:32;4340:45;4337:65;;;4398:1;4395;4388:12;4337:65;4429:2;4425;4421:11;4411:21;;4451:6;4441:16;;;4510:2;4499:9;4495:18;4482:32;4466:48;;4539:2;4529:8;4526:16;4523:36;;;4555:1;4552;4545:12;4523:36;;4594:60;4646:7;4635:8;4624:9;4620:24;4594:60;:::i;:::-;4673:8;;-1:-1:-1;4568:86:19;-1:-1:-1;;4755:2:19;4740:18;;4727:32;;-1:-1:-1;4778:55:19;4825:7;4819:3;4804:19;;4778:55;:::i;:::-;4768:65;;3466:1373;;;;;;;;;;;:::o;4844:800::-;5004:4;5033:2;5073;5062:9;5058:18;5103:2;5092:9;5085:21;5126:6;5161;5155:13;5192:6;5184;5177:22;5230:2;5219:9;5215:18;5208:25;;5292:2;5282:6;5279:1;5275:14;5264:9;5260:30;5256:39;5242:53;;5330:2;5322:6;5318:15;5351:1;5361:254;5375:6;5372:1;5369:13;5361:254;;;5468:2;5464:7;5452:9;5444:6;5440:22;5436:36;5431:3;5424:49;5496:39;5528:6;5519;5513:13;5496:39;:::i;:::-;5486:49;-1:-1:-1;5593:12:19;;;;5558:15;;;;5397:1;5390:9;5361:254;;;-1:-1:-1;5632:6:19;;4844:800;-1:-1:-1;;;;;;;4844:800:19:o;5649:286::-;5708:6;5761:2;5749:9;5740:7;5736:23;5732:32;5729:52;;;5777:1;5774;5767:12;5729:52;5803:23;;-1:-1:-1;;;;;5855:31:19;;5845:42;;5835:70;;5901:1;5898;5891:12;5940:1073;6059:6;6067;6075;6083;6091;6099;6107;6160:3;6148:9;6139:7;6135:23;6131:33;6128:53;;;6177:1;6174;6167:12;6128:53;6217:9;6204:23;6246:18;6287:2;6279:6;6276:14;6273:34;;;6303:1;6300;6293:12;6273:34;6342:58;6392:7;6383:6;6372:9;6368:22;6342:58;:::i;:::-;6419:8;;-1:-1:-1;6316:84:19;-1:-1:-1;6507:2:19;6492:18;;6479:32;;-1:-1:-1;6523:16:19;;;6520:36;;;6552:1;6549;6542:12;6520:36;6591:60;6643:7;6632:8;6621:9;6617:24;6591:60;:::i;:::-;6670:8;;-1:-1:-1;6565:86:19;-1:-1:-1;6758:2:19;6743:18;;6730:32;;-1:-1:-1;6774:16:19;;;6771:36;;;6803:1;6800;6793:12;6771:36;;6842:60;6894:7;6883:8;6872:9;6868:24;6842:60;:::i;:::-;5940:1073;;;;-1:-1:-1;5940:1073:19;;;;;;7003:2;6988:18;;;6975:32;;5940:1073;-1:-1:-1;;;;5940:1073:19:o;7241:765::-;7322:6;7375:3;7363:9;7354:7;7350:23;7346:33;7343:53;;;7392:1;7389;7382:12;7343:53;7441:7;7434:4;7423:9;7419:20;7415:34;7405:62;;7463:1;7460;7453:12;7405:62;7496:2;7490:9;7538:3;7530:6;7526:16;7608:6;7596:10;7593:22;7572:18;7560:10;7557:34;7554:62;7551:88;;;7619:18;;:::i;:::-;7655:2;7648:22;7690:6;7734:3;7719:19;;7750;;;7747:39;;;7782:1;7779;7772:12;7747:39;7806:9;7824:151;7840:6;7835:3;7832:15;7824:151;;;7908:22;7926:3;7908:22;:::i;:::-;7896:35;;7960:4;7951:14;;;;7857;7824:151;;;-1:-1:-1;7994:6:19;;7241:765;-1:-1:-1;;;;;7241:765:19:o;8011:127::-;8072:10;8067:3;8063:20;8060:1;8053:31;8103:4;8100:1;8093:15;8127:4;8124:1;8117:15;8143:125;8208:9;;;8229:10;;;8226:36;;;8242:18;;:::i;8273:380::-;8352:1;8348:12;;;;8395;;;8416:61;;8470:4;8462:6;8458:17;8448:27;;8416:61;8523:2;8515:6;8512:14;8492:18;8489:38;8486:161;;8569:10;8564:3;8560:20;8557:1;8550:31;8604:4;8601:1;8594:15;8632:4;8629:1;8622:15;8486:161;;8273:380;;;:::o;8658:168::-;8731:9;;;8762;;8779:15;;;8773:22;;8759:37;8749:71;;8800:18;;:::i;8831:217::-;8871:1;8897;8887:132;;8941:10;8936:3;8932:20;8929:1;8922:31;8976:4;8973:1;8966:15;9004:4;9001:1;8994:15;8887:132;-1:-1:-1;9033:9:19;;8831:217::o;9053:184::-;9123:6;9176:2;9164:9;9155:7;9151:23;9147:32;9144:52;;;9192:1;9189;9182:12;9144:52;-1:-1:-1;9215:16:19;;9053:184;-1:-1:-1;9053:184:19:o;9901:245::-;9968:6;10021:2;10009:9;10000:7;9996:23;9992:32;9989:52;;;10037:1;10034;10027:12;9989:52;10069:9;10063:16;10088:28;10110:5;10088:28;:::i;10151:128::-;10218:9;;;10239:11;;;10236:37;;;10253:18;;:::i;10593:266::-;10681:6;10676:3;10669:19;10733:6;10726:5;10719:4;10714:3;10710:14;10697:43;-1:-1:-1;10785:1:19;10760:16;;;10778:4;10756:27;;;10749:38;;;;10841:2;10820:15;;;-1:-1:-1;;10816:29:19;10807:39;;;10803:50;;10593:266::o;10864:1534::-;11232:4;11261:3;11291:2;11280:9;11273:21;11317:61;11374:2;11363:9;11359:18;11351:6;11343;11317:61;:::i;:::-;11435:22;;;11397:2;11415:18;;;11408:50;;;;11493:22;;;11569:6;;-1:-1:-1;11397:2:19;11531:15;;11593:1;11603:206;11617:6;11614:1;11611:13;11603:206;;;11709:18;11682:25;11700:6;11682:25;:::i;:::-;11678:50;11666:63;;11784:15;;;;11749:12;;;;11639:1;11632:9;11603:206;;;11607:3;11854:9;11849:3;11845:19;11840:2;11829:9;11825:18;11818:47;11882:46;11924:3;11916:6;11908;11882:46;:::i;:::-;11874:54;;;11964:6;11959:2;11948:9;11944:18;11937:34;12027:10;12018:6;12012:13;12008:30;12002:3;11991:9;11987:19;11980:59;12086:2;12078:6;12074:15;12068:22;12048:42;;;12109:18;12182:2;12168:12;12164:21;12158:3;12147:9;12143:19;12136:50;12251:2;12245;12237:6;12233:15;12227:22;12223:31;12217:3;12206:9;12202:19;12195:60;;;12310:2;12302:6;12298:15;12292:22;12286:3;12275:9;12271:19;12264:51;12384:3;12376:6;12372:16;12366:23;12359:31;12352:39;12346:3;12335:9;12331:19;12324:68;10864:1534;;;;;;;;;;;:::o;12528:544::-;12629:2;12624:3;12621:11;12618:448;;;12665:1;12690:5;12686:2;12679:17;12735:4;12731:2;12721:19;12805:2;12793:10;12789:19;12786:1;12782:27;12776:4;12772:38;12841:4;12829:10;12826:20;12823:47;;;-1:-1:-1;12864:4:19;12823:47;12919:2;12914:3;12910:12;12907:1;12903:20;12897:4;12893:31;12883:41;;12974:82;12992:2;12985:5;12982:13;12974:82;;;13037:17;;;13018:1;13007:13;12974:82;;;12978:3;;;12618:448;12528:544;;;:::o;13248:1202::-;13370:18;13365:3;13362:27;13359:53;;;13392:18;;:::i;:::-;13421:93;13510:3;13470:38;13502:4;13496:11;13470:38;:::i;:::-;13464:4;13421:93;:::i;:::-;13540:1;13565:2;13560:3;13557:11;13582:1;13577:615;;;;14236:1;14253:3;14250:93;;;-1:-1:-1;14309:19:19;;;14296:33;14250:93;-1:-1:-1;;13205:1:19;13201:11;;;13197:24;13193:29;13183:40;13229:1;13225:11;;;13180:57;14356:78;;13550:894;;13577:615;12475:1;12468:14;;;12512:4;12499:18;;-1:-1:-1;;13613:17:19;;;13713:9;13735:229;13749:7;13746:1;13743:14;13735:229;;;13838:19;;;13825:33;13810:49;;13945:4;13930:20;;;;13898:1;13886:14;;;;13765:12;13735:229;;;13739:3;13992;13983:7;13980:16;13977:159;;;14116:1;14112:6;14106:3;14100;14097:1;14093:11;14089:21;14085:34;14081:39;14068:9;14063:3;14059:19;14046:33;14042:79;14034:6;14027:95;13977:159;;;14179:1;14173:3;14170:1;14166:11;14162:19;14156:4;14149:33;13550:894;;;13248:1202;;;:::o;14455:502::-;14696:2;14685:9;14678:21;14659:4;14722:61;14779:2;14768:9;14764:18;14756:6;14748;14722:61;:::i;:::-;14831:9;14823:6;14819:22;14814:2;14803:9;14799:18;14792:50;14859:49;14901:6;14893;14885;14859:49;:::i;:::-;14851:57;;;14944:6;14939:2;14928:9;14924:18;14917:34;14455:502;;;;;;;;:::o;14962:691::-;15259:3;15248:9;15241:22;15222:4;15286:62;15343:3;15332:9;15328:19;15320:6;15312;15286:62;:::i;:::-;15396:9;15388:6;15384:22;15379:2;15368:9;15364:18;15357:50;15430:49;15472:6;15464;15456;15430:49;:::i;:::-;15416:63;;15527:9;15519:6;15515:22;15510:2;15499:9;15495:18;15488:50;15555:49;15597:6;15589;15581;15555:49;:::i;:::-;15547:57;;;15640:6;15635:2;15624:9;15620:18;15613:34;14962:691;;;;;;;;;;:::o;15658:244::-;15815:2;15804:9;15797:21;15778:4;15835:61;15892:2;15881:9;15877:18;15869:6;15861;15835:61;:::i;:::-;15827:69;15658:244;-1:-1:-1;;;;15658:244:19:o",
  "language": "Solidity",
  "natspec": {
    "errors": {
      "StakingPool__CantStakeZeroAmount(uint256)": [
        {
          "notice": "this contract utilizes custom errors to optimize gas usage, instead of normal `require` conditionals.  By using custom errors instead, we don't need to use up storage space on the `require`'s revert string messages. This also allows developers and users to see customizable output values when the custom error is invoked "
        }
      ]
    },
    "kind": "dev",
    "methods": {
      "depositShares(bytes,uint64[],bytes,uint256,(uint32,uint64,uint64,uint256,bool))": {
        "details": "Callable by the whitelisted address",
        "notice": "Deposit shares for a validator",
        "params": {
          "_amount": ": Amount of tokens to be deposited",
          "_cluster": ": Latest Cluster information",
          "_operatorIds": ": IDs of the validator's operators",
          "_pubkey": ": Public key of the validator",
          "_shares": ": Public keys of the shares"
        }
      },
      "depositValidator(bytes,bytes,bytes,bytes32)": {
        "notice": "Deposit a validator to the deposit contract",
        "params": {
          "_deposit_data_root": ": Root of the deposit data",
          "_pubkey": ": Public key of the validator",
          "_signature": ": Signature of the deposit data",
          "_withdrawal_credentials": ": Withdrawal credentials of the validator"
        }
      },
      "getOperators()": {
        "notice": "Get operator ids, check operators here https://explorer.ssv.network/"
      },
      "getShareprice()": {
        "notice": "Get share price"
      },
      "getUserStake(address)": {
        "notice": "Get user's staked amount"
      },
      "getValidators()": {
        "notice": "Get validators array"
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "stake()": {
        "notice": "Stake tokens"
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "unStake(uint256)": {
        "notice": "Unstake tokens",
        "params": {
          "_amount": ": Amount to be unstaked"
        }
      },
      "updateBeaconRewards(uint256)": {
        "details": "Update share price of the staking pool",
        "params": {
          "_newBeaconRewards": ": The new beacon rewards amount"
        }
      },
      "updateOperators(uint32[4])": {
        "details": "Update operators",
        "params": {
          "_newOperators": ": Array of the the new operators Ids"
        }
      }
    },
    "version": 1
  },
  "offset": [
    820,
    7774
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x123 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x98E4349F GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xDF8AF7C2 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xDF8AF7C2 EQ PUSH2 0x359 JUMPI DUP1 PUSH4 0xE6EBE20C EQ PUSH2 0x379 JUMPI DUP1 PUSH4 0xED97013B EQ PUSH2 0x38E JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3AE JUMPI DUP1 PUSH4 0xF8D0C40B EQ PUSH2 0x3CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x98E4349F EQ PUSH2 0x2A1 JUMPI DUP1 PUSH4 0xB7AB4DB5 EQ PUSH2 0x2C1 JUMPI DUP1 PUSH4 0xBBADC93A EQ PUSH2 0x2E3 JUMPI DUP1 PUSH4 0xBF3A6C0A EQ PUSH2 0x319 JUMPI DUP1 PUSH4 0xCC9FBB76 EQ PUSH2 0x339 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3A4B66F1 GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x3A4B66F1 EQ PUSH2 0x204 JUMPI DUP1 PUSH4 0x5D3EEA91 EQ PUSH2 0x20C JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x22C JUMPI DUP1 PUSH4 0x7B4BC935 EQ PUSH2 0x241 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x283 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7D0E540 EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0x7DC739F EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0x1B7E5127 EQ PUSH2 0x1A2 JUMPI DUP1 PUSH4 0x2601D3C7 EQ PUSH2 0x1C2 JUMPI DUP1 PUSH4 0x27A099D8 EQ PUSH2 0x1E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x133 JUMPI PUSH2 0x131 CALLVALUE PUSH2 0x3EE JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x144 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH2 0x158 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x181 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x195 PUSH2 0x190 CALLDATASIZE PUSH1 0x4 PUSH2 0xF27 JUMP JUMPDEST PUSH2 0x408 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16C SWAP2 SWAP1 PUSH2 0xF86 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x131 PUSH2 0x1BD CALLDATASIZE PUSH1 0x4 PUSH2 0xF27 JUMP JUMPDEST PUSH2 0x4B4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH2 0x158 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F7 PUSH2 0x513 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16C SWAP2 SWAP1 PUSH2 0xFA0 JUMP JUMPDEST PUSH2 0x131 PUSH2 0x579 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x218 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x131 PUSH2 0x227 CALLDATASIZE PUSH1 0x4 PUSH2 0xF27 JUMP JUMPDEST PUSH2 0x6EC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x238 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x131 PUSH2 0x857 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x275 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x16C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x158 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x131 PUSH2 0x2BC CALLDATASIZE PUSH1 0x4 PUSH2 0x1102 JUMP JUMPDEST PUSH2 0x86B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D6 PUSH2 0xA1E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16C SWAP2 SWAP1 PUSH2 0x11E8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x275 PUSH2 0x2FE CALLDATASIZE PUSH1 0x4 PUSH2 0x124A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x325 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x131 PUSH2 0x334 CALLDATASIZE PUSH1 0x4 PUSH2 0x1273 JUMP JUMPDEST PUSH2 0xAF7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x345 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x6 SLOAD PUSH2 0x158 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x365 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 SLOAD PUSH2 0x158 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x385 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x275 PUSH2 0xBE5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x131 PUSH2 0x3A9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1316 JUMP JUMPDEST PUSH2 0xC58 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x131 PUSH2 0x3C9 CALLDATASIZE PUSH1 0x4 PUSH2 0x124A JUMP JUMPDEST PUSH2 0xCA8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x158 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST DUP1 PUSH1 0xA PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x400 SWAP2 SWAP1 PUSH2 0x13B1 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x8 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x418 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 SLOAD PUSH2 0x433 SWAP1 PUSH2 0x13C4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x45F SWAP1 PUSH2 0x13C4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4AC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x481 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4AC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x48F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH2 0x4BC PUSH2 0xD21 JUMP JUMPDEST PUSH1 0x9 DUP2 SWAP1 SSTORE PUSH1 0x8 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x4D2 SWAP1 PUSH1 0x20 PUSH2 0x13FE JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x4E0 SWAP1 PUSH1 0x20 PUSH2 0x13FE JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x9 SLOAD PUSH2 0x4F0 SWAP2 SWAP1 PUSH2 0x13B1 JUMP JUMPDEST PUSH2 0x4FA SWAP2 SWAP1 PUSH2 0x13B1 JUMP JUMPDEST PUSH2 0x504 SWAP2 SWAP1 PUSH2 0x1415 JUMP JUMPDEST SWAP1 POP PUSH2 0x50F DUP2 PUSH2 0xD7B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x51B PUSH2 0xE58 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD SWAP2 DUP3 SWAP1 MSTORE SWAP1 PUSH1 0x7 SWAP1 PUSH1 0x4 SWAP1 DUP3 PUSH1 0x0 DUP6 JUMPDEST DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x4 ADD SWAP1 PUSH1 0x20 DUP3 PUSH1 0x3 ADD DIV SWAP3 DUP4 ADD SWAP3 PUSH1 0x1 SUB DUP3 MUL SWAP2 POP DUP1 DUP5 GT PUSH2 0x533 JUMPI SWAP1 POP POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLVALUE GT PUSH2 0x5A1 JUMPI PUSH1 0x40 MLOAD PUSH4 0x9ED431AD PUSH1 0xE0 SHL DUP2 MSTORE CALLVALUE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x87269729 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP4 PUSH8 0xDE0B6B3A7640000 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 PUSH4 0x87269729 SWAP3 DUP2 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5F2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x616 SWAP2 SWAP1 PUSH2 0x1437 JUMP JUMPDEST PUSH2 0x620 SWAP1 CALLVALUE PUSH2 0x13FE JUMP JUMPDEST PUSH2 0x62A SWAP2 SWAP1 PUSH2 0x1415 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x40C10F19 PUSH1 0xE0 SHL DUP2 MSTORE CALLER SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD DUP4 SWAP1 MSTORE SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x40C10F19 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x67C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x690 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE CALLVALUE PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x8C265ADCFA641899D6632B86254DDA7A76F27701F1D21A732621D51F2328C460 SWAP4 POP ADD SWAP1 POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD CALLVALUE SWAP3 SWAP1 PUSH2 0x400 SWAP1 DUP5 SWAP1 PUSH2 0x13B1 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x744 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x768 SWAP2 SWAP1 PUSH2 0x1450 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x87269729 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7BE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7E2 SWAP2 SWAP1 PUSH2 0x1437 JUMP JUMPDEST PUSH2 0x7EC SWAP1 DUP4 PUSH2 0x1415 JUMP JUMPDEST PUSH2 0x7FE SWAP1 PUSH8 0xDE0B6B3A7640000 PUSH2 0x13FE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 SWAP2 POP CALLER SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x82E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x84E SWAP1 DUP5 SWAP1 PUSH2 0x146D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP JUMP JUMPDEST PUSH2 0x85F PUSH2 0xD21 JUMP JUMPDEST PUSH2 0x869 PUSH1 0x0 PUSH2 0xE08 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x8AB JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x1F5A31F PUSH1 0xE7 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x598 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE SWAP2 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x900 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x924 SWAP2 SWAP1 PUSH2 0x1450 JUMP JUMPDEST POP PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0x967EF807 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x967EF807 SWAP1 PUSH2 0x963 SWAP1 DUP12 SWAP1 DUP12 SWAP1 DUP12 SWAP1 DUP12 SWAP1 DUP12 SWAP1 DUP12 SWAP1 DUP12 SWAP1 DUP12 SWAP1 PUSH1 0x4 ADD PUSH2 0x14A9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x97D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x991 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3 ADD SWAP2 POP PUSH2 0x9D4 SWAP1 POP DUP9 DUP11 DUP4 PUSH2 0x15C6 JUMP JUMPDEST POP PUSH32 0xB23F6CE72D618DF33A33105741ED7E13469F7F9CA6EDA19E5E505B28783B1F28 DUP9 DUP9 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0xA0C SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1687 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x8 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0xAEE JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP1 SLOAD PUSH2 0xA61 SWAP1 PUSH2 0x13C4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA8D SWAP1 PUSH2 0x13C4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xADA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xAAF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xADA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xABD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xA42 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x4512A23 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x22895118 SWAP1 PUSH32 0x0 SWAP1 PUSH2 0xB71 SWAP1 DUP12 SWAP1 DUP12 SWAP1 DUP12 SWAP1 DUP12 SWAP1 DUP12 SWAP1 DUP12 SWAP1 DUP12 SWAP1 PUSH1 0x4 ADD PUSH2 0x16C1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB8A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB9E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH32 0x144679C9E19454710222D38E13B257573A15B6CA6A4D10A1254EBC2480CB6863 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0xBD4 SWAP3 SWAP2 SWAP1 PUSH2 0x1712 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x87269729 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP4 DUP5 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 PUSH4 0x87269729 SWAP3 DUP2 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC2E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC52 SWAP2 SWAP1 PUSH2 0x1437 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC60 PUSH2 0xD21 JUMP JUMPDEST PUSH2 0xC6D PUSH1 0x7 DUP3 PUSH1 0x4 PUSH2 0xE76 JUMP JUMPDEST POP PUSH32 0xA31D33307023A78B2B477792A91EFBED5EE91448638292C891E81233CB6108F8 DUP2 PUSH1 0x40 MLOAD PUSH2 0xC9D SWAP2 SWAP1 PUSH2 0xFA0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0xCB0 PUSH2 0xD21 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xD15 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x598 JUMP JUMPDEST PUSH2 0xD1E DUP2 PUSH2 0xE08 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x869 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x598 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x41640201 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 DUP3 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x41640201 SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDBF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xDD3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH32 0xCE44720B7462058F31DDECAB3DAA427921E5975D9ACB555F043682DADA866569 DUP2 PUSH1 0x40 MLOAD PUSH2 0xC9D SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP SWAP2 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP4 ADD SWAP2 DUP4 SWAP1 DUP3 ISZERO PUSH2 0xF02 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD PUSH1 0x0 JUMPDEST DUP4 DUP3 GT ISZERO PUSH2 0xED0 JUMPI DUP4 MLOAD DUP4 DUP3 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP3 PUSH1 0x20 ADD SWAP3 PUSH1 0x4 ADD PUSH1 0x20 DUP2 PUSH1 0x3 ADD DIV SWAP3 DUP4 ADD SWAP3 PUSH1 0x1 SUB MUL PUSH2 0xE8C JUMP JUMPDEST DUP1 ISZERO PUSH2 0xF00 JUMPI DUP3 DUP2 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x4 ADD PUSH1 0x20 DUP2 PUSH1 0x3 ADD DIV SWAP3 DUP4 ADD SWAP3 PUSH1 0x1 SUB MUL PUSH2 0xED0 JUMP JUMPDEST POP JUMPDEST POP PUSH2 0xF0E SWAP3 SWAP2 POP PUSH2 0xF12 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xF0E JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xF13 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF39 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xF66 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xF4A JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xF99 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xF40 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x80 DUP2 ADD DUP2 DUP4 PUSH1 0x0 JUMPDEST PUSH1 0x4 DUP2 LT ISZERO PUSH2 0xFCE JUMPI DUP2 MLOAD PUSH4 0xFFFFFFFF AND DUP4 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xFA9 JUMP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0xFE9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1001 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1019 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x104A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x104A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xD1E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1087 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xA0 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x10AA JUMPI PUSH2 0x10AA PUSH2 0x1020 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP1 POP DUP1 PUSH2 0x10B9 DUP4 PUSH2 0x1036 JUMP JUMPDEST DUP2 MSTORE PUSH2 0x10C7 PUSH1 0x20 DUP5 ADD PUSH2 0x104F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x10D8 PUSH1 0x40 DUP5 ADD PUSH2 0x104F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP4 ADD CALLDATALOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP4 ADD CALLDATALOAD PUSH2 0x10F5 DUP2 PUSH2 0x1067 JUMP JUMPDEST PUSH1 0x80 SWAP2 SWAP1 SWAP2 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x120 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x111F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP9 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1137 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1143 DUP13 DUP4 DUP14 ADD PUSH2 0xFD7 JUMP JUMPDEST SWAP1 SWAP11 POP SWAP9 POP PUSH1 0x20 DUP12 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x115C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP12 ADD SWAP2 POP DUP12 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1170 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x117F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP13 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x1194 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP9 POP DUP1 SWAP8 POP POP PUSH1 0x40 DUP12 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x11B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x11BF DUP12 DUP3 DUP13 ADD PUSH2 0xFD7 JUMP JUMPDEST SWAP1 SWAP6 POP SWAP4 POP POP PUSH1 0x60 DUP10 ADD CALLDATALOAD SWAP2 POP PUSH2 0x11D9 DUP11 PUSH1 0x80 DUP12 ADD PUSH2 0x1075 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 ADD DUP2 DUP5 MSTORE DUP1 DUP6 MLOAD DUP1 DUP4 MSTORE PUSH1 0x40 DUP7 ADD SWAP2 POP PUSH1 0x40 DUP2 PUSH1 0x5 SHL DUP8 ADD ADD SWAP3 POP DUP4 DUP8 ADD PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x123D JUMPI PUSH1 0x3F NOT DUP9 DUP7 SUB ADD DUP5 MSTORE PUSH2 0x122B DUP6 DUP4 MLOAD PUSH2 0xF40 JUMP JUMPDEST SWAP5 POP SWAP3 DUP6 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x120F JUMP JUMPDEST POP SWAP3 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x125C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xF99 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x128E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x12A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12B2 DUP12 DUP4 DUP13 ADD PUSH2 0xFD7 JUMP JUMPDEST SWAP1 SWAP10 POP SWAP8 POP PUSH1 0x20 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x12CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12D7 DUP12 DUP4 DUP13 ADD PUSH2 0xFD7 JUMP JUMPDEST SWAP1 SWAP8 POP SWAP6 POP PUSH1 0x40 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x12F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12FD DUP11 DUP3 DUP12 ADD PUSH2 0xFD7 JUMP JUMPDEST SWAP9 SWAP12 SWAP8 SWAP11 POP SWAP6 SWAP9 SWAP5 SWAP8 SWAP6 SWAP7 PUSH1 0x60 SWAP1 SWAP6 ADD CALLDATALOAD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1328 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1337 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x80 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x135A JUMPI PUSH2 0x135A PUSH2 0x1020 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP1 PUSH1 0x80 DUP5 ADD DUP6 DUP2 GT ISZERO PUSH2 0x136F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1390 JUMPI PUSH2 0x1382 DUP2 PUSH2 0x1036 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x1371 JUMP JUMPDEST POP SWAP2 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0xC52 JUMPI PUSH2 0xC52 PUSH2 0x139B JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x13D8 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x13F8 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0xC52 JUMPI PUSH2 0xC52 PUSH2 0x139B JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1432 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1449 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1462 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xF99 DUP2 PUSH2 0x1067 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0xC52 JUMPI PUSH2 0xC52 PUSH2 0x139B JUMP JUMPDEST DUP2 DUP4 MSTORE DUP2 DUP2 PUSH1 0x20 DUP6 ADD CALLDATACOPY POP PUSH1 0x0 DUP3 DUP3 ADD PUSH1 0x20 SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND SWAP1 SWAP2 ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP1 DUP4 MSTORE PUSH2 0x14BE DUP2 DUP5 ADD DUP12 DUP14 PUSH2 0x1480 JUMP JUMPDEST DUP4 DUP2 SUB PUSH1 0x20 DUP6 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP10 DUP3 MSTORE DUP11 SWAP3 POP SWAP1 DUP2 ADD PUSH1 0x0 JUMPDEST DUP11 DUP2 LT ISZERO PUSH2 0x1503 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF PUSH2 0x14F0 DUP6 PUSH2 0x104F JUMP JUMPDEST AND DUP3 MSTORE SWAP3 DUP3 ADD SWAP3 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x14D6 JUMP JUMPDEST POP DUP5 DUP2 SUB PUSH1 0x40 DUP7 ADD MSTORE PUSH2 0x1517 DUP2 DUP10 DUP12 PUSH2 0x1480 JUMP JUMPDEST SWAP4 POP POP DUP6 PUSH1 0x60 DUP6 ADD MSTORE PUSH4 0xFFFFFFFF DUP6 MLOAD AND PUSH1 0x80 DUP6 ADD MSTORE DUP1 DUP6 ADD MLOAD SWAP2 POP POP PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 AND PUSH1 0xA0 DUP6 ADD MSTORE DUP1 PUSH1 0x40 DUP7 ADD MLOAD AND PUSH1 0xC0 DUP6 ADD MSTORE POP POP PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0xE0 DUP4 ADD MSTORE PUSH1 0x80 DUP4 ADD MLOAD ISZERO ISZERO PUSH2 0x100 DUP4 ADD MSTORE SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x15C1 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x159E JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x15BD JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x15AA JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT ISZERO PUSH2 0x15DE JUMPI PUSH2 0x15DE PUSH2 0x1020 JUMP JUMPDEST PUSH2 0x15F2 DUP4 PUSH2 0x15EC DUP4 SLOAD PUSH2 0x13C4 JUMP JUMPDEST DUP4 PUSH2 0x1577 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F DUP5 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1626 JUMPI PUSH1 0x0 DUP6 ISZERO PUSH2 0x160E JUMPI POP DUP4 DUP3 ADD CALLDATALOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP8 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP7 SWAP1 SHL OR DUP4 SSTORE PUSH2 0x1680 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP1 DUP4 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1657 JUMPI DUP7 DUP6 ADD CALLDATALOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x1637 JUMP JUMPDEST POP DUP7 DUP3 LT ISZERO PUSH2 0x1674 JUMPI PUSH1 0x0 NOT PUSH1 0xF8 DUP9 PUSH1 0x3 SHL AND SHR NOT DUP5 DUP8 ADD CALLDATALOAD AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP6 PUSH1 0x1 SHL ADD DUP4 SSTORE JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH2 0x169B PUSH1 0x60 DUP4 ADD DUP8 DUP10 PUSH2 0x1480 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x16AE DUP2 DUP7 DUP9 PUSH2 0x1480 JUMP JUMPDEST SWAP2 POP POP DUP3 PUSH1 0x40 DUP4 ADD MSTORE SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x80 DUP2 MSTORE PUSH1 0x0 PUSH2 0x16D5 PUSH1 0x80 DUP4 ADD DUP10 DUP12 PUSH2 0x1480 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x16E8 DUP2 DUP9 DUP11 PUSH2 0x1480 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x16FD DUP2 DUP7 DUP9 PUSH2 0x1480 JUMP JUMPDEST SWAP2 POP POP DUP3 PUSH1 0x60 DUP4 ADD MSTORE SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1726 PUSH1 0x20 DUP4 ADD DUP5 DUP7 PUSH2 0x1480 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB4 0x4C 0x49 PUSH22 0x20ED940A8E3F8515BA04B58A179AAB218309D0DBCFE0 DELEGATECALL PUSH31 0x771D257864736F6C6343000812003300000000000000000000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        820,
        7774
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "5": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "8": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "LT",
      "path": "13"
    },
    "9": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x123"
    },
    "12": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "13": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "CALLDATALOAD",
      "path": "13"
    },
    "16": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "SHR",
      "path": "13"
    },
    "19": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "DUP1",
      "path": "13"
    },
    "20": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x98E4349F"
    },
    "25": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "GT",
      "path": "13"
    },
    "26": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xA0"
    },
    "29": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "30": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "DUP1",
      "path": "13"
    },
    "31": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xDF8AF7C2"
    },
    "36": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "GT",
      "path": "13"
    },
    "37": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x64"
    },
    "40": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "41": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "DUP1",
      "path": "13"
    },
    "42": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xDF8AF7C2"
    },
    "47": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "EQ",
      "path": "13"
    },
    "48": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x359"
    },
    "51": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "52": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "DUP1",
      "path": "13"
    },
    "53": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xE6EBE20C"
    },
    "58": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "EQ",
      "path": "13"
    },
    "59": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x379"
    },
    "62": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "63": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "DUP1",
      "path": "13"
    },
    "64": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xED97013B"
    },
    "69": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "EQ",
      "path": "13"
    },
    "70": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x38E"
    },
    "73": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "74": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "DUP1",
      "path": "13"
    },
    "75": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xF2FDE38B"
    },
    "80": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "EQ",
      "path": "13"
    },
    "81": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x3AE"
    },
    "84": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "85": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "DUP1",
      "path": "13"
    },
    "86": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xF8D0C40B"
    },
    "91": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "EQ",
      "path": "13"
    },
    "92": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x3CE"
    },
    "95": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "96": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "98": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "DUP1",
      "path": "13"
    },
    "99": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "REVERT",
      "path": "13"
    },
    "100": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "101": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "DUP1",
      "path": "13"
    },
    "102": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x98E4349F"
    },
    "107": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "EQ",
      "path": "13"
    },
    "108": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2A1"
    },
    "111": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "112": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "DUP1",
      "path": "13"
    },
    "113": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xB7AB4DB5"
    },
    "118": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "EQ",
      "path": "13"
    },
    "119": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2C1"
    },
    "122": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "123": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "DUP1",
      "path": "13"
    },
    "124": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xBBADC93A"
    },
    "129": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "EQ",
      "path": "13"
    },
    "130": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2E3"
    },
    "133": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "134": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "DUP1",
      "path": "13"
    },
    "135": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xBF3A6C0A"
    },
    "140": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "EQ",
      "path": "13"
    },
    "141": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x319"
    },
    "144": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "145": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "DUP1",
      "path": "13"
    },
    "146": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xCC9FBB76"
    },
    "151": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "EQ",
      "path": "13"
    },
    "152": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x339"
    },
    "155": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "156": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "158": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "DUP1",
      "path": "13"
    },
    "159": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "REVERT",
      "path": "13"
    },
    "160": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "161": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "DUP1",
      "path": "13"
    },
    "162": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x3A4B66F1"
    },
    "167": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "GT",
      "path": "13"
    },
    "168": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xE7"
    },
    "171": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "172": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "DUP1",
      "path": "13"
    },
    "173": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x3A4B66F1"
    },
    "178": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "EQ",
      "path": "13"
    },
    "179": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x204"
    },
    "182": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "183": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "DUP1",
      "path": "13"
    },
    "184": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x5D3EEA91"
    },
    "189": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "EQ",
      "path": "13"
    },
    "190": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x20C"
    },
    "193": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "194": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "DUP1",
      "path": "13"
    },
    "195": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x715018A6"
    },
    "200": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "EQ",
      "path": "13"
    },
    "201": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x22C"
    },
    "204": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "205": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "DUP1",
      "path": "13"
    },
    "206": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x7B4BC935"
    },
    "211": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "EQ",
      "path": "13"
    },
    "212": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x241"
    },
    "215": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "216": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "DUP1",
      "path": "13"
    },
    "217": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x8DA5CB5B"
    },
    "222": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "EQ",
      "path": "13"
    },
    "223": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x283"
    },
    "226": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "227": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "229": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "DUP1",
      "path": "13"
    },
    "230": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "REVERT",
      "path": "13"
    },
    "231": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "232": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "DUP1",
      "path": "13"
    },
    "233": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x7D0E540"
    },
    "238": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "EQ",
      "path": "13"
    },
    "239": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x138"
    },
    "242": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "243": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "DUP1",
      "path": "13"
    },
    "244": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x7DC739F"
    },
    "249": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "EQ",
      "path": "13"
    },
    "250": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x175"
    },
    "253": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "254": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "DUP1",
      "path": "13"
    },
    "255": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x1B7E5127"
    },
    "260": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "EQ",
      "path": "13"
    },
    "261": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1A2"
    },
    "264": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "265": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "DUP1",
      "path": "13"
    },
    "266": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x2601D3C7"
    },
    "271": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "EQ",
      "path": "13"
    },
    "272": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1C2"
    },
    "275": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "276": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "DUP1",
      "path": "13"
    },
    "277": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x27A099D8"
    },
    "282": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "EQ",
      "path": "13"
    },
    "283": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1E2"
    },
    "286": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "287": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "289": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "DUP1",
      "path": "13"
    },
    "290": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "REVERT",
      "path": "13"
    },
    "291": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "292": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "293": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x133"
    },
    "296": {
      "fn": null,
      "offset": [
        820,
        7774
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "297": {
      "fn": "StakingPool.<receive>",
      "offset": [
        2340,
        2373
      ],
      "op": "PUSH2",
      "path": "13",
      "statement": 0,
      "value": "0x131"
    },
    "300": {
      "fn": "StakingPool.<receive>",
      "offset": [
        2363,
        2372
      ],
      "op": "CALLVALUE",
      "path": "13"
    },
    "301": {
      "fn": "StakingPool.<receive>",
      "offset": [
        2340,
        2362
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x3EE"
    },
    "304": {
      "fn": "StakingPool.<receive>",
      "jump": "i",
      "offset": [
        2340,
        2373
      ],
      "op": "JUMP",
      "path": "13"
    },
    "305": {
      "fn": "StakingPool.<receive>",
      "offset": [
        2340,
        2373
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "306": {
      "offset": [
        820,
        7774
      ],
      "op": "STOP",
      "path": "13"
    },
    "307": {
      "fn": "StakingPool.<receive>",
      "offset": [
        820,
        7774
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "308": {
      "fn": "StakingPool.<receive>",
      "offset": [
        820,
        7774
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "310": {
      "fn": "StakingPool.<receive>",
      "offset": [
        820,
        7774
      ],
      "op": "DUP1",
      "path": "13"
    },
    "311": {
      "first_revert": true,
      "fn": "StakingPool.<receive>",
      "offset": [
        820,
        7774
      ],
      "op": "REVERT",
      "path": "13"
    },
    "312": {
      "offset": [
        1089,
        1118
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "313": {
      "fn": "StakingPool.<receive>",
      "offset": [
        1089,
        1118
      ],
      "op": "CALLVALUE",
      "path": "13"
    },
    "314": {
      "fn": "StakingPool.<receive>",
      "offset": [
        1089,
        1118
      ],
      "op": "DUP1",
      "path": "13"
    },
    "315": {
      "fn": "StakingPool.<receive>",
      "offset": [
        1089,
        1118
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "316": {
      "fn": "StakingPool.<receive>",
      "offset": [
        1089,
        1118
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x144"
    },
    "319": {
      "fn": "StakingPool.<receive>",
      "offset": [
        1089,
        1118
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "320": {
      "fn": "StakingPool.<receive>",
      "offset": [
        1089,
        1118
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "322": {
      "fn": "StakingPool.<receive>",
      "offset": [
        1089,
        1118
      ],
      "op": "DUP1",
      "path": "13"
    },
    "323": {
      "fn": "StakingPool.<receive>",
      "offset": [
        1089,
        1118
      ],
      "op": "REVERT",
      "path": "13"
    },
    "324": {
      "fn": "StakingPool.<receive>",
      "offset": [
        1089,
        1118
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "325": {
      "op": "POP"
    },
    "326": {
      "offset": [
        1089,
        1118
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x5"
    },
    "328": {
      "fn": "StakingPool.<receive>",
      "offset": [
        1089,
        1118
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "329": {
      "fn": "StakingPool.<receive>",
      "offset": [
        1089,
        1118
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x158"
    },
    "332": {
      "fn": "StakingPool.<receive>",
      "offset": [
        1089,
        1118
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "333": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "335": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "337": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "339": {
      "op": "SHL"
    },
    "340": {
      "op": "SUB"
    },
    "341": {
      "offset": [
        1089,
        1118
      ],
      "op": "AND",
      "path": "13"
    },
    "342": {
      "fn": "StakingPool.<receive>",
      "offset": [
        1089,
        1118
      ],
      "op": "DUP2",
      "path": "13"
    },
    "343": {
      "fn": "StakingPool.<receive>",
      "offset": [
        1089,
        1118
      ],
      "op": "JUMP",
      "path": "13"
    },
    "344": {
      "fn": "StakingPool.<receive>",
      "offset": [
        1089,
        1118
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "345": {
      "fn": "StakingPool.<receive>",
      "offset": [
        1089,
        1118
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "347": {
      "fn": "StakingPool.<receive>",
      "offset": [
        1089,
        1118
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "348": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "350": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "352": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "354": {
      "op": "SHL"
    },
    "355": {
      "op": "SUB"
    },
    "356": {
      "op": "SWAP1"
    },
    "357": {
      "op": "SWAP2"
    },
    "358": {
      "op": "AND"
    },
    "359": {
      "op": "DUP2"
    },
    "360": {
      "op": "MSTORE"
    },
    "361": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "363": {
      "op": "ADD"
    },
    "364": {
      "offset": [
        1089,
        1118
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "365": {
      "fn": "StakingPool.<receive>",
      "offset": [
        1089,
        1118
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "367": {
      "fn": "StakingPool.<receive>",
      "offset": [
        1089,
        1118
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "368": {
      "fn": "StakingPool.<receive>",
      "offset": [
        1089,
        1118
      ],
      "op": "DUP1",
      "path": "13"
    },
    "369": {
      "fn": "StakingPool.<receive>",
      "offset": [
        1089,
        1118
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "370": {
      "fn": "StakingPool.<receive>",
      "offset": [
        1089,
        1118
      ],
      "op": "SUB",
      "path": "13"
    },
    "371": {
      "fn": "StakingPool.<receive>",
      "offset": [
        1089,
        1118
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "372": {
      "fn": "StakingPool.<receive>",
      "offset": [
        1089,
        1118
      ],
      "op": "RETURN",
      "path": "13"
    },
    "373": {
      "offset": [
        1189,
        1214
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "374": {
      "fn": "StakingPool.<receive>",
      "offset": [
        1189,
        1214
      ],
      "op": "CALLVALUE",
      "path": "13"
    },
    "375": {
      "fn": "StakingPool.<receive>",
      "offset": [
        1189,
        1214
      ],
      "op": "DUP1",
      "path": "13"
    },
    "376": {
      "fn": "StakingPool.<receive>",
      "offset": [
        1189,
        1214
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "377": {
      "fn": "StakingPool.<receive>",
      "offset": [
        1189,
        1214
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x181"
    },
    "380": {
      "fn": "StakingPool.<receive>",
      "offset": [
        1189,
        1214
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "381": {
      "fn": "StakingPool.<receive>",
      "offset": [
        1189,
        1214
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "383": {
      "fn": "StakingPool.<receive>",
      "offset": [
        1189,
        1214
      ],
      "op": "DUP1",
      "path": "13"
    },
    "384": {
      "fn": "StakingPool.<receive>",
      "offset": [
        1189,
        1214
      ],
      "op": "REVERT",
      "path": "13"
    },
    "385": {
      "fn": "StakingPool.<receive>",
      "offset": [
        1189,
        1214
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "386": {
      "op": "POP"
    },
    "387": {
      "offset": [
        1189,
        1214
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x195"
    },
    "390": {
      "fn": "StakingPool.<receive>",
      "offset": [
        1189,
        1214
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x190"
    },
    "393": {
      "fn": "StakingPool.<receive>",
      "offset": [
        1189,
        1214
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "394": {
      "fn": "StakingPool.<receive>",
      "offset": [
        1189,
        1214
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "396": {
      "fn": "StakingPool.<receive>",
      "offset": [
        1189,
        1214
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xF27"
    },
    "399": {
      "fn": "StakingPool.<receive>",
      "jump": "i",
      "offset": [
        1189,
        1214
      ],
      "op": "JUMP",
      "path": "13"
    },
    "400": {
      "fn": "StakingPool.<receive>",
      "offset": [
        1189,
        1214
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "401": {
      "fn": "StakingPool.<receive>",
      "offset": [
        1189,
        1214
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x408"
    },
    "404": {
      "fn": "StakingPool.<receive>",
      "jump": "i",
      "offset": [
        1189,
        1214
      ],
      "op": "JUMP",
      "path": "13"
    },
    "405": {
      "fn": "StakingPool.<receive>",
      "offset": [
        1189,
        1214
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "406": {
      "fn": "StakingPool.<receive>",
      "offset": [
        1189,
        1214
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "408": {
      "fn": "StakingPool.<receive>",
      "offset": [
        1189,
        1214
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "409": {
      "fn": "StakingPool.<receive>",
      "offset": [
        1189,
        1214
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x16C"
    },
    "412": {
      "fn": "StakingPool.<receive>",
      "offset": [
        1189,
        1214
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "413": {
      "fn": "StakingPool.<receive>",
      "offset": [
        1189,
        1214
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "414": {
      "fn": "StakingPool.<receive>",
      "offset": [
        1189,
        1214
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xF86"
    },
    "417": {
      "fn": "StakingPool.<receive>",
      "jump": "i",
      "offset": [
        1189,
        1214
      ],
      "op": "JUMP",
      "path": "13"
    },
    "418": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        3532,
        3846
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "419": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        3532,
        3846
      ],
      "op": "CALLVALUE",
      "path": "13"
    },
    "420": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        3532,
        3846
      ],
      "op": "DUP1",
      "path": "13"
    },
    "421": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        3532,
        3846
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "422": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        3532,
        3846
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1AE"
    },
    "425": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        3532,
        3846
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "426": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        3532,
        3846
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "428": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        3532,
        3846
      ],
      "op": "DUP1",
      "path": "13"
    },
    "429": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        3532,
        3846
      ],
      "op": "REVERT",
      "path": "13"
    },
    "430": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        3532,
        3846
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "431": {
      "op": "POP"
    },
    "432": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        3532,
        3846
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x131"
    },
    "435": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        3532,
        3846
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1BD"
    },
    "438": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        3532,
        3846
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "439": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        3532,
        3846
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "441": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        3532,
        3846
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xF27"
    },
    "444": {
      "fn": "StakingPool.updateBeaconRewards",
      "jump": "i",
      "offset": [
        3532,
        3846
      ],
      "op": "JUMP",
      "path": "13"
    },
    "445": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        3532,
        3846
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "446": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        3532,
        3846
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x4B4"
    },
    "449": {
      "fn": "StakingPool.updateBeaconRewards",
      "jump": "i",
      "offset": [
        3532,
        3846
      ],
      "op": "JUMP",
      "path": "13"
    },
    "450": {
      "offset": [
        917,
        950
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "451": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        917,
        950
      ],
      "op": "CALLVALUE",
      "path": "13"
    },
    "452": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        917,
        950
      ],
      "op": "DUP1",
      "path": "13"
    },
    "453": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        917,
        950
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "454": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        917,
        950
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1CE"
    },
    "457": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        917,
        950
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "458": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        917,
        950
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "460": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        917,
        950
      ],
      "op": "DUP1",
      "path": "13"
    },
    "461": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        917,
        950
      ],
      "op": "REVERT",
      "path": "13"
    },
    "462": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        917,
        950
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "463": {
      "op": "POP"
    },
    "464": {
      "offset": [
        917,
        950
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x3"
    },
    "466": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        917,
        950
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "467": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        917,
        950
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x158"
    },
    "470": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        917,
        950
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "471": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "473": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "475": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "477": {
      "op": "SHL"
    },
    "478": {
      "op": "SUB"
    },
    "479": {
      "offset": [
        917,
        950
      ],
      "op": "AND",
      "path": "13"
    },
    "480": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        917,
        950
      ],
      "op": "DUP2",
      "path": "13"
    },
    "481": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        917,
        950
      ],
      "op": "JUMP",
      "path": "13"
    },
    "482": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2486,
        2584
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "483": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2486,
        2584
      ],
      "op": "CALLVALUE",
      "path": "13"
    },
    "484": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2486,
        2584
      ],
      "op": "DUP1",
      "path": "13"
    },
    "485": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2486,
        2584
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "486": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2486,
        2584
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1EE"
    },
    "489": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2486,
        2584
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "490": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2486,
        2584
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "492": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2486,
        2584
      ],
      "op": "DUP1",
      "path": "13"
    },
    "493": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2486,
        2584
      ],
      "op": "REVERT",
      "path": "13"
    },
    "494": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2486,
        2584
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "495": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2486,
        2584
      ],
      "op": "POP",
      "path": "13"
    },
    "496": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2486,
        2584
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1F7"
    },
    "499": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2486,
        2584
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x513"
    },
    "502": {
      "fn": "StakingPool.getOperators",
      "jump": "i",
      "offset": [
        2486,
        2584
      ],
      "op": "JUMP",
      "path": "13"
    },
    "503": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2486,
        2584
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "504": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2486,
        2584
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "506": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2486,
        2584
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "507": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2486,
        2584
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x16C"
    },
    "510": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2486,
        2584
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "511": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2486,
        2584
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "512": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2486,
        2584
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xFA0"
    },
    "515": {
      "fn": "StakingPool.getOperators",
      "jump": "i",
      "offset": [
        2486,
        2584
      ],
      "op": "JUMP",
      "path": "13"
    },
    "516": {
      "fn": "StakingPool.stake",
      "offset": [
        3897,
        4459
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "517": {
      "fn": "StakingPool.stake",
      "offset": [
        3897,
        4459
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x131"
    },
    "520": {
      "fn": "StakingPool.stake",
      "offset": [
        3897,
        4459
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x579"
    },
    "523": {
      "fn": "StakingPool.stake",
      "jump": "i",
      "offset": [
        3897,
        4459
      ],
      "op": "JUMP",
      "path": "13"
    },
    "524": {
      "fn": "StakingPool.unStake",
      "offset": [
        4556,
        4848
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "525": {
      "fn": "StakingPool.unStake",
      "offset": [
        4556,
        4848
      ],
      "op": "CALLVALUE",
      "path": "13"
    },
    "526": {
      "fn": "StakingPool.unStake",
      "offset": [
        4556,
        4848
      ],
      "op": "DUP1",
      "path": "13"
    },
    "527": {
      "fn": "StakingPool.unStake",
      "offset": [
        4556,
        4848
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "528": {
      "fn": "StakingPool.unStake",
      "offset": [
        4556,
        4848
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x218"
    },
    "531": {
      "fn": "StakingPool.unStake",
      "offset": [
        4556,
        4848
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "532": {
      "fn": "StakingPool.unStake",
      "offset": [
        4556,
        4848
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "534": {
      "fn": "StakingPool.unStake",
      "offset": [
        4556,
        4848
      ],
      "op": "DUP1",
      "path": "13"
    },
    "535": {
      "fn": "StakingPool.unStake",
      "offset": [
        4556,
        4848
      ],
      "op": "REVERT",
      "path": "13"
    },
    "536": {
      "fn": "StakingPool.unStake",
      "offset": [
        4556,
        4848
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "537": {
      "op": "POP"
    },
    "538": {
      "fn": "StakingPool.unStake",
      "offset": [
        4556,
        4848
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x131"
    },
    "541": {
      "fn": "StakingPool.unStake",
      "offset": [
        4556,
        4848
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x227"
    },
    "544": {
      "fn": "StakingPool.unStake",
      "offset": [
        4556,
        4848
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "545": {
      "fn": "StakingPool.unStake",
      "offset": [
        4556,
        4848
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "547": {
      "fn": "StakingPool.unStake",
      "offset": [
        4556,
        4848
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xF27"
    },
    "550": {
      "fn": "StakingPool.unStake",
      "jump": "i",
      "offset": [
        4556,
        4848
      ],
      "op": "JUMP",
      "path": "13"
    },
    "551": {
      "fn": "StakingPool.unStake",
      "offset": [
        4556,
        4848
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "552": {
      "fn": "StakingPool.unStake",
      "offset": [
        4556,
        4848
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x6EC"
    },
    "555": {
      "fn": "StakingPool.unStake",
      "jump": "i",
      "offset": [
        4556,
        4848
      ],
      "op": "JUMP",
      "path": "13"
    },
    "556": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "557": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "558": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "DUP1",
      "path": "2"
    },
    "559": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "560": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x238"
    },
    "563": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "564": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "566": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "DUP1",
      "path": "2"
    },
    "567": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "REVERT",
      "path": "2"
    },
    "568": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "569": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "POP",
      "path": "2"
    },
    "570": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x131"
    },
    "573": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x857"
    },
    "576": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1831,
        1932
      ],
      "op": "JUMP",
      "path": "2"
    },
    "577": {
      "offset": [
        1030,
        1083
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "578": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1030,
        1083
      ],
      "op": "CALLVALUE",
      "path": "13"
    },
    "579": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1030,
        1083
      ],
      "op": "DUP1",
      "path": "13"
    },
    "580": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1030,
        1083
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "581": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1030,
        1083
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x24D"
    },
    "584": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1030,
        1083
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "585": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1030,
        1083
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "587": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1030,
        1083
      ],
      "op": "DUP1",
      "path": "13"
    },
    "588": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1030,
        1083
      ],
      "op": "REVERT",
      "path": "13"
    },
    "589": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1030,
        1083
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "590": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1030,
        1083
      ],
      "op": "POP",
      "path": "13"
    },
    "591": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1030,
        1083
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x275"
    },
    "594": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1030,
        1083
      ],
      "op": "PUSH32",
      "path": "13",
      "value": "0x0"
    },
    "627": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1030,
        1083
      ],
      "op": "DUP2",
      "path": "13"
    },
    "628": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1030,
        1083
      ],
      "op": "JUMP",
      "path": "13"
    },
    "629": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1030,
        1083
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "630": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1030,
        1083
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "632": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1030,
        1083
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "633": {
      "op": "SWAP1"
    },
    "634": {
      "op": "DUP2"
    },
    "635": {
      "op": "MSTORE"
    },
    "636": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "638": {
      "op": "ADD"
    },
    "639": {
      "offset": [
        1030,
        1083
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x16C"
    },
    "642": {
      "op": "JUMP"
    },
    "643": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "644": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "645": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "DUP1",
      "path": "2"
    },
    "646": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "647": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x28F"
    },
    "650": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "651": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "653": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "DUP1",
      "path": "2"
    },
    "654": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "REVERT",
      "path": "2"
    },
    "655": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "656": {
      "op": "POP"
    },
    "657": {
      "fn": "Ownable.owner",
      "offset": [
        1247,
        1254
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "659": {
      "fn": "Ownable.owner",
      "offset": [
        1273,
        1279
      ],
      "op": "SLOAD",
      "path": "2",
      "statement": 1
    },
    "660": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "662": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "664": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "666": {
      "op": "SHL"
    },
    "667": {
      "op": "SUB"
    },
    "668": {
      "fn": "Ownable.owner",
      "offset": [
        1273,
        1279
      ],
      "op": "AND",
      "path": "2"
    },
    "669": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x158"
    },
    "672": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "JUMP",
      "path": "2"
    },
    "673": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6097,
        7220
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "674": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6097,
        7220
      ],
      "op": "CALLVALUE",
      "path": "13"
    },
    "675": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6097,
        7220
      ],
      "op": "DUP1",
      "path": "13"
    },
    "676": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6097,
        7220
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "677": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6097,
        7220
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2AD"
    },
    "680": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6097,
        7220
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "681": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6097,
        7220
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "683": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6097,
        7220
      ],
      "op": "DUP1",
      "path": "13"
    },
    "684": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6097,
        7220
      ],
      "op": "REVERT",
      "path": "13"
    },
    "685": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6097,
        7220
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "686": {
      "op": "POP"
    },
    "687": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6097,
        7220
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x131"
    },
    "690": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6097,
        7220
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2BC"
    },
    "693": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6097,
        7220
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "694": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6097,
        7220
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "696": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6097,
        7220
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1102"
    },
    "699": {
      "fn": "StakingPool.depositShares",
      "jump": "i",
      "offset": [
        6097,
        7220
      ],
      "op": "JUMP",
      "path": "13"
    },
    "700": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6097,
        7220
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "701": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6097,
        7220
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x86B"
    },
    "704": {
      "fn": "StakingPool.depositShares",
      "jump": "i",
      "offset": [
        6097,
        7220
      ],
      "op": "JUMP",
      "path": "13"
    },
    "705": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2642,
        2738
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "706": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2642,
        2738
      ],
      "op": "CALLVALUE",
      "path": "13"
    },
    "707": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2642,
        2738
      ],
      "op": "DUP1",
      "path": "13"
    },
    "708": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2642,
        2738
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "709": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2642,
        2738
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2CD"
    },
    "712": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2642,
        2738
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "713": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2642,
        2738
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "715": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2642,
        2738
      ],
      "op": "DUP1",
      "path": "13"
    },
    "716": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2642,
        2738
      ],
      "op": "REVERT",
      "path": "13"
    },
    "717": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2642,
        2738
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "718": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2642,
        2738
      ],
      "op": "POP",
      "path": "13"
    },
    "719": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2642,
        2738
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2D6"
    },
    "722": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2642,
        2738
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xA1E"
    },
    "725": {
      "fn": "StakingPool.getValidators",
      "jump": "i",
      "offset": [
        2642,
        2738
      ],
      "op": "JUMP",
      "path": "13"
    },
    "726": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2642,
        2738
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "727": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2642,
        2738
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "729": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2642,
        2738
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "730": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2642,
        2738
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x16C"
    },
    "733": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2642,
        2738
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "734": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2642,
        2738
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "735": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2642,
        2738
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x11E8"
    },
    "738": {
      "fn": "StakingPool.getValidators",
      "jump": "i",
      "offset": [
        2642,
        2738
      ],
      "op": "JUMP",
      "path": "13"
    },
    "739": {
      "fn": "StakingPool.getUserStake",
      "offset": [
        2800,
        2921
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "740": {
      "fn": "StakingPool.getUserStake",
      "offset": [
        2800,
        2921
      ],
      "op": "CALLVALUE",
      "path": "13"
    },
    "741": {
      "fn": "StakingPool.getUserStake",
      "offset": [
        2800,
        2921
      ],
      "op": "DUP1",
      "path": "13"
    },
    "742": {
      "fn": "StakingPool.getUserStake",
      "offset": [
        2800,
        2921
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "743": {
      "fn": "StakingPool.getUserStake",
      "offset": [
        2800,
        2921
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2EF"
    },
    "746": {
      "fn": "StakingPool.getUserStake",
      "offset": [
        2800,
        2921
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "747": {
      "fn": "StakingPool.getUserStake",
      "offset": [
        2800,
        2921
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "749": {
      "fn": "StakingPool.getUserStake",
      "offset": [
        2800,
        2921
      ],
      "op": "DUP1",
      "path": "13"
    },
    "750": {
      "fn": "StakingPool.getUserStake",
      "offset": [
        2800,
        2921
      ],
      "op": "REVERT",
      "path": "13"
    },
    "751": {
      "fn": "StakingPool.getUserStake",
      "offset": [
        2800,
        2921
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "752": {
      "op": "POP"
    },
    "753": {
      "fn": "StakingPool.getUserStake",
      "offset": [
        2800,
        2921
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x275"
    },
    "756": {
      "fn": "StakingPool.getUserStake",
      "offset": [
        2800,
        2921
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2FE"
    },
    "759": {
      "fn": "StakingPool.getUserStake",
      "offset": [
        2800,
        2921
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "760": {
      "fn": "StakingPool.getUserStake",
      "offset": [
        2800,
        2921
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "762": {
      "fn": "StakingPool.getUserStake",
      "offset": [
        2800,
        2921
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x124A"
    },
    "765": {
      "fn": "StakingPool.getUserStake",
      "jump": "i",
      "offset": [
        2800,
        2921
      ],
      "op": "JUMP",
      "path": "13"
    },
    "766": {
      "fn": "StakingPool.getUserStake",
      "offset": [
        2800,
        2921
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "767": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "769": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "771": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "773": {
      "op": "SHL"
    },
    "774": {
      "op": "SUB"
    },
    "775": {
      "fn": "StakingPool.getUserStake",
      "offset": [
        2891,
        2914
      ],
      "op": "AND",
      "path": "13",
      "statement": 2
    },
    "776": {
      "fn": "StakingPool.getUserStake",
      "offset": [
        2865,
        2872
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "778": {
      "fn": "StakingPool.getUserStake",
      "offset": [
        2891,
        2914
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "779": {
      "fn": "StakingPool.getUserStake",
      "offset": [
        2891,
        2914
      ],
      "op": "DUP2",
      "path": "13"
    },
    "780": {
      "fn": "StakingPool.getUserStake",
      "offset": [
        2891,
        2914
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "781": {
      "fn": "StakingPool.getUserStake",
      "offset": [
        2891,
        2900
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xB"
    },
    "783": {
      "fn": "StakingPool.getUserStake",
      "offset": [
        2891,
        2914
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "785": {
      "fn": "StakingPool.getUserStake",
      "offset": [
        2891,
        2914
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "786": {
      "fn": "StakingPool.getUserStake",
      "offset": [
        2891,
        2914
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "788": {
      "fn": "StakingPool.getUserStake",
      "offset": [
        2891,
        2914
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "789": {
      "fn": "StakingPool.getUserStake",
      "offset": [
        2891,
        2914
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "790": {
      "fn": "StakingPool.getUserStake",
      "offset": [
        2891,
        2914
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "791": {
      "fn": "StakingPool.getUserStake",
      "offset": [
        2891,
        2914
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "792": {
      "fn": "StakingPool.getUserStake",
      "offset": [
        2800,
        2921
      ],
      "op": "JUMP",
      "path": "13"
    },
    "793": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5174,
        5713
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "794": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5174,
        5713
      ],
      "op": "CALLVALUE",
      "path": "13"
    },
    "795": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5174,
        5713
      ],
      "op": "DUP1",
      "path": "13"
    },
    "796": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5174,
        5713
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "797": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5174,
        5713
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x325"
    },
    "800": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5174,
        5713
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "801": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5174,
        5713
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "803": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5174,
        5713
      ],
      "op": "DUP1",
      "path": "13"
    },
    "804": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5174,
        5713
      ],
      "op": "REVERT",
      "path": "13"
    },
    "805": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5174,
        5713
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "806": {
      "op": "POP"
    },
    "807": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5174,
        5713
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x131"
    },
    "810": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5174,
        5713
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x334"
    },
    "813": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5174,
        5713
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "814": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5174,
        5713
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "816": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5174,
        5713
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1273"
    },
    "819": {
      "fn": "StakingPool.depositValidator",
      "jump": "i",
      "offset": [
        5174,
        5713
      ],
      "op": "JUMP",
      "path": "13"
    },
    "820": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5174,
        5713
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "821": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5174,
        5713
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xAF7"
    },
    "824": {
      "fn": "StakingPool.depositValidator",
      "jump": "i",
      "offset": [
        5174,
        5713
      ],
      "op": "JUMP",
      "path": "13"
    },
    "825": {
      "offset": [
        1124,
        1156
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "826": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        1124,
        1156
      ],
      "op": "CALLVALUE",
      "path": "13"
    },
    "827": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        1124,
        1156
      ],
      "op": "DUP1",
      "path": "13"
    },
    "828": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        1124,
        1156
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "829": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        1124,
        1156
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x345"
    },
    "832": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        1124,
        1156
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "833": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        1124,
        1156
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "835": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        1124,
        1156
      ],
      "op": "DUP1",
      "path": "13"
    },
    "836": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        1124,
        1156
      ],
      "op": "REVERT",
      "path": "13"
    },
    "837": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        1124,
        1156
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "838": {
      "op": "POP"
    },
    "839": {
      "offset": [
        1124,
        1156
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x6"
    },
    "841": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        1124,
        1156
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "842": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        1124,
        1156
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x158"
    },
    "845": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        1124,
        1156
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "846": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "848": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "850": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "852": {
      "op": "SHL"
    },
    "853": {
      "op": "SUB"
    },
    "854": {
      "offset": [
        1124,
        1156
      ],
      "op": "AND",
      "path": "13"
    },
    "855": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        1124,
        1156
      ],
      "op": "DUP2",
      "path": "13"
    },
    "856": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        1124,
        1156
      ],
      "op": "JUMP",
      "path": "13"
    },
    "857": {
      "offset": [
        1004,
        1024
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "858": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        1004,
        1024
      ],
      "op": "CALLVALUE",
      "path": "13"
    },
    "859": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        1004,
        1024
      ],
      "op": "DUP1",
      "path": "13"
    },
    "860": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        1004,
        1024
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "861": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        1004,
        1024
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x365"
    },
    "864": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        1004,
        1024
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "865": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        1004,
        1024
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "867": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        1004,
        1024
      ],
      "op": "DUP1",
      "path": "13"
    },
    "868": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        1004,
        1024
      ],
      "op": "REVERT",
      "path": "13"
    },
    "869": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        1004,
        1024
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "870": {
      "op": "POP"
    },
    "871": {
      "offset": [
        1004,
        1024
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "873": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        1004,
        1024
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "874": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        1004,
        1024
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x158"
    },
    "877": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        1004,
        1024
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "878": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "880": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "882": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "884": {
      "op": "SHL"
    },
    "885": {
      "op": "SUB"
    },
    "886": {
      "offset": [
        1004,
        1024
      ],
      "op": "AND",
      "path": "13"
    },
    "887": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        1004,
        1024
      ],
      "op": "DUP2",
      "path": "13"
    },
    "888": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        1004,
        1024
      ],
      "op": "JUMP",
      "path": "13"
    },
    "889": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        2974,
        3115
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "890": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        2974,
        3115
      ],
      "op": "CALLVALUE",
      "path": "13"
    },
    "891": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        2974,
        3115
      ],
      "op": "DUP1",
      "path": "13"
    },
    "892": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        2974,
        3115
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "893": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        2974,
        3115
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x385"
    },
    "896": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        2974,
        3115
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "897": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        2974,
        3115
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "899": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        2974,
        3115
      ],
      "op": "DUP1",
      "path": "13"
    },
    "900": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        2974,
        3115
      ],
      "op": "REVERT",
      "path": "13"
    },
    "901": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        2974,
        3115
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "902": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        2974,
        3115
      ],
      "op": "POP",
      "path": "13"
    },
    "903": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        2974,
        3115
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x275"
    },
    "906": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        2974,
        3115
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xBE5"
    },
    "909": {
      "fn": "StakingPool.getShareprice",
      "jump": "i",
      "offset": [
        2974,
        3115
      ],
      "op": "JUMP",
      "path": "13"
    },
    "910": {
      "fn": "StakingPool.updateOperators",
      "offset": [
        3230,
        3396
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "911": {
      "fn": "StakingPool.updateOperators",
      "offset": [
        3230,
        3396
      ],
      "op": "CALLVALUE",
      "path": "13"
    },
    "912": {
      "fn": "StakingPool.updateOperators",
      "offset": [
        3230,
        3396
      ],
      "op": "DUP1",
      "path": "13"
    },
    "913": {
      "fn": "StakingPool.updateOperators",
      "offset": [
        3230,
        3396
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "914": {
      "fn": "StakingPool.updateOperators",
      "offset": [
        3230,
        3396
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x39A"
    },
    "917": {
      "fn": "StakingPool.updateOperators",
      "offset": [
        3230,
        3396
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "918": {
      "fn": "StakingPool.updateOperators",
      "offset": [
        3230,
        3396
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "920": {
      "fn": "StakingPool.updateOperators",
      "offset": [
        3230,
        3396
      ],
      "op": "DUP1",
      "path": "13"
    },
    "921": {
      "fn": "StakingPool.updateOperators",
      "offset": [
        3230,
        3396
      ],
      "op": "REVERT",
      "path": "13"
    },
    "922": {
      "fn": "StakingPool.updateOperators",
      "offset": [
        3230,
        3396
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "923": {
      "op": "POP"
    },
    "924": {
      "fn": "StakingPool.updateOperators",
      "offset": [
        3230,
        3396
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x131"
    },
    "927": {
      "fn": "StakingPool.updateOperators",
      "offset": [
        3230,
        3396
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x3A9"
    },
    "930": {
      "fn": "StakingPool.updateOperators",
      "offset": [
        3230,
        3396
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "931": {
      "fn": "StakingPool.updateOperators",
      "offset": [
        3230,
        3396
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "933": {
      "fn": "StakingPool.updateOperators",
      "offset": [
        3230,
        3396
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1316"
    },
    "936": {
      "fn": "StakingPool.updateOperators",
      "jump": "i",
      "offset": [
        3230,
        3396
      ],
      "op": "JUMP",
      "path": "13"
    },
    "937": {
      "fn": "StakingPool.updateOperators",
      "offset": [
        3230,
        3396
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "938": {
      "fn": "StakingPool.updateOperators",
      "offset": [
        3230,
        3396
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xC58"
    },
    "941": {
      "fn": "StakingPool.updateOperators",
      "jump": "i",
      "offset": [
        3230,
        3396
      ],
      "op": "JUMP",
      "path": "13"
    },
    "942": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "943": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "944": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "DUP1",
      "path": "2"
    },
    "945": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "946": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3BA"
    },
    "949": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "950": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "952": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "DUP1",
      "path": "2"
    },
    "953": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "REVERT",
      "path": "2"
    },
    "954": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "955": {
      "op": "POP"
    },
    "956": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x131"
    },
    "959": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3C9"
    },
    "962": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "963": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "965": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x124A"
    },
    "968": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMP",
      "path": "2"
    },
    "969": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "970": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCA8"
    },
    "973": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMP",
      "path": "2"
    },
    "974": {
      "offset": [
        875,
        911
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "975": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        875,
        911
      ],
      "op": "CALLVALUE",
      "path": "13"
    },
    "976": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        875,
        911
      ],
      "op": "DUP1",
      "path": "13"
    },
    "977": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        875,
        911
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "978": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        875,
        911
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x3DA"
    },
    "981": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        875,
        911
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "982": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        875,
        911
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "984": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        875,
        911
      ],
      "op": "DUP1",
      "path": "13"
    },
    "985": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        875,
        911
      ],
      "op": "REVERT",
      "path": "13"
    },
    "986": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        875,
        911
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "987": {
      "op": "POP"
    },
    "988": {
      "offset": [
        875,
        911
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x2"
    },
    "990": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        875,
        911
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "991": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        875,
        911
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x158"
    },
    "994": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        875,
        911
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "995": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "997": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "999": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1001": {
      "op": "SHL"
    },
    "1002": {
      "op": "SUB"
    },
    "1003": {
      "offset": [
        875,
        911
      ],
      "op": "AND",
      "path": "13"
    },
    "1004": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        875,
        911
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1005": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        875,
        911
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1006": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        7350,
        7478
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1007": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        7451,
        7471
      ],
      "op": "DUP1",
      "path": "13",
      "statement": 3
    },
    "1008": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        7431,
        7447
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xA"
    },
    "1010": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        7431,
        7447
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1012": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        7431,
        7471
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1013": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        7431,
        7471
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1014": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        7431,
        7471
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1015": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        7431,
        7471
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x400"
    },
    "1018": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        7431,
        7471
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1019": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        7431,
        7471
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1020": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        7431,
        7471
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x13B1"
    },
    "1023": {
      "fn": "StakingPool.updateExecutionRewards",
      "jump": "i",
      "offset": [
        7431,
        7471
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1024": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        7431,
        7471
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1025": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        7431,
        7471
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1026": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        7431,
        7471
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1027": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        7431,
        7471
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "1028": {
      "op": "POP"
    },
    "1029": {
      "op": "POP"
    },
    "1030": {
      "op": "POP"
    },
    "1031": {
      "fn": "StakingPool.updateExecutionRewards",
      "jump": "o",
      "offset": [
        7350,
        7478
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1032": {
      "offset": [
        1189,
        1214
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1033": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1189,
        1214
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x8"
    },
    "1035": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1189,
        1214
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1036": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1189,
        1214
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1037": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1189,
        1214
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1038": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1189,
        1214
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1039": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1189,
        1214
      ],
      "op": "LT",
      "path": "13"
    },
    "1040": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1189,
        1214
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x418"
    },
    "1043": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1189,
        1214
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "1044": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1189,
        1214
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1046": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1189,
        1214
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1047": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1189,
        1214
      ],
      "op": "REVERT",
      "path": "13"
    },
    "1048": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1189,
        1214
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1049": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1189,
        1214
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1050": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1189,
        1214
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1052": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1189,
        1214
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1053": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1189,
        1214
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "1055": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1189,
        1214
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1057": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1189,
        1214
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "1058": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1189,
        1214
      ],
      "op": "ADD",
      "path": "13"
    },
    "1059": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1189,
        1214
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1061": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1189,
        1214
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1062": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1189,
        1214
      ],
      "op": "POP",
      "path": "13"
    },
    "1063": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1189,
        1214
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1064": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1189,
        1214
      ],
      "op": "POP",
      "path": "13"
    },
    "1065": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1189,
        1214
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1066": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1189,
        1214
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1067": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1189,
        1214
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x433"
    },
    "1070": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1189,
        1214
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1071": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1189,
        1214
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x13C4"
    },
    "1074": {
      "fn": "StakingPool.updateExecutionRewards",
      "jump": "i",
      "offset": [
        1189,
        1214
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1075": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1189,
        1214
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1076": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1189,
        1214
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1077": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1189,
        1214
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1F"
    },
    "1079": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1189,
        1214
      ],
      "op": "ADD",
      "path": "13"
    },
    "1080": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1189,
        1214
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "1082": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1189,
        1214
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1083": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1189,
        1214
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1084": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1189,
        1214
      ],
      "op": "DIV",
      "path": "13"
    },
    "1085": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1189,
        1214
      ],
      "op": "MUL",
      "path": "13"
    },
    "1086": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1189,
        1214
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "1088": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1189,
        1214
      ],
      "op": "ADD",
      "path": "13"
    },
    "1089": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1189,
        1214
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1091": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1189,
        1214
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1092": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1189,
        1214
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1093": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1189,
        1214
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1094": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1189,
        1214
      ],
      "op": "ADD",
      "path": "13"
    },
    "1095": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1189,
        1214
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1097": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1189,
        1214
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1098": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1189,
        1214
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1099": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1189,
        1214
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "1100": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1189,
        1214
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1101": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1189,
        1214
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1102": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1189,
        1214
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1103": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1189,
        1214
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1104": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1189,
        1214
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1105": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1189,
        1214
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "1107": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1189,
        1214
      ],
      "op": "ADD",
      "path": "13"
    },
    "1108": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1189,
        1214
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1109": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1189,
        1214
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1110": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1189,
        1214
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1111": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1189,
        1214
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x45F"
    },
    "1114": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1189,
        1214
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1115": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1189,
        1214
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x13C4"
    },
    "1118": {
      "fn": "StakingPool.updateExecutionRewards",
      "jump": "i",
      "offset": [
        1189,
        1214
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1119": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1189,
        1214
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1120": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1189,
        1214
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1121": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1189,
        1214
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "1122": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1189,
        1214
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x4AC"
    },
    "1125": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1189,
        1214
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "1126": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1189,
        1214
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1127": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1189,
        1214
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1F"
    },
    "1129": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1189,
        1214
      ],
      "op": "LT",
      "path": "13"
    },
    "1130": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1189,
        1214
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x481"
    },
    "1133": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1189,
        1214
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "1134": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1189,
        1214
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x100"
    },
    "1137": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1189,
        1214
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1138": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1189,
        1214
      ],
      "op": "DUP4",
      "path": "13"
    },
    "1139": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1189,
        1214
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1140": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1189,
        1214
      ],
      "op": "DIV",
      "path": "13"
    },
    "1141": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1189,
        1214
      ],
      "op": "MUL",
      "path": "13"
    },
    "1142": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1189,
        1214
      ],
      "op": "DUP4",
      "path": "13"
    },
    "1143": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1189,
        1214
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1144": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1189,
        1214
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1145": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1189,
        1214
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "1147": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1189,
        1214
      ],
      "op": "ADD",
      "path": "13"
    },
    "1148": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1189,
        1214
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1149": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1189,
        1214
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x4AC"
    },
    "1152": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1189,
        1214
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1153": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1189,
        1214
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1154": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1189,
        1214
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1155": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1189,
        1214
      ],
      "op": "ADD",
      "path": "13"
    },
    "1156": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1189,
        1214
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1157": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1189,
        1214
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1158": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1189,
        1214
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1160": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1189,
        1214
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1161": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1189,
        1214
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "1163": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1189,
        1214
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1165": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1189,
        1214
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "1166": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1189,
        1214
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1167": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1189,
        1214
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1168": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1189,
        1214
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1169": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1189,
        1214
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1170": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1189,
        1214
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1171": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1189,
        1214
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1172": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1189,
        1214
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1173": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1189,
        1214
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "1175": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1189,
        1214
      ],
      "op": "ADD",
      "path": "13"
    },
    "1176": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1189,
        1214
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1177": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1189,
        1214
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "1179": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1189,
        1214
      ],
      "op": "ADD",
      "path": "13"
    },
    "1180": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1189,
        1214
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1181": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1189,
        1214
      ],
      "op": "DUP4",
      "path": "13"
    },
    "1182": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1189,
        1214
      ],
      "op": "GT",
      "path": "13"
    },
    "1183": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1189,
        1214
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x48F"
    },
    "1186": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1189,
        1214
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "1187": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1189,
        1214
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1188": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1189,
        1214
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1189": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1189,
        1214
      ],
      "op": "SUB",
      "path": "13"
    },
    "1190": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1189,
        1214
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1F"
    },
    "1192": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1189,
        1214
      ],
      "op": "AND",
      "path": "13"
    },
    "1193": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1189,
        1214
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1194": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1189,
        1214
      ],
      "op": "ADD",
      "path": "13"
    },
    "1195": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1189,
        1214
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1196": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1189,
        1214
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1197": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1189,
        1214
      ],
      "op": "POP",
      "path": "13"
    },
    "1198": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1189,
        1214
      ],
      "op": "POP",
      "path": "13"
    },
    "1199": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1189,
        1214
      ],
      "op": "POP",
      "path": "13"
    },
    "1200": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1189,
        1214
      ],
      "op": "POP",
      "path": "13"
    },
    "1201": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1189,
        1214
      ],
      "op": "POP",
      "path": "13"
    },
    "1202": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1189,
        1214
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1203": {
      "fn": "StakingPool.updateExecutionRewards",
      "jump": "o",
      "offset": [
        1189,
        1214
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1204": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        3532,
        3846
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1205": {
      "offset": [
        1094,
        1107
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4BC"
    },
    "1208": {
      "offset": [
        1094,
        1105
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD21"
    },
    "1211": {
      "jump": "i",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1212": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1213": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        3617,
        3630
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 4,
      "value": "0x9"
    },
    "1215": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        3617,
        3650
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1216": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        3617,
        3650
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1217": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        3617,
        3650
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "1218": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        3774,
        3784
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x8"
    },
    "1220": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        3774,
        3791
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1221": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        3660,
        3682
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1223": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        3660,
        3682
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1224": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        3774,
        3796
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x4D2"
    },
    "1227": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        3774,
        3796
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1228": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        3794,
        3796
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "1230": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        3774,
        3796
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x13FE"
    },
    "1233": {
      "fn": "StakingPool.updateBeaconRewards",
      "jump": "i",
      "offset": [
        3774,
        3796
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1234": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        3774,
        3796
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1235": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        3746,
        3756
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x8"
    },
    "1237": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        3746,
        3763
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1238": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        3746,
        3768
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x4E0"
    },
    "1241": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        3746,
        3768
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1242": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        3766,
        3768
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "1244": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        3746,
        3768
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x13FE"
    },
    "1247": {
      "fn": "StakingPool.updateBeaconRewards",
      "jump": "i",
      "offset": [
        3746,
        3768
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1248": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        3746,
        3768
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1249": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        3714,
        3730
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xA"
    },
    "1251": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        3714,
        3730
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1252": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        3686,
        3699
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x9"
    },
    "1254": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        3686,
        3699
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1255": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        3686,
        3730
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x4F0"
    },
    "1258": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        3686,
        3730
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1259": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        3686,
        3730
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1260": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        3686,
        3730
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x13B1"
    },
    "1263": {
      "fn": "StakingPool.updateBeaconRewards",
      "jump": "i",
      "offset": [
        3686,
        3730
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1264": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        3686,
        3730
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1265": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        3686,
        3769
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x4FA"
    },
    "1268": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        3686,
        3769
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1269": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        3686,
        3769
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1270": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        3686,
        3769
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x13B1"
    },
    "1273": {
      "fn": "StakingPool.updateBeaconRewards",
      "jump": "i",
      "offset": [
        3686,
        3769
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1274": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        3686,
        3769
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1275": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        3685,
        3797
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x504"
    },
    "1278": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        3685,
        3797
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1279": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        3685,
        3797
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1280": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        3685,
        3797
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1415"
    },
    "1283": {
      "fn": "StakingPool.updateBeaconRewards",
      "jump": "i",
      "offset": [
        3685,
        3797
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1284": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        3685,
        3797
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1285": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        3660,
        3797
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1286": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        3660,
        3797
      ],
      "op": "POP",
      "path": "13"
    },
    "1287": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        3807,
        3839
      ],
      "op": "PUSH2",
      "path": "13",
      "statement": 5,
      "value": "0x50F"
    },
    "1290": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        3824,
        3838
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1291": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        3807,
        3823
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xD7B"
    },
    "1294": {
      "fn": "StakingPool.updateBeaconRewards",
      "jump": "i",
      "offset": [
        3807,
        3839
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1295": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        3807,
        3839
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1296": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        3607,
        3846
      ],
      "op": "POP",
      "path": "13"
    },
    "1297": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        3532,
        3846
      ],
      "op": "POP",
      "path": "13"
    },
    "1298": {
      "fn": "StakingPool.updateBeaconRewards",
      "jump": "o",
      "offset": [
        3532,
        3846
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1299": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2486,
        2584
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1300": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2531,
        2547
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x51B"
    },
    "1303": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2531,
        2547
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xE58"
    },
    "1306": {
      "fn": "StakingPool.getOperators",
      "jump": "i",
      "offset": [
        2531,
        2547
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1307": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2531,
        2547
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1308": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2559,
        2577
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 6,
      "value": "0x40"
    },
    "1310": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2559,
        2577
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1311": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2559,
        2577
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1312": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2559,
        2577
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x80"
    },
    "1314": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2559,
        2577
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1315": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2559,
        2577
      ],
      "op": "ADD",
      "path": "13"
    },
    "1316": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2559,
        2577
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1317": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2559,
        2577
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1318": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2559,
        2577
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1319": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2559,
        2577
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1320": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2559,
        2577
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1321": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2566,
        2577
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x7"
    },
    "1323": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2566,
        2577
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1324": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2559,
        2577
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "1326": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2559,
        2577
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1327": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2566,
        2577
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1328": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1330": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2559,
        2577
      ],
      "op": "DUP6",
      "path": "13"
    },
    "1331": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2559,
        2577
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1332": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2559,
        2577
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1333": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2559,
        2577
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1334": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2559,
        2577
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1335": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2559,
        2577
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1336": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2559,
        2577
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1337": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2559,
        2577
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x100"
    },
    "1340": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2559,
        2577
      ],
      "op": "EXP",
      "path": "13"
    },
    "1341": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2559,
        2577
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1342": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2559,
        2577
      ],
      "op": "DIV",
      "path": "13"
    },
    "1343": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2559,
        2577
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xFFFFFFFF"
    },
    "1348": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2559,
        2577
      ],
      "op": "AND",
      "path": "13"
    },
    "1349": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2559,
        2577
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xFFFFFFFF"
    },
    "1354": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2559,
        2577
      ],
      "op": "AND",
      "path": "13"
    },
    "1355": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2559,
        2577
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1356": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2559,
        2577
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1357": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2559,
        2577
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "1359": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2559,
        2577
      ],
      "op": "ADD",
      "path": "13"
    },
    "1360": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2559,
        2577
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1361": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2559,
        2577
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "1363": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2559,
        2577
      ],
      "op": "ADD",
      "path": "13"
    },
    "1364": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2559,
        2577
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1365": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2559,
        2577
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "1367": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2559,
        2577
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1368": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2559,
        2577
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x3"
    },
    "1370": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2559,
        2577
      ],
      "op": "ADD",
      "path": "13"
    },
    "1371": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2559,
        2577
      ],
      "op": "DIV",
      "path": "13"
    },
    "1372": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2559,
        2577
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "1373": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2559,
        2577
      ],
      "op": "DUP4",
      "path": "13"
    },
    "1374": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2559,
        2577
      ],
      "op": "ADD",
      "path": "13"
    },
    "1375": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2559,
        2577
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "1376": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2559,
        2577
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "1378": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2559,
        2577
      ],
      "op": "SUB",
      "path": "13"
    },
    "1379": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2559,
        2577
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1380": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2559,
        2577
      ],
      "op": "MUL",
      "path": "13"
    },
    "1381": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2559,
        2577
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1382": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2559,
        2577
      ],
      "op": "POP",
      "path": "13"
    },
    "1383": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2559,
        2577
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1384": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2559,
        2577
      ],
      "op": "DUP5",
      "path": "13"
    },
    "1385": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2559,
        2577
      ],
      "op": "GT",
      "path": "13"
    },
    "1386": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2559,
        2577
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x533"
    },
    "1389": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2559,
        2577
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "1390": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2559,
        2577
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1391": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2559,
        2577
      ],
      "op": "POP",
      "path": "13"
    },
    "1392": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2559,
        2577
      ],
      "op": "POP",
      "path": "13"
    },
    "1393": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2559,
        2577
      ],
      "op": "POP",
      "path": "13"
    },
    "1394": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2559,
        2577
      ],
      "op": "POP",
      "path": "13"
    },
    "1395": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2559,
        2577
      ],
      "op": "POP",
      "path": "13"
    },
    "1396": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2559,
        2577
      ],
      "op": "POP",
      "path": "13"
    },
    "1397": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2559,
        2577
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1398": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2559,
        2577
      ],
      "op": "POP",
      "path": "13"
    },
    "1399": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2486,
        2584
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1400": {
      "fn": "StakingPool.getOperators",
      "jump": "o",
      "offset": [
        2486,
        2584
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1401": {
      "fn": "StakingPool.stake",
      "offset": [
        3897,
        4459
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1402": {
      "fn": "StakingPool.stake",
      "offset": [
        4161,
        4162
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 7,
      "value": "0x0"
    },
    "1404": {
      "fn": "StakingPool.stake",
      "offset": [
        4148,
        4157
      ],
      "op": "CALLVALUE",
      "path": "13"
    },
    "1405": {
      "branch": 33,
      "fn": "StakingPool.stake",
      "offset": [
        4148,
        4162
      ],
      "op": "GT",
      "path": "13"
    },
    "1406": {
      "fn": "StakingPool.stake",
      "offset": [
        4145,
        4239
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x5A1"
    },
    "1409": {
      "branch": 33,
      "fn": "StakingPool.stake",
      "offset": [
        4145,
        4239
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "1410": {
      "fn": "StakingPool.stake",
      "offset": [
        4185,
        4228
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1412": {
      "fn": "StakingPool.stake",
      "offset": [
        4185,
        4228
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1413": {
      "op": "PUSH4",
      "value": "0x9ED431AD"
    },
    "1418": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1420": {
      "op": "SHL"
    },
    "1421": {
      "fn": "StakingPool.stake",
      "offset": [
        4185,
        4228
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1422": {
      "fn": "StakingPool.stake",
      "offset": [
        4185,
        4228
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1423": {
      "fn": "StakingPool.stake",
      "offset": [
        4218,
        4227
      ],
      "op": "CALLVALUE",
      "path": "13"
    },
    "1424": {
      "fn": "StakingPool.stake",
      "offset": [
        4185,
        4228
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "1426": {
      "fn": "StakingPool.stake",
      "offset": [
        4185,
        4228
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1427": {
      "fn": "StakingPool.stake",
      "offset": [
        4185,
        4228
      ],
      "op": "ADD",
      "path": "13"
    },
    "1428": {
      "op": "MSTORE"
    },
    "1429": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1431": {
      "op": "ADD"
    },
    "1432": {
      "fn": "StakingPool.stake",
      "offset": [
        4185,
        4228
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1433": {
      "fn": "StakingPool.stake",
      "offset": [
        4185,
        4228
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1435": {
      "fn": "StakingPool.stake",
      "offset": [
        4185,
        4228
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1436": {
      "fn": "StakingPool.stake",
      "offset": [
        4185,
        4228
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1437": {
      "fn": "StakingPool.stake",
      "offset": [
        4185,
        4228
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1438": {
      "fn": "StakingPool.stake",
      "offset": [
        4185,
        4228
      ],
      "op": "SUB",
      "path": "13"
    },
    "1439": {
      "fn": "StakingPool.stake",
      "offset": [
        4185,
        4228
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1440": {
      "fn": "StakingPool.stake",
      "offset": [
        4185,
        4228
      ],
      "op": "REVERT",
      "path": "13"
    },
    "1441": {
      "fn": "StakingPool.stake",
      "offset": [
        4145,
        4239
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1442": {
      "fn": "StakingPool.stake",
      "offset": [
        4285,
        4291
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "1444": {
      "fn": "StakingPool.stake",
      "offset": [
        4285,
        4291
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1445": {
      "fn": "StakingPool.stake",
      "offset": [
        4285,
        4291
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1446": {
      "fn": "StakingPool.stake",
      "offset": [
        4285,
        4304
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1448": {
      "fn": "StakingPool.stake",
      "offset": [
        4285,
        4304
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1449": {
      "fn": "StakingPool.stake",
      "offset": [
        4285,
        4304
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1450": {
      "op": "PUSH4",
      "value": "0x87269729"
    },
    "1455": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1457": {
      "op": "SHL"
    },
    "1458": {
      "fn": "StakingPool.stake",
      "offset": [
        4285,
        4304
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1459": {
      "fn": "StakingPool.stake",
      "offset": [
        4285,
        4304
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1460": {
      "fn": "StakingPool.stake",
      "offset": [
        4285,
        4304
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1461": {
      "fn": "StakingPool.stake",
      "offset": [
        4285,
        4304
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1462": {
      "fn": "StakingPool.stake",
      "offset": [
        4248,
        4269
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1464": {
      "fn": "StakingPool.stake",
      "offset": [
        4248,
        4269
      ],
      "op": "SWAP4",
      "path": "13"
    },
    "1465": {
      "fn": "StakingPool.stake",
      "offset": [
        4308,
        4312
      ],
      "op": "PUSH8",
      "path": "13",
      "value": "0xDE0B6B3A7640000"
    },
    "1474": {
      "fn": "StakingPool.stake",
      "offset": [
        4308,
        4312
      ],
      "op": "SWAP4",
      "path": "13"
    },
    "1475": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1477": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1479": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1481": {
      "op": "SHL"
    },
    "1482": {
      "op": "SUB"
    },
    "1483": {
      "fn": "StakingPool.stake",
      "offset": [
        4285,
        4291
      ],
      "op": "AND",
      "path": "13"
    },
    "1484": {
      "fn": "StakingPool.stake",
      "offset": [
        4285,
        4291
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "1485": {
      "fn": "StakingPool.stake",
      "offset": [
        4285,
        4302
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x87269729"
    },
    "1490": {
      "fn": "StakingPool.stake",
      "offset": [
        4285,
        4302
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "1491": {
      "fn": "StakingPool.stake",
      "offset": [
        4285,
        4304
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1492": {
      "fn": "StakingPool.stake",
      "offset": [
        4285,
        4304
      ],
      "op": "DUP4",
      "path": "13"
    },
    "1493": {
      "fn": "StakingPool.stake",
      "offset": [
        4285,
        4304
      ],
      "op": "ADD",
      "path": "13"
    },
    "1494": {
      "fn": "StakingPool.stake",
      "offset": [
        4285,
        4304
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "1495": {
      "fn": "StakingPool.stake",
      "offset": [
        4285,
        4304
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "1497": {
      "fn": "StakingPool.stake",
      "offset": [
        4285,
        4304
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "1498": {
      "fn": "StakingPool.stake",
      "offset": [
        4285,
        4304
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1499": {
      "fn": "StakingPool.stake",
      "offset": [
        4285,
        4304
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1500": {
      "fn": "StakingPool.stake",
      "offset": [
        4285,
        4304
      ],
      "op": "SUB",
      "path": "13"
    },
    "1501": {
      "fn": "StakingPool.stake",
      "offset": [
        4285,
        4304
      ],
      "op": "ADD",
      "path": "13"
    },
    "1502": {
      "fn": "StakingPool.stake",
      "offset": [
        4285,
        4304
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1503": {
      "fn": "StakingPool.stake",
      "offset": [
        4285,
        4291
      ],
      "op": "DUP7",
      "path": "13"
    },
    "1504": {
      "fn": "StakingPool.stake",
      "offset": [
        4285,
        4304
      ],
      "op": "GAS",
      "path": "13"
    },
    "1505": {
      "fn": "StakingPool.stake",
      "offset": [
        4285,
        4304
      ],
      "op": "STATICCALL",
      "path": "13"
    },
    "1506": {
      "fn": "StakingPool.stake",
      "offset": [
        4285,
        4304
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "1507": {
      "fn": "StakingPool.stake",
      "offset": [
        4285,
        4304
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1508": {
      "fn": "StakingPool.stake",
      "offset": [
        4285,
        4304
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "1509": {
      "fn": "StakingPool.stake",
      "offset": [
        4285,
        4304
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x5F2"
    },
    "1512": {
      "fn": "StakingPool.stake",
      "offset": [
        4285,
        4304
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "1513": {
      "fn": "StakingPool.stake",
      "offset": [
        4285,
        4304
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "1514": {
      "fn": "StakingPool.stake",
      "offset": [
        4285,
        4304
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1516": {
      "fn": "StakingPool.stake",
      "offset": [
        4285,
        4304
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1517": {
      "fn": "StakingPool.stake",
      "offset": [
        4285,
        4304
      ],
      "op": "RETURNDATACOPY",
      "path": "13"
    },
    "1518": {
      "fn": "StakingPool.stake",
      "offset": [
        4285,
        4304
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "1519": {
      "fn": "StakingPool.stake",
      "offset": [
        4285,
        4304
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1521": {
      "fn": "StakingPool.stake",
      "offset": [
        4285,
        4304
      ],
      "op": "REVERT",
      "path": "13"
    },
    "1522": {
      "fn": "StakingPool.stake",
      "offset": [
        4285,
        4304
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1523": {
      "fn": "StakingPool.stake",
      "offset": [
        4285,
        4304
      ],
      "op": "POP",
      "path": "13"
    },
    "1524": {
      "fn": "StakingPool.stake",
      "offset": [
        4285,
        4304
      ],
      "op": "POP",
      "path": "13"
    },
    "1525": {
      "fn": "StakingPool.stake",
      "offset": [
        4285,
        4304
      ],
      "op": "POP",
      "path": "13"
    },
    "1526": {
      "fn": "StakingPool.stake",
      "offset": [
        4285,
        4304
      ],
      "op": "POP",
      "path": "13"
    },
    "1527": {
      "fn": "StakingPool.stake",
      "offset": [
        4285,
        4304
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1529": {
      "fn": "StakingPool.stake",
      "offset": [
        4285,
        4304
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1530": {
      "fn": "StakingPool.stake",
      "offset": [
        4285,
        4304
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "1531": {
      "fn": "StakingPool.stake",
      "offset": [
        4285,
        4304
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1F"
    },
    "1533": {
      "fn": "StakingPool.stake",
      "offset": [
        4285,
        4304
      ],
      "op": "NOT",
      "path": "13"
    },
    "1534": {
      "fn": "StakingPool.stake",
      "offset": [
        4285,
        4304
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1F"
    },
    "1536": {
      "fn": "StakingPool.stake",
      "offset": [
        4285,
        4304
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1537": {
      "fn": "StakingPool.stake",
      "offset": [
        4285,
        4304
      ],
      "op": "ADD",
      "path": "13"
    },
    "1538": {
      "fn": "StakingPool.stake",
      "offset": [
        4285,
        4304
      ],
      "op": "AND",
      "path": "13"
    },
    "1539": {
      "fn": "StakingPool.stake",
      "offset": [
        4285,
        4304
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1540": {
      "fn": "StakingPool.stake",
      "offset": [
        4285,
        4304
      ],
      "op": "ADD",
      "path": "13"
    },
    "1541": {
      "fn": "StakingPool.stake",
      "offset": [
        4285,
        4304
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1542": {
      "fn": "StakingPool.stake",
      "offset": [
        4285,
        4304
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1544": {
      "fn": "StakingPool.stake",
      "offset": [
        4285,
        4304
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1545": {
      "fn": "StakingPool.stake",
      "offset": [
        4285,
        4304
      ],
      "op": "POP",
      "path": "13"
    },
    "1546": {
      "fn": "StakingPool.stake",
      "offset": [
        4285,
        4304
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1547": {
      "fn": "StakingPool.stake",
      "offset": [
        4285,
        4304
      ],
      "op": "ADD",
      "path": "13"
    },
    "1548": {
      "fn": "StakingPool.stake",
      "offset": [
        4285,
        4304
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1549": {
      "fn": "StakingPool.stake",
      "offset": [
        4285,
        4304
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x616"
    },
    "1552": {
      "fn": "StakingPool.stake",
      "offset": [
        4285,
        4304
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1553": {
      "fn": "StakingPool.stake",
      "offset": [
        4285,
        4304
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1554": {
      "fn": "StakingPool.stake",
      "offset": [
        4285,
        4304
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1437"
    },
    "1557": {
      "fn": "StakingPool.stake",
      "jump": "i",
      "offset": [
        4285,
        4304
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1558": {
      "fn": "StakingPool.stake",
      "offset": [
        4285,
        4304
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1559": {
      "fn": "StakingPool.stake",
      "offset": [
        4273,
        4304
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x620"
    },
    "1562": {
      "fn": "StakingPool.stake",
      "offset": [
        4273,
        4304
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1563": {
      "fn": "StakingPool.stake",
      "offset": [
        4273,
        4282
      ],
      "op": "CALLVALUE",
      "path": "13"
    },
    "1564": {
      "fn": "StakingPool.stake",
      "offset": [
        4273,
        4304
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x13FE"
    },
    "1567": {
      "fn": "StakingPool.stake",
      "jump": "i",
      "offset": [
        4273,
        4304
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1568": {
      "fn": "StakingPool.stake",
      "offset": [
        4273,
        4304
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1569": {
      "fn": "StakingPool.stake",
      "offset": [
        4272,
        4312
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x62A"
    },
    "1572": {
      "fn": "StakingPool.stake",
      "offset": [
        4272,
        4312
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1573": {
      "fn": "StakingPool.stake",
      "offset": [
        4272,
        4312
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1574": {
      "fn": "StakingPool.stake",
      "offset": [
        4272,
        4312
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1415"
    },
    "1577": {
      "fn": "StakingPool.stake",
      "jump": "i",
      "offset": [
        4272,
        4312
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1578": {
      "fn": "StakingPool.stake",
      "offset": [
        4272,
        4312
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1579": {
      "fn": "StakingPool.stake",
      "offset": [
        4322,
        4328
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 8,
      "value": "0x4"
    },
    "1581": {
      "fn": "StakingPool.stake",
      "offset": [
        4322,
        4328
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1582": {
      "fn": "StakingPool.stake",
      "offset": [
        4322,
        4328
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1583": {
      "fn": "StakingPool.stake",
      "offset": [
        4322,
        4360
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1585": {
      "fn": "StakingPool.stake",
      "offset": [
        4322,
        4360
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1586": {
      "op": "PUSH4",
      "value": "0x40C10F19"
    },
    "1591": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1593": {
      "op": "SHL"
    },
    "1594": {
      "fn": "StakingPool.stake",
      "offset": [
        4322,
        4360
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1595": {
      "fn": "StakingPool.stake",
      "offset": [
        4322,
        4360
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1596": {
      "fn": "StakingPool.stake",
      "offset": [
        4334,
        4344
      ],
      "op": "CALLER",
      "path": "13"
    },
    "1597": {
      "fn": "StakingPool.stake",
      "offset": [
        4322,
        4360
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "1598": {
      "fn": "StakingPool.stake",
      "offset": [
        4322,
        4360
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1599": {
      "fn": "StakingPool.stake",
      "offset": [
        4322,
        4360
      ],
      "op": "ADD",
      "path": "13"
    },
    "1600": {
      "op": "SWAP3"
    },
    "1601": {
      "op": "SWAP1"
    },
    "1602": {
      "op": "SWAP3"
    },
    "1603": {
      "op": "MSTORE"
    },
    "1604": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1606": {
      "op": "DUP3"
    },
    "1607": {
      "op": "ADD"
    },
    "1608": {
      "op": "DUP4"
    },
    "1609": {
      "op": "SWAP1"
    },
    "1610": {
      "op": "MSTORE"
    },
    "1611": {
      "fn": "StakingPool.stake",
      "offset": [
        4248,
        4312
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1612": {
      "fn": "StakingPool.stake",
      "offset": [
        4248,
        4312
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "1613": {
      "op": "POP"
    },
    "1614": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1616": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1618": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1620": {
      "op": "SHL"
    },
    "1621": {
      "op": "SUB"
    },
    "1622": {
      "fn": "StakingPool.stake",
      "offset": [
        4322,
        4328
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1623": {
      "fn": "StakingPool.stake",
      "offset": [
        4322,
        4328
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1624": {
      "fn": "StakingPool.stake",
      "offset": [
        4322,
        4328
      ],
      "op": "AND",
      "path": "13"
    },
    "1625": {
      "fn": "StakingPool.stake",
      "offset": [
        4322,
        4328
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1626": {
      "fn": "StakingPool.stake",
      "offset": [
        4322,
        4333
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x40C10F19"
    },
    "1631": {
      "fn": "StakingPool.stake",
      "offset": [
        4322,
        4333
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1632": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1634": {
      "op": "ADD"
    },
    "1635": {
      "fn": "StakingPool.stake",
      "offset": [
        4322,
        4360
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1637": {
      "fn": "StakingPool.stake",
      "offset": [
        4322,
        4360
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1639": {
      "fn": "StakingPool.stake",
      "offset": [
        4322,
        4360
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1640": {
      "fn": "StakingPool.stake",
      "offset": [
        4322,
        4360
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1641": {
      "fn": "StakingPool.stake",
      "offset": [
        4322,
        4360
      ],
      "op": "DUP4",
      "path": "13"
    },
    "1642": {
      "fn": "StakingPool.stake",
      "offset": [
        4322,
        4360
      ],
      "op": "SUB",
      "path": "13"
    },
    "1643": {
      "fn": "StakingPool.stake",
      "offset": [
        4322,
        4360
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1644": {
      "fn": "StakingPool.stake",
      "offset": [
        4322,
        4360
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1646": {
      "fn": "StakingPool.stake",
      "offset": [
        4322,
        4360
      ],
      "op": "DUP8",
      "path": "13"
    },
    "1647": {
      "fn": "StakingPool.stake",
      "offset": [
        4322,
        4360
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1648": {
      "fn": "StakingPool.stake",
      "offset": [
        4322,
        4360
      ],
      "op": "EXTCODESIZE",
      "path": "13"
    },
    "1649": {
      "fn": "StakingPool.stake",
      "offset": [
        4322,
        4360
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "1650": {
      "fn": "StakingPool.stake",
      "offset": [
        4322,
        4360
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1651": {
      "fn": "StakingPool.stake",
      "offset": [
        4322,
        4360
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "1652": {
      "fn": "StakingPool.stake",
      "offset": [
        4322,
        4360
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x67C"
    },
    "1655": {
      "fn": "StakingPool.stake",
      "offset": [
        4322,
        4360
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "1656": {
      "fn": "StakingPool.stake",
      "offset": [
        4322,
        4360
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1658": {
      "fn": "StakingPool.stake",
      "offset": [
        4322,
        4360
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1659": {
      "fn": "StakingPool.stake",
      "offset": [
        4322,
        4360
      ],
      "op": "REVERT",
      "path": "13"
    },
    "1660": {
      "fn": "StakingPool.stake",
      "offset": [
        4322,
        4360
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1661": {
      "fn": "StakingPool.stake",
      "offset": [
        4322,
        4360
      ],
      "op": "POP",
      "path": "13"
    },
    "1662": {
      "fn": "StakingPool.stake",
      "offset": [
        4322,
        4360
      ],
      "op": "GAS",
      "path": "13"
    },
    "1663": {
      "fn": "StakingPool.stake",
      "offset": [
        4322,
        4360
      ],
      "op": "CALL",
      "path": "13"
    },
    "1664": {
      "fn": "StakingPool.stake",
      "offset": [
        4322,
        4360
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "1665": {
      "fn": "StakingPool.stake",
      "offset": [
        4322,
        4360
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1666": {
      "fn": "StakingPool.stake",
      "offset": [
        4322,
        4360
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "1667": {
      "fn": "StakingPool.stake",
      "offset": [
        4322,
        4360
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x690"
    },
    "1670": {
      "fn": "StakingPool.stake",
      "offset": [
        4322,
        4360
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "1671": {
      "fn": "StakingPool.stake",
      "offset": [
        4322,
        4360
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "1672": {
      "fn": "StakingPool.stake",
      "offset": [
        4322,
        4360
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1674": {
      "fn": "StakingPool.stake",
      "offset": [
        4322,
        4360
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1675": {
      "fn": "StakingPool.stake",
      "offset": [
        4322,
        4360
      ],
      "op": "RETURNDATACOPY",
      "path": "13"
    },
    "1676": {
      "fn": "StakingPool.stake",
      "offset": [
        4322,
        4360
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "1677": {
      "fn": "StakingPool.stake",
      "offset": [
        4322,
        4360
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1679": {
      "fn": "StakingPool.stake",
      "offset": [
        4322,
        4360
      ],
      "op": "REVERT",
      "path": "13"
    },
    "1680": {
      "fn": "StakingPool.stake",
      "offset": [
        4322,
        4360
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1681": {
      "op": "POP"
    },
    "1682": {
      "op": "POP"
    },
    "1683": {
      "fn": "StakingPool.stake",
      "offset": [
        4375,
        4408
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 9,
      "value": "0x40"
    },
    "1685": {
      "fn": "StakingPool.stake",
      "offset": [
        4375,
        4408
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1686": {
      "fn": "StakingPool.stake",
      "offset": [
        4375,
        4408
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1687": {
      "fn": "StakingPool.stake",
      "offset": [
        4386,
        4396
      ],
      "op": "CALLER",
      "path": "13"
    },
    "1688": {
      "op": "DUP2"
    },
    "1689": {
      "op": "MSTORE"
    },
    "1690": {
      "fn": "StakingPool.stake",
      "offset": [
        4398,
        4407
      ],
      "op": "CALLVALUE",
      "path": "13"
    },
    "1691": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1693": {
      "op": "DUP3"
    },
    "1694": {
      "op": "ADD"
    },
    "1695": {
      "op": "MSTORE"
    },
    "1696": {
      "fn": "StakingPool.stake",
      "offset": [
        4375,
        4408
      ],
      "op": "PUSH32",
      "path": "13",
      "value": "0x8C265ADCFA641899D6632B86254DDA7A76F27701F1D21A732621D51F2328C460"
    },
    "1729": {
      "fn": "StakingPool.stake",
      "offset": [
        4375,
        4408
      ],
      "op": "SWAP4",
      "path": "13"
    },
    "1730": {
      "op": "POP"
    },
    "1731": {
      "op": "ADD"
    },
    "1732": {
      "op": "SWAP1"
    },
    "1733": {
      "op": "POP"
    },
    "1734": {
      "fn": "StakingPool.stake",
      "offset": [
        4375,
        4408
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1736": {
      "fn": "StakingPool.stake",
      "offset": [
        4375,
        4408
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1737": {
      "fn": "StakingPool.stake",
      "offset": [
        4375,
        4408
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1738": {
      "fn": "StakingPool.stake",
      "offset": [
        4375,
        4408
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1739": {
      "fn": "StakingPool.stake",
      "offset": [
        4375,
        4408
      ],
      "op": "SUB",
      "path": "13"
    },
    "1740": {
      "fn": "StakingPool.stake",
      "offset": [
        4375,
        4408
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1741": {
      "fn": "StakingPool.stake",
      "offset": [
        4375,
        4408
      ],
      "op": "LOG1",
      "path": "13"
    },
    "1742": {
      "fn": "StakingPool.stake",
      "offset": [
        4428,
        4438
      ],
      "op": "CALLER",
      "path": "13",
      "statement": 10
    },
    "1743": {
      "fn": "StakingPool.stake",
      "offset": [
        4418,
        4439
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1745": {
      "fn": "StakingPool.stake",
      "offset": [
        4418,
        4439
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1746": {
      "fn": "StakingPool.stake",
      "offset": [
        4418,
        4439
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1747": {
      "fn": "StakingPool.stake",
      "offset": [
        4418,
        4439
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1748": {
      "fn": "StakingPool.stake",
      "offset": [
        4418,
        4427
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xB"
    },
    "1750": {
      "fn": "StakingPool.stake",
      "offset": [
        4418,
        4439
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "1752": {
      "fn": "StakingPool.stake",
      "offset": [
        4418,
        4439
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1753": {
      "fn": "StakingPool.stake",
      "offset": [
        4418,
        4439
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1755": {
      "fn": "StakingPool.stake",
      "offset": [
        4418,
        4439
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1756": {
      "fn": "StakingPool.stake",
      "offset": [
        4418,
        4439
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "1757": {
      "fn": "StakingPool.stake",
      "offset": [
        4418,
        4452
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1758": {
      "fn": "StakingPool.stake",
      "offset": [
        4418,
        4452
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1759": {
      "fn": "StakingPool.stake",
      "offset": [
        4443,
        4452
      ],
      "op": "CALLVALUE",
      "path": "13"
    },
    "1760": {
      "fn": "StakingPool.stake",
      "offset": [
        4443,
        4452
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "1761": {
      "fn": "StakingPool.stake",
      "offset": [
        4418,
        4439
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1762": {
      "fn": "StakingPool.stake",
      "offset": [
        4418,
        4452
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x400"
    },
    "1765": {
      "fn": "StakingPool.stake",
      "offset": [
        4418,
        4452
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1766": {
      "fn": "StakingPool.stake",
      "offset": [
        4443,
        4452
      ],
      "op": "DUP5",
      "path": "13"
    },
    "1767": {
      "fn": "StakingPool.stake",
      "offset": [
        4443,
        4452
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1768": {
      "fn": "StakingPool.stake",
      "offset": [
        4418,
        4452
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x13B1"
    },
    "1771": {
      "fn": "StakingPool.stake",
      "jump": "i",
      "offset": [
        4418,
        4452
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1772": {
      "fn": "StakingPool.unStake",
      "offset": [
        4556,
        4848
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1773": {
      "fn": "StakingPool.unStake",
      "offset": [
        4607,
        4613
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 11,
      "value": "0x4"
    },
    "1775": {
      "fn": "StakingPool.unStake",
      "offset": [
        4607,
        4613
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1776": {
      "fn": "StakingPool.unStake",
      "offset": [
        4607,
        4613
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1777": {
      "fn": "StakingPool.unStake",
      "offset": [
        4607,
        4662
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1779": {
      "fn": "StakingPool.unStake",
      "offset": [
        4607,
        4662
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1780": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "1785": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1787": {
      "op": "SHL"
    },
    "1788": {
      "fn": "StakingPool.unStake",
      "offset": [
        4607,
        4662
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1789": {
      "fn": "StakingPool.unStake",
      "offset": [
        4607,
        4662
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1790": {
      "fn": "StakingPool.unStake",
      "offset": [
        4627,
        4637
      ],
      "op": "CALLER",
      "path": "13"
    },
    "1791": {
      "fn": "StakingPool.unStake",
      "offset": [
        4607,
        4662
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "1792": {
      "fn": "StakingPool.unStake",
      "offset": [
        4607,
        4662
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1793": {
      "fn": "StakingPool.unStake",
      "offset": [
        4607,
        4662
      ],
      "op": "ADD",
      "path": "13"
    },
    "1794": {
      "op": "SWAP3"
    },
    "1795": {
      "op": "SWAP1"
    },
    "1796": {
      "op": "SWAP3"
    },
    "1797": {
      "op": "MSTORE"
    },
    "1798": {
      "fn": "StakingPool.unStake",
      "offset": [
        4647,
        4651
      ],
      "op": "ADDRESS",
      "path": "13"
    },
    "1799": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1801": {
      "op": "DUP4"
    },
    "1802": {
      "op": "ADD"
    },
    "1803": {
      "op": "MSTORE"
    },
    "1804": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1806": {
      "op": "DUP3"
    },
    "1807": {
      "op": "ADD"
    },
    "1808": {
      "op": "DUP4"
    },
    "1809": {
      "op": "SWAP1"
    },
    "1810": {
      "op": "MSTORE"
    },
    "1811": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1813": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1815": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1817": {
      "op": "SHL"
    },
    "1818": {
      "op": "SUB"
    },
    "1819": {
      "fn": "StakingPool.unStake",
      "offset": [
        4607,
        4613
      ],
      "op": "AND",
      "path": "13"
    },
    "1820": {
      "fn": "StakingPool.unStake",
      "offset": [
        4607,
        4613
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1821": {
      "fn": "StakingPool.unStake",
      "offset": [
        4607,
        4626
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x23B872DD"
    },
    "1826": {
      "fn": "StakingPool.unStake",
      "offset": [
        4607,
        4626
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1827": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1829": {
      "op": "ADD"
    },
    "1830": {
      "fn": "StakingPool.unStake",
      "offset": [
        4607,
        4662
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "1832": {
      "fn": "StakingPool.unStake",
      "offset": [
        4607,
        4662
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1834": {
      "fn": "StakingPool.unStake",
      "offset": [
        4607,
        4662
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1835": {
      "fn": "StakingPool.unStake",
      "offset": [
        4607,
        4662
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1836": {
      "fn": "StakingPool.unStake",
      "offset": [
        4607,
        4662
      ],
      "op": "DUP4",
      "path": "13"
    },
    "1837": {
      "fn": "StakingPool.unStake",
      "offset": [
        4607,
        4662
      ],
      "op": "SUB",
      "path": "13"
    },
    "1838": {
      "fn": "StakingPool.unStake",
      "offset": [
        4607,
        4662
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1839": {
      "fn": "StakingPool.unStake",
      "offset": [
        4607,
        4662
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1841": {
      "fn": "StakingPool.unStake",
      "offset": [
        4607,
        4662
      ],
      "op": "DUP8",
      "path": "13"
    },
    "1842": {
      "fn": "StakingPool.unStake",
      "offset": [
        4607,
        4662
      ],
      "op": "GAS",
      "path": "13"
    },
    "1843": {
      "fn": "StakingPool.unStake",
      "offset": [
        4607,
        4662
      ],
      "op": "CALL",
      "path": "13"
    },
    "1844": {
      "fn": "StakingPool.unStake",
      "offset": [
        4607,
        4662
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "1845": {
      "fn": "StakingPool.unStake",
      "offset": [
        4607,
        4662
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1846": {
      "fn": "StakingPool.unStake",
      "offset": [
        4607,
        4662
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "1847": {
      "fn": "StakingPool.unStake",
      "offset": [
        4607,
        4662
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x744"
    },
    "1850": {
      "fn": "StakingPool.unStake",
      "offset": [
        4607,
        4662
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "1851": {
      "fn": "StakingPool.unStake",
      "offset": [
        4607,
        4662
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "1852": {
      "fn": "StakingPool.unStake",
      "offset": [
        4607,
        4662
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1854": {
      "fn": "StakingPool.unStake",
      "offset": [
        4607,
        4662
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1855": {
      "fn": "StakingPool.unStake",
      "offset": [
        4607,
        4662
      ],
      "op": "RETURNDATACOPY",
      "path": "13"
    },
    "1856": {
      "fn": "StakingPool.unStake",
      "offset": [
        4607,
        4662
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "1857": {
      "fn": "StakingPool.unStake",
      "offset": [
        4607,
        4662
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1859": {
      "fn": "StakingPool.unStake",
      "offset": [
        4607,
        4662
      ],
      "op": "REVERT",
      "path": "13"
    },
    "1860": {
      "fn": "StakingPool.unStake",
      "offset": [
        4607,
        4662
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1861": {
      "fn": "StakingPool.unStake",
      "offset": [
        4607,
        4662
      ],
      "op": "POP",
      "path": "13"
    },
    "1862": {
      "fn": "StakingPool.unStake",
      "offset": [
        4607,
        4662
      ],
      "op": "POP",
      "path": "13"
    },
    "1863": {
      "fn": "StakingPool.unStake",
      "offset": [
        4607,
        4662
      ],
      "op": "POP",
      "path": "13"
    },
    "1864": {
      "fn": "StakingPool.unStake",
      "offset": [
        4607,
        4662
      ],
      "op": "POP",
      "path": "13"
    },
    "1865": {
      "fn": "StakingPool.unStake",
      "offset": [
        4607,
        4662
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1867": {
      "fn": "StakingPool.unStake",
      "offset": [
        4607,
        4662
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1868": {
      "fn": "StakingPool.unStake",
      "offset": [
        4607,
        4662
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "1869": {
      "fn": "StakingPool.unStake",
      "offset": [
        4607,
        4662
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1F"
    },
    "1871": {
      "fn": "StakingPool.unStake",
      "offset": [
        4607,
        4662
      ],
      "op": "NOT",
      "path": "13"
    },
    "1872": {
      "fn": "StakingPool.unStake",
      "offset": [
        4607,
        4662
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1F"
    },
    "1874": {
      "fn": "StakingPool.unStake",
      "offset": [
        4607,
        4662
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1875": {
      "fn": "StakingPool.unStake",
      "offset": [
        4607,
        4662
      ],
      "op": "ADD",
      "path": "13"
    },
    "1876": {
      "fn": "StakingPool.unStake",
      "offset": [
        4607,
        4662
      ],
      "op": "AND",
      "path": "13"
    },
    "1877": {
      "fn": "StakingPool.unStake",
      "offset": [
        4607,
        4662
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1878": {
      "fn": "StakingPool.unStake",
      "offset": [
        4607,
        4662
      ],
      "op": "ADD",
      "path": "13"
    },
    "1879": {
      "fn": "StakingPool.unStake",
      "offset": [
        4607,
        4662
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1880": {
      "fn": "StakingPool.unStake",
      "offset": [
        4607,
        4662
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1882": {
      "fn": "StakingPool.unStake",
      "offset": [
        4607,
        4662
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1883": {
      "fn": "StakingPool.unStake",
      "offset": [
        4607,
        4662
      ],
      "op": "POP",
      "path": "13"
    },
    "1884": {
      "fn": "StakingPool.unStake",
      "offset": [
        4607,
        4662
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1885": {
      "fn": "StakingPool.unStake",
      "offset": [
        4607,
        4662
      ],
      "op": "ADD",
      "path": "13"
    },
    "1886": {
      "fn": "StakingPool.unStake",
      "offset": [
        4607,
        4662
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1887": {
      "fn": "StakingPool.unStake",
      "offset": [
        4607,
        4662
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x768"
    },
    "1890": {
      "fn": "StakingPool.unStake",
      "offset": [
        4607,
        4662
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1891": {
      "fn": "StakingPool.unStake",
      "offset": [
        4607,
        4662
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1892": {
      "fn": "StakingPool.unStake",
      "offset": [
        4607,
        4662
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1450"
    },
    "1895": {
      "fn": "StakingPool.unStake",
      "jump": "i",
      "offset": [
        4607,
        4662
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1896": {
      "fn": "StakingPool.unStake",
      "offset": [
        4607,
        4662
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1897": {
      "fn": "StakingPool.unStake",
      "offset": [
        4607,
        4662
      ],
      "op": "POP",
      "path": "13"
    },
    "1898": {
      "fn": "StakingPool.unStake",
      "offset": [
        4672,
        4699
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1900": {
      "fn": "StakingPool.unStake",
      "offset": [
        4713,
        4719
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "1902": {
      "fn": "StakingPool.unStake",
      "offset": [
        4713,
        4719
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1904": {
      "fn": "StakingPool.unStake",
      "offset": [
        4713,
        4719
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1905": {
      "fn": "StakingPool.unStake",
      "offset": [
        4713,
        4719
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1906": {
      "fn": "StakingPool.unStake",
      "offset": [
        4713,
        4719
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1907": {
      "fn": "StakingPool.unStake",
      "offset": [
        4713,
        4719
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x100"
    },
    "1910": {
      "fn": "StakingPool.unStake",
      "offset": [
        4713,
        4719
      ],
      "op": "EXP",
      "path": "13"
    },
    "1911": {
      "fn": "StakingPool.unStake",
      "offset": [
        4713,
        4719
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1912": {
      "fn": "StakingPool.unStake",
      "offset": [
        4713,
        4719
      ],
      "op": "DIV",
      "path": "13"
    },
    "1913": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1915": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1917": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1919": {
      "op": "SHL"
    },
    "1920": {
      "op": "SUB"
    },
    "1921": {
      "fn": "StakingPool.unStake",
      "offset": [
        4713,
        4719
      ],
      "op": "AND",
      "path": "13"
    },
    "1922": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1924": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1926": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1928": {
      "op": "SHL"
    },
    "1929": {
      "op": "SUB"
    },
    "1930": {
      "fn": "StakingPool.unStake",
      "offset": [
        4713,
        4730
      ],
      "op": "AND",
      "path": "13"
    },
    "1931": {
      "fn": "StakingPool.unStake",
      "offset": [
        4713,
        4730
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x87269729"
    },
    "1936": {
      "fn": "StakingPool.unStake",
      "offset": [
        4713,
        4732
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1938": {
      "fn": "StakingPool.unStake",
      "offset": [
        4713,
        4732
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1939": {
      "fn": "StakingPool.unStake",
      "offset": [
        4713,
        4732
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1940": {
      "fn": "StakingPool.unStake",
      "offset": [
        4713,
        4732
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xFFFFFFFF"
    },
    "1945": {
      "fn": "StakingPool.unStake",
      "offset": [
        4713,
        4732
      ],
      "op": "AND",
      "path": "13"
    },
    "1946": {
      "fn": "StakingPool.unStake",
      "offset": [
        4713,
        4732
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xE0"
    },
    "1948": {
      "fn": "StakingPool.unStake",
      "offset": [
        4713,
        4732
      ],
      "op": "SHL",
      "path": "13"
    },
    "1949": {
      "fn": "StakingPool.unStake",
      "offset": [
        4713,
        4732
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1950": {
      "fn": "StakingPool.unStake",
      "offset": [
        4713,
        4732
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1951": {
      "fn": "StakingPool.unStake",
      "offset": [
        4713,
        4732
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "1953": {
      "fn": "StakingPool.unStake",
      "offset": [
        4713,
        4732
      ],
      "op": "ADD",
      "path": "13"
    },
    "1954": {
      "fn": "StakingPool.unStake",
      "offset": [
        4713,
        4732
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "1956": {
      "fn": "StakingPool.unStake",
      "offset": [
        4713,
        4732
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1958": {
      "fn": "StakingPool.unStake",
      "offset": [
        4713,
        4732
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1959": {
      "fn": "StakingPool.unStake",
      "offset": [
        4713,
        4732
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1960": {
      "fn": "StakingPool.unStake",
      "offset": [
        4713,
        4732
      ],
      "op": "DUP4",
      "path": "13"
    },
    "1961": {
      "fn": "StakingPool.unStake",
      "offset": [
        4713,
        4732
      ],
      "op": "SUB",
      "path": "13"
    },
    "1962": {
      "fn": "StakingPool.unStake",
      "offset": [
        4713,
        4732
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1963": {
      "fn": "StakingPool.unStake",
      "offset": [
        4713,
        4732
      ],
      "op": "DUP7",
      "path": "13"
    },
    "1964": {
      "fn": "StakingPool.unStake",
      "offset": [
        4713,
        4732
      ],
      "op": "GAS",
      "path": "13"
    },
    "1965": {
      "fn": "StakingPool.unStake",
      "offset": [
        4713,
        4732
      ],
      "op": "STATICCALL",
      "path": "13"
    },
    "1966": {
      "fn": "StakingPool.unStake",
      "offset": [
        4713,
        4732
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "1967": {
      "fn": "StakingPool.unStake",
      "offset": [
        4713,
        4732
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1968": {
      "fn": "StakingPool.unStake",
      "offset": [
        4713,
        4732
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "1969": {
      "fn": "StakingPool.unStake",
      "offset": [
        4713,
        4732
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x7BE"
    },
    "1972": {
      "fn": "StakingPool.unStake",
      "offset": [
        4713,
        4732
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "1973": {
      "fn": "StakingPool.unStake",
      "offset": [
        4713,
        4732
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "1974": {
      "fn": "StakingPool.unStake",
      "offset": [
        4713,
        4732
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1976": {
      "fn": "StakingPool.unStake",
      "offset": [
        4713,
        4732
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1977": {
      "fn": "StakingPool.unStake",
      "offset": [
        4713,
        4732
      ],
      "op": "RETURNDATACOPY",
      "path": "13"
    },
    "1978": {
      "fn": "StakingPool.unStake",
      "offset": [
        4713,
        4732
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "1979": {
      "fn": "StakingPool.unStake",
      "offset": [
        4713,
        4732
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1981": {
      "fn": "StakingPool.unStake",
      "offset": [
        4713,
        4732
      ],
      "op": "REVERT",
      "path": "13"
    },
    "1982": {
      "fn": "StakingPool.unStake",
      "offset": [
        4713,
        4732
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1983": {
      "fn": "StakingPool.unStake",
      "offset": [
        4713,
        4732
      ],
      "op": "POP",
      "path": "13"
    },
    "1984": {
      "fn": "StakingPool.unStake",
      "offset": [
        4713,
        4732
      ],
      "op": "POP",
      "path": "13"
    },
    "1985": {
      "fn": "StakingPool.unStake",
      "offset": [
        4713,
        4732
      ],
      "op": "POP",
      "path": "13"
    },
    "1986": {
      "fn": "StakingPool.unStake",
      "offset": [
        4713,
        4732
      ],
      "op": "POP",
      "path": "13"
    },
    "1987": {
      "fn": "StakingPool.unStake",
      "offset": [
        4713,
        4732
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1989": {
      "fn": "StakingPool.unStake",
      "offset": [
        4713,
        4732
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1990": {
      "fn": "StakingPool.unStake",
      "offset": [
        4713,
        4732
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "1991": {
      "fn": "StakingPool.unStake",
      "offset": [
        4713,
        4732
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1F"
    },
    "1993": {
      "fn": "StakingPool.unStake",
      "offset": [
        4713,
        4732
      ],
      "op": "NOT",
      "path": "13"
    },
    "1994": {
      "fn": "StakingPool.unStake",
      "offset": [
        4713,
        4732
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1F"
    },
    "1996": {
      "fn": "StakingPool.unStake",
      "offset": [
        4713,
        4732
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1997": {
      "fn": "StakingPool.unStake",
      "offset": [
        4713,
        4732
      ],
      "op": "ADD",
      "path": "13"
    },
    "1998": {
      "fn": "StakingPool.unStake",
      "offset": [
        4713,
        4732
      ],
      "op": "AND",
      "path": "13"
    },
    "1999": {
      "fn": "StakingPool.unStake",
      "offset": [
        4713,
        4732
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2000": {
      "fn": "StakingPool.unStake",
      "offset": [
        4713,
        4732
      ],
      "op": "ADD",
      "path": "13"
    },
    "2001": {
      "fn": "StakingPool.unStake",
      "offset": [
        4713,
        4732
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2002": {
      "fn": "StakingPool.unStake",
      "offset": [
        4713,
        4732
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2004": {
      "fn": "StakingPool.unStake",
      "offset": [
        4713,
        4732
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2005": {
      "fn": "StakingPool.unStake",
      "offset": [
        4713,
        4732
      ],
      "op": "POP",
      "path": "13"
    },
    "2006": {
      "fn": "StakingPool.unStake",
      "offset": [
        4713,
        4732
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2007": {
      "fn": "StakingPool.unStake",
      "offset": [
        4713,
        4732
      ],
      "op": "ADD",
      "path": "13"
    },
    "2008": {
      "fn": "StakingPool.unStake",
      "offset": [
        4713,
        4732
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2009": {
      "fn": "StakingPool.unStake",
      "offset": [
        4713,
        4732
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x7E2"
    },
    "2012": {
      "fn": "StakingPool.unStake",
      "offset": [
        4713,
        4732
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2013": {
      "fn": "StakingPool.unStake",
      "offset": [
        4713,
        4732
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2014": {
      "fn": "StakingPool.unStake",
      "offset": [
        4713,
        4732
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1437"
    },
    "2017": {
      "fn": "StakingPool.unStake",
      "jump": "i",
      "offset": [
        4713,
        4732
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2018": {
      "fn": "StakingPool.unStake",
      "offset": [
        4713,
        4732
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2019": {
      "fn": "StakingPool.unStake",
      "offset": [
        4703,
        4732
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x7EC"
    },
    "2022": {
      "fn": "StakingPool.unStake",
      "offset": [
        4703,
        4732
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2023": {
      "fn": "StakingPool.unStake",
      "offset": [
        4703,
        4710
      ],
      "op": "DUP4",
      "path": "13"
    },
    "2024": {
      "fn": "StakingPool.unStake",
      "offset": [
        4703,
        4732
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1415"
    },
    "2027": {
      "fn": "StakingPool.unStake",
      "jump": "i",
      "offset": [
        4703,
        4732
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2028": {
      "fn": "StakingPool.unStake",
      "offset": [
        4703,
        4732
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2029": {
      "fn": "StakingPool.unStake",
      "offset": [
        4702,
        4740
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x7FE"
    },
    "2032": {
      "fn": "StakingPool.unStake",
      "offset": [
        4702,
        4740
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2033": {
      "fn": "StakingPool.unStake",
      "offset": [
        4736,
        4740
      ],
      "op": "PUSH8",
      "path": "13",
      "value": "0xDE0B6B3A7640000"
    },
    "2042": {
      "fn": "StakingPool.unStake",
      "offset": [
        4702,
        4740
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x13FE"
    },
    "2045": {
      "fn": "StakingPool.unStake",
      "jump": "i",
      "offset": [
        4702,
        4740
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2046": {
      "fn": "StakingPool.unStake",
      "offset": [
        4702,
        4740
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2047": {
      "fn": "StakingPool.unStake",
      "offset": [
        4750,
        4799
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 12,
      "value": "0x40"
    },
    "2049": {
      "fn": "StakingPool.unStake",
      "offset": [
        4750,
        4799
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2050": {
      "fn": "StakingPool.unStake",
      "offset": [
        4672,
        4740
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2051": {
      "fn": "StakingPool.unStake",
      "offset": [
        4672,
        4740
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2052": {
      "op": "POP"
    },
    "2053": {
      "fn": "StakingPool.unStake",
      "offset": [
        4758,
        4768
      ],
      "op": "CALLER",
      "path": "13"
    },
    "2054": {
      "fn": "StakingPool.unStake",
      "offset": [
        4758,
        4768
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2055": {
      "fn": "StakingPool.unStake",
      "offset": [
        4750,
        4799
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2056": {
      "fn": "StakingPool.unStake",
      "offset": [
        4750,
        4799
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2057": {
      "fn": "StakingPool.unStake",
      "offset": [
        4750,
        4799
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x8FC"
    },
    "2060": {
      "fn": "StakingPool.unStake",
      "offset": [
        4750,
        4799
      ],
      "op": "MUL",
      "path": "13"
    },
    "2061": {
      "fn": "StakingPool.unStake",
      "offset": [
        4750,
        4799
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2062": {
      "fn": "StakingPool.unStake",
      "offset": [
        4672,
        4740
      ],
      "op": "DUP4",
      "path": "13"
    },
    "2063": {
      "fn": "StakingPool.unStake",
      "offset": [
        4672,
        4740
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2064": {
      "fn": "StakingPool.unStake",
      "offset": [
        4750,
        4799
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2066": {
      "fn": "StakingPool.unStake",
      "offset": [
        4750,
        4799
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2067": {
      "fn": "StakingPool.unStake",
      "offset": [
        4750,
        4799
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2068": {
      "fn": "StakingPool.unStake",
      "offset": [
        4750,
        4799
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2069": {
      "fn": "StakingPool.unStake",
      "offset": [
        4672,
        4740
      ],
      "op": "DUP6",
      "path": "13"
    },
    "2070": {
      "fn": "StakingPool.unStake",
      "offset": [
        4758,
        4768
      ],
      "op": "DUP9",
      "path": "13"
    },
    "2071": {
      "fn": "StakingPool.unStake",
      "offset": [
        4750,
        4799
      ],
      "op": "DUP9",
      "path": "13"
    },
    "2072": {
      "fn": "StakingPool.unStake",
      "offset": [
        4750,
        4799
      ],
      "op": "CALL",
      "path": "13"
    },
    "2073": {
      "fn": "StakingPool.unStake",
      "offset": [
        4750,
        4799
      ],
      "op": "SWAP4",
      "path": "13"
    },
    "2074": {
      "fn": "StakingPool.unStake",
      "offset": [
        4750,
        4799
      ],
      "op": "POP",
      "path": "13"
    },
    "2075": {
      "fn": "StakingPool.unStake",
      "offset": [
        4750,
        4799
      ],
      "op": "POP",
      "path": "13"
    },
    "2076": {
      "fn": "StakingPool.unStake",
      "offset": [
        4750,
        4799
      ],
      "op": "POP",
      "path": "13"
    },
    "2077": {
      "fn": "StakingPool.unStake",
      "offset": [
        4750,
        4799
      ],
      "op": "POP",
      "path": "13"
    },
    "2078": {
      "fn": "StakingPool.unStake",
      "offset": [
        4750,
        4799
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2079": {
      "fn": "StakingPool.unStake",
      "offset": [
        4750,
        4799
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2080": {
      "fn": "StakingPool.unStake",
      "offset": [
        4750,
        4799
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2081": {
      "fn": "StakingPool.unStake",
      "offset": [
        4750,
        4799
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x82E"
    },
    "2084": {
      "fn": "StakingPool.unStake",
      "offset": [
        4750,
        4799
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "2085": {
      "fn": "StakingPool.unStake",
      "offset": [
        4750,
        4799
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "2086": {
      "fn": "StakingPool.unStake",
      "offset": [
        4750,
        4799
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2088": {
      "fn": "StakingPool.unStake",
      "offset": [
        4750,
        4799
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2089": {
      "fn": "StakingPool.unStake",
      "offset": [
        4750,
        4799
      ],
      "op": "RETURNDATACOPY",
      "path": "13"
    },
    "2090": {
      "fn": "StakingPool.unStake",
      "offset": [
        4750,
        4799
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "2091": {
      "fn": "StakingPool.unStake",
      "offset": [
        4750,
        4799
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2093": {
      "fn": "StakingPool.unStake",
      "offset": [
        4750,
        4799
      ],
      "op": "REVERT",
      "path": "13"
    },
    "2094": {
      "fn": "StakingPool.unStake",
      "offset": [
        4750,
        4799
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2095": {
      "op": "POP"
    },
    "2096": {
      "fn": "StakingPool.unStake",
      "offset": [
        4819,
        4829
      ],
      "op": "CALLER",
      "path": "13",
      "statement": 13
    },
    "2097": {
      "fn": "StakingPool.unStake",
      "offset": [
        4809,
        4830
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2099": {
      "fn": "StakingPool.unStake",
      "offset": [
        4809,
        4830
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2100": {
      "fn": "StakingPool.unStake",
      "offset": [
        4809,
        4830
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2101": {
      "fn": "StakingPool.unStake",
      "offset": [
        4809,
        4830
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2102": {
      "fn": "StakingPool.unStake",
      "offset": [
        4809,
        4818
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xB"
    },
    "2104": {
      "fn": "StakingPool.unStake",
      "offset": [
        4809,
        4830
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "2106": {
      "fn": "StakingPool.unStake",
      "offset": [
        4809,
        4830
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2107": {
      "fn": "StakingPool.unStake",
      "offset": [
        4809,
        4830
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2109": {
      "fn": "StakingPool.unStake",
      "offset": [
        4809,
        4830
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2110": {
      "fn": "StakingPool.unStake",
      "offset": [
        4809,
        4830
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "2111": {
      "fn": "StakingPool.unStake",
      "offset": [
        4809,
        4841
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2112": {
      "fn": "StakingPool.unStake",
      "offset": [
        4809,
        4841
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "2113": {
      "fn": "StakingPool.unStake",
      "offset": [
        4834,
        4841
      ],
      "op": "DUP5",
      "path": "13"
    },
    "2114": {
      "fn": "StakingPool.unStake",
      "offset": [
        4834,
        4841
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "2115": {
      "fn": "StakingPool.unStake",
      "offset": [
        4809,
        4830
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2116": {
      "fn": "StakingPool.unStake",
      "offset": [
        4809,
        4841
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x84E"
    },
    "2119": {
      "fn": "StakingPool.unStake",
      "offset": [
        4809,
        4841
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2120": {
      "fn": "StakingPool.unStake",
      "offset": [
        4834,
        4841
      ],
      "op": "DUP5",
      "path": "13"
    },
    "2121": {
      "fn": "StakingPool.unStake",
      "offset": [
        4834,
        4841
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2122": {
      "fn": "StakingPool.unStake",
      "offset": [
        4809,
        4841
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x146D"
    },
    "2125": {
      "fn": "StakingPool.unStake",
      "jump": "i",
      "offset": [
        4809,
        4841
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2126": {
      "fn": "StakingPool.unStake",
      "offset": [
        4809,
        4841
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2127": {
      "fn": "StakingPool.unStake",
      "offset": [
        4809,
        4841
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2128": {
      "fn": "StakingPool.unStake",
      "offset": [
        4809,
        4841
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2129": {
      "fn": "StakingPool.unStake",
      "offset": [
        4809,
        4841
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "2130": {
      "op": "POP"
    },
    "2131": {
      "op": "POP"
    },
    "2132": {
      "op": "POP"
    },
    "2133": {
      "op": "POP"
    },
    "2134": {
      "fn": "StakingPool.unStake",
      "jump": "o",
      "offset": [
        4556,
        4848
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2135": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2136": {
      "offset": [
        1094,
        1107
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x85F"
    },
    "2139": {
      "offset": [
        1094,
        1105
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD21"
    },
    "2142": {
      "jump": "i",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2143": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2144": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1895,
        1925
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 14,
      "value": "0x869"
    },
    "2147": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1922,
        1923
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2149": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1895,
        1913
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE08"
    },
    "2152": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1895,
        1925
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2153": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1895,
        1925
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2154": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1831,
        1932
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2155": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6097,
        7220
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2156": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6521,
        6542
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 15,
      "value": "0x2"
    },
    "2158": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6521,
        6542
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "2159": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2161": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2163": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2165": {
      "op": "SHL"
    },
    "2166": {
      "op": "SUB"
    },
    "2167": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6521,
        6542
      ],
      "op": "AND",
      "path": "13"
    },
    "2168": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6507,
        6517
      ],
      "op": "CALLER",
      "path": "13"
    },
    "2169": {
      "branch": 34,
      "fn": "StakingPool.depositShares",
      "offset": [
        6507,
        6542
      ],
      "op": "EQ",
      "path": "13"
    },
    "2170": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6504,
        6644
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x8AB"
    },
    "2173": {
      "branch": 34,
      "fn": "StakingPool.depositShares",
      "offset": [
        6504,
        6644
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "2174": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6611,
        6632
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x2"
    },
    "2176": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6611,
        6632
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "2177": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6565,
        6633
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2179": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6565,
        6633
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2180": {
      "op": "PUSH4",
      "value": "0x1F5A31F"
    },
    "2185": {
      "op": "PUSH1",
      "value": "0xE7"
    },
    "2187": {
      "op": "SHL"
    },
    "2188": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6565,
        6633
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2189": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6565,
        6633
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2190": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6599,
        6609
      ],
      "op": "CALLER",
      "path": "13"
    },
    "2191": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6565,
        6633
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "2193": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6565,
        6633
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2194": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6565,
        6633
      ],
      "op": "ADD",
      "path": "13"
    },
    "2195": {
      "op": "MSTORE"
    },
    "2196": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2198": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2200": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2202": {
      "op": "SHL"
    },
    "2203": {
      "op": "SUB"
    },
    "2204": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6611,
        6632
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2205": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6611,
        6632
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2206": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6611,
        6632
      ],
      "op": "AND",
      "path": "13"
    },
    "2207": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2209": {
      "op": "DUP3"
    },
    "2210": {
      "op": "ADD"
    },
    "2211": {
      "op": "MSTORE"
    },
    "2212": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2214": {
      "op": "ADD"
    },
    "2215": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6565,
        6633
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x598"
    },
    "2218": {
      "op": "JUMP"
    },
    "2219": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6504,
        6644
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2220": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6722,
        6736
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 16,
      "value": "0x5"
    },
    "2222": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6722,
        6736
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "2223": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6746,
        6763
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x6"
    },
    "2225": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6746,
        6763
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "2226": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6715,
        6773
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2228": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6715,
        6773
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2229": {
      "op": "PUSH4",
      "value": "0x95EA7B3"
    },
    "2234": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2236": {
      "op": "SHL"
    },
    "2237": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6715,
        6773
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2238": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6715,
        6773
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2239": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2241": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2243": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2245": {
      "op": "SHL"
    },
    "2246": {
      "op": "SUB"
    },
    "2247": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6746,
        6763
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2248": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6746,
        6763
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2249": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6746,
        6763
      ],
      "op": "AND",
      "path": "13"
    },
    "2250": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6715,
        6773
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "2252": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6715,
        6773
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2253": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6715,
        6773
      ],
      "op": "ADD",
      "path": "13"
    },
    "2254": {
      "op": "MSTORE"
    },
    "2255": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2257": {
      "op": "DUP2"
    },
    "2258": {
      "op": "ADD"
    },
    "2259": {
      "op": "DUP6"
    },
    "2260": {
      "op": "SWAP1"
    },
    "2261": {
      "op": "MSTORE"
    },
    "2262": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6722,
        6736
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2263": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6722,
        6736
      ],
      "op": "AND",
      "path": "13"
    },
    "2264": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6722,
        6736
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2265": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6715,
        6745
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x95EA7B3"
    },
    "2270": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6715,
        6745
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2271": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2273": {
      "op": "ADD"
    },
    "2274": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6715,
        6773
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "2276": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6715,
        6773
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2278": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6715,
        6773
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2279": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6715,
        6773
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2280": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6715,
        6773
      ],
      "op": "DUP4",
      "path": "13"
    },
    "2281": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6715,
        6773
      ],
      "op": "SUB",
      "path": "13"
    },
    "2282": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6715,
        6773
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2283": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6715,
        6773
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2285": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6715,
        6773
      ],
      "op": "DUP8",
      "path": "13"
    },
    "2286": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6715,
        6773
      ],
      "op": "GAS",
      "path": "13"
    },
    "2287": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6715,
        6773
      ],
      "op": "CALL",
      "path": "13"
    },
    "2288": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6715,
        6773
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2289": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6715,
        6773
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2290": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6715,
        6773
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2291": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6715,
        6773
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x900"
    },
    "2294": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6715,
        6773
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "2295": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6715,
        6773
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "2296": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6715,
        6773
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2298": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6715,
        6773
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2299": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6715,
        6773
      ],
      "op": "RETURNDATACOPY",
      "path": "13"
    },
    "2300": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6715,
        6773
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "2301": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6715,
        6773
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2303": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6715,
        6773
      ],
      "op": "REVERT",
      "path": "13"
    },
    "2304": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6715,
        6773
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2305": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6715,
        6773
      ],
      "op": "POP",
      "path": "13"
    },
    "2306": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6715,
        6773
      ],
      "op": "POP",
      "path": "13"
    },
    "2307": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6715,
        6773
      ],
      "op": "POP",
      "path": "13"
    },
    "2308": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6715,
        6773
      ],
      "op": "POP",
      "path": "13"
    },
    "2309": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6715,
        6773
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2311": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6715,
        6773
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2312": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6715,
        6773
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "2313": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6715,
        6773
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1F"
    },
    "2315": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6715,
        6773
      ],
      "op": "NOT",
      "path": "13"
    },
    "2316": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6715,
        6773
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1F"
    },
    "2318": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6715,
        6773
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2319": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6715,
        6773
      ],
      "op": "ADD",
      "path": "13"
    },
    "2320": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6715,
        6773
      ],
      "op": "AND",
      "path": "13"
    },
    "2321": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6715,
        6773
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2322": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6715,
        6773
      ],
      "op": "ADD",
      "path": "13"
    },
    "2323": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6715,
        6773
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2324": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6715,
        6773
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2326": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6715,
        6773
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2327": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6715,
        6773
      ],
      "op": "POP",
      "path": "13"
    },
    "2328": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6715,
        6773
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2329": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6715,
        6773
      ],
      "op": "ADD",
      "path": "13"
    },
    "2330": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6715,
        6773
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2331": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6715,
        6773
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x924"
    },
    "2334": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6715,
        6773
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2335": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6715,
        6773
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2336": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6715,
        6773
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1450"
    },
    "2339": {
      "fn": "StakingPool.depositShares",
      "jump": "i",
      "offset": [
        6715,
        6773
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2340": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6715,
        6773
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2341": {
      "op": "POP"
    },
    "2342": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6852,
        6869
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 17,
      "value": "0x6"
    },
    "2344": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6852,
        6869
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "2345": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6840,
        7009
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2347": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6840,
        7009
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2348": {
      "op": "PUSH4",
      "value": "0x967EF807"
    },
    "2353": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2355": {
      "op": "SHL"
    },
    "2356": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6840,
        7009
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2357": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6840,
        7009
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2358": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2360": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2362": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2364": {
      "op": "SHL"
    },
    "2365": {
      "op": "SUB"
    },
    "2366": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6852,
        6869
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2367": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6852,
        6869
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2368": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6852,
        6869
      ],
      "op": "AND",
      "path": "13"
    },
    "2369": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6852,
        6869
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2370": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6840,
        6888
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x967EF807"
    },
    "2375": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6840,
        6888
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2376": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6840,
        7009
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x963"
    },
    "2379": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6840,
        7009
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2380": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6902,
        6909
      ],
      "op": "DUP12",
      "path": "13"
    },
    "2381": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6902,
        6909
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2382": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6902,
        6909
      ],
      "op": "DUP12",
      "path": "13"
    },
    "2383": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6902,
        6909
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2384": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6923,
        6935
      ],
      "op": "DUP12",
      "path": "13"
    },
    "2385": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6923,
        6935
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2386": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6923,
        6935
      ],
      "op": "DUP12",
      "path": "13"
    },
    "2387": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6923,
        6935
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2388": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6949,
        6956
      ],
      "op": "DUP12",
      "path": "13"
    },
    "2389": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6949,
        6956
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2390": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6949,
        6956
      ],
      "op": "DUP12",
      "path": "13"
    },
    "2391": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6949,
        6956
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2392": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6970,
        6977
      ],
      "op": "DUP12",
      "path": "13"
    },
    "2393": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6970,
        6977
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2394": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6991,
        6999
      ],
      "op": "DUP12",
      "path": "13"
    },
    "2395": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6991,
        6999
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2396": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6840,
        7009
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "2398": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6840,
        7009
      ],
      "op": "ADD",
      "path": "13"
    },
    "2399": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6840,
        7009
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x14A9"
    },
    "2402": {
      "fn": "StakingPool.depositShares",
      "jump": "i",
      "offset": [
        6840,
        7009
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2403": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6840,
        7009
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2404": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6840,
        7009
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2406": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6840,
        7009
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2408": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6840,
        7009
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2409": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6840,
        7009
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2410": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6840,
        7009
      ],
      "op": "DUP4",
      "path": "13"
    },
    "2411": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6840,
        7009
      ],
      "op": "SUB",
      "path": "13"
    },
    "2412": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6840,
        7009
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2413": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6840,
        7009
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2415": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6840,
        7009
      ],
      "op": "DUP8",
      "path": "13"
    },
    "2416": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6840,
        7009
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2417": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6840,
        7009
      ],
      "op": "EXTCODESIZE",
      "path": "13"
    },
    "2418": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6840,
        7009
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2419": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6840,
        7009
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2420": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6840,
        7009
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2421": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6840,
        7009
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x97D"
    },
    "2424": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6840,
        7009
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "2425": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6840,
        7009
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2427": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6840,
        7009
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2428": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6840,
        7009
      ],
      "op": "REVERT",
      "path": "13"
    },
    "2429": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6840,
        7009
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2430": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6840,
        7009
      ],
      "op": "POP",
      "path": "13"
    },
    "2431": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6840,
        7009
      ],
      "op": "GAS",
      "path": "13"
    },
    "2432": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6840,
        7009
      ],
      "op": "CALL",
      "path": "13"
    },
    "2433": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6840,
        7009
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2434": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6840,
        7009
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2435": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6840,
        7009
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2436": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6840,
        7009
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x991"
    },
    "2439": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6840,
        7009
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "2440": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6840,
        7009
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "2441": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6840,
        7009
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2443": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6840,
        7009
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2444": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6840,
        7009
      ],
      "op": "RETURNDATACOPY",
      "path": "13"
    },
    "2445": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6840,
        7009
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "2446": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6840,
        7009
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2448": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6840,
        7009
      ],
      "op": "REVERT",
      "path": "13"
    },
    "2449": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6840,
        7009
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2450": {
      "op": "POP"
    },
    "2451": {
      "op": "POP"
    },
    "2452": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7075,
        7085
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 18,
      "value": "0x8"
    },
    "2454": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7075,
        7099
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2455": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7075,
        7099
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "2456": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7075,
        7099
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "2458": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7075,
        7099
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2459": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7075,
        7099
      ],
      "op": "ADD",
      "path": "13"
    },
    "2460": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7075,
        7099
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2461": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7075,
        7099
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "2462": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2464": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7075,
        7099
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2465": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7075,
        7099
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2466": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7075,
        7099
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2467": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7075,
        7099
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2468": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7075,
        7099
      ],
      "op": "PUSH32",
      "path": "13",
      "value": "0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3"
    },
    "2501": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7075,
        7099
      ],
      "op": "ADD",
      "path": "13"
    },
    "2502": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7075,
        7099
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2503": {
      "op": "POP"
    },
    "2504": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7075,
        7099
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x9D4"
    },
    "2507": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7075,
        7099
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2508": {
      "op": "POP"
    },
    "2509": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7091,
        7098
      ],
      "op": "DUP9",
      "path": "13"
    },
    "2510": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7091,
        7098
      ],
      "op": "DUP11",
      "path": "13"
    },
    "2511": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7075,
        7099
      ],
      "op": "DUP4",
      "path": "13"
    },
    "2512": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7075,
        7099
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x15C6"
    },
    "2515": {
      "fn": "StakingPool.depositShares",
      "jump": "i",
      "offset": [
        7075,
        7099
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2516": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7075,
        7099
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2517": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7075,
        7099
      ],
      "op": "POP",
      "path": "13"
    },
    "2518": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7168,
        7213
      ],
      "op": "PUSH32",
      "path": "13",
      "statement": 19,
      "value": "0xB23F6CE72D618DF33A33105741ED7E13469F7F9CA6EDA19E5E505B28783B1F28"
    },
    "2551": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7187,
        7194
      ],
      "op": "DUP9",
      "path": "13"
    },
    "2552": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7187,
        7194
      ],
      "op": "DUP9",
      "path": "13"
    },
    "2553": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7196,
        7203
      ],
      "op": "DUP7",
      "path": "13"
    },
    "2554": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7196,
        7203
      ],
      "op": "DUP7",
      "path": "13"
    },
    "2555": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7205,
        7212
      ],
      "op": "DUP7",
      "path": "13"
    },
    "2556": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7168,
        7213
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2558": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7168,
        7213
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2559": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7168,
        7213
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xA0C"
    },
    "2562": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7168,
        7213
      ],
      "op": "SWAP6",
      "path": "13"
    },
    "2563": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7168,
        7213
      ],
      "op": "SWAP5",
      "path": "13"
    },
    "2564": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7168,
        7213
      ],
      "op": "SWAP4",
      "path": "13"
    },
    "2565": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7168,
        7213
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "2566": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7168,
        7213
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2567": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7168,
        7213
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2568": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7168,
        7213
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1687"
    },
    "2571": {
      "fn": "StakingPool.depositShares",
      "jump": "i",
      "offset": [
        7168,
        7213
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2572": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7168,
        7213
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2573": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7168,
        7213
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2575": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7168,
        7213
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2576": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7168,
        7213
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2577": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7168,
        7213
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2578": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7168,
        7213
      ],
      "op": "SUB",
      "path": "13"
    },
    "2579": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7168,
        7213
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2580": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7168,
        7213
      ],
      "op": "LOG1",
      "path": "13"
    },
    "2581": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6097,
        7220
      ],
      "op": "POP",
      "path": "13"
    },
    "2582": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6097,
        7220
      ],
      "op": "POP",
      "path": "13"
    },
    "2583": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6097,
        7220
      ],
      "op": "POP",
      "path": "13"
    },
    "2584": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6097,
        7220
      ],
      "op": "POP",
      "path": "13"
    },
    "2585": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6097,
        7220
      ],
      "op": "POP",
      "path": "13"
    },
    "2586": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6097,
        7220
      ],
      "op": "POP",
      "path": "13"
    },
    "2587": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6097,
        7220
      ],
      "op": "POP",
      "path": "13"
    },
    "2588": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6097,
        7220
      ],
      "op": "POP",
      "path": "13"
    },
    "2589": {
      "fn": "StakingPool.depositShares",
      "jump": "o",
      "offset": [
        6097,
        7220
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2590": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2642,
        2738
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2591": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2688,
        2702
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x60"
    },
    "2593": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2721,
        2731
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 20,
      "value": "0x8"
    },
    "2595": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2596": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "2597": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2598": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "2600": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "MUL",
      "path": "13"
    },
    "2601": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "2603": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "ADD",
      "path": "13"
    },
    "2604": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2606": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2607": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2608": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2609": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "ADD",
      "path": "13"
    },
    "2610": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2612": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2613": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2614": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "2615": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2616": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2617": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2618": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2619": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2620": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "2622": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "ADD",
      "path": "13"
    },
    "2623": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2625": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2626": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2627": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2628": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2629": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "LT",
      "path": "13"
    },
    "2630": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2631": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xAEE"
    },
    "2634": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "2635": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "DUP4",
      "path": "13"
    },
    "2636": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2637": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2638": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2640": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2641": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "2643": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2645": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "2646": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "ADD",
      "path": "13"
    },
    "2647": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2648": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "2649": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xA61"
    },
    "2652": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2653": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x13C4"
    },
    "2656": {
      "fn": "StakingPool.getValidators",
      "jump": "i",
      "offset": [
        2714,
        2731
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2657": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2658": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2659": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1F"
    },
    "2661": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "ADD",
      "path": "13"
    },
    "2662": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "2664": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2665": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2666": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "DIV",
      "path": "13"
    },
    "2667": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "MUL",
      "path": "13"
    },
    "2668": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "2670": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "ADD",
      "path": "13"
    },
    "2671": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2673": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2674": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2675": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2676": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "ADD",
      "path": "13"
    },
    "2677": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2679": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2680": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2681": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "2682": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2683": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2684": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2685": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2686": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2687": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "2689": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "ADD",
      "path": "13"
    },
    "2690": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2691": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2692": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "2693": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xA8D"
    },
    "2696": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2697": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x13C4"
    },
    "2700": {
      "fn": "StakingPool.getValidators",
      "jump": "i",
      "offset": [
        2714,
        2731
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2701": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2702": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2703": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2704": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xADA"
    },
    "2707": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "2708": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2709": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1F"
    },
    "2711": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "LT",
      "path": "13"
    },
    "2712": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xAAF"
    },
    "2715": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "2716": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x100"
    },
    "2719": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2720": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "DUP4",
      "path": "13"
    },
    "2721": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "2722": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "DIV",
      "path": "13"
    },
    "2723": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "MUL",
      "path": "13"
    },
    "2724": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "DUP4",
      "path": "13"
    },
    "2725": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2726": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2727": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "2729": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "ADD",
      "path": "13"
    },
    "2730": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2731": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xADA"
    },
    "2734": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2735": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2736": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2737": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "ADD",
      "path": "13"
    },
    "2738": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2739": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2740": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2742": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2743": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "2745": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2747": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "2748": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2749": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2750": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2751": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "2752": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2753": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2754": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2755": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "2757": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "ADD",
      "path": "13"
    },
    "2758": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2759": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "2761": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "ADD",
      "path": "13"
    },
    "2762": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2763": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "DUP4",
      "path": "13"
    },
    "2764": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "GT",
      "path": "13"
    },
    "2765": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xABD"
    },
    "2768": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "2769": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2770": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2771": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "SUB",
      "path": "13"
    },
    "2772": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1F"
    },
    "2774": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "AND",
      "path": "13"
    },
    "2775": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2776": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "ADD",
      "path": "13"
    },
    "2777": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2778": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2779": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "POP",
      "path": "13"
    },
    "2780": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "POP",
      "path": "13"
    },
    "2781": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "POP",
      "path": "13"
    },
    "2782": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "POP",
      "path": "13"
    },
    "2783": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "POP",
      "path": "13"
    },
    "2784": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2785": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2786": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "2788": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "ADD",
      "path": "13"
    },
    "2789": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2790": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "2792": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "ADD",
      "path": "13"
    },
    "2793": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2794": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xA42"
    },
    "2797": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2798": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2799": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "POP",
      "path": "13"
    },
    "2800": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "POP",
      "path": "13"
    },
    "2801": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "POP",
      "path": "13"
    },
    "2802": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "POP",
      "path": "13"
    },
    "2803": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2804": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2714,
        2731
      ],
      "op": "POP",
      "path": "13"
    },
    "2805": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2642,
        2738
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2806": {
      "fn": "StakingPool.getValidators",
      "jump": "o",
      "offset": [
        2642,
        2738
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2807": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5174,
        5713
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2808": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5433,
        5605
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 21,
      "value": "0x40"
    },
    "2810": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5433,
        5605
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2811": {
      "op": "PUSH4",
      "value": "0x4512A23"
    },
    "2816": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "2818": {
      "op": "SHL"
    },
    "2819": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5433,
        5605
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2820": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5433,
        5605
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2821": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2823": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2825": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2827": {
      "op": "SHL"
    },
    "2828": {
      "op": "SUB"
    },
    "2829": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5433,
        5448
      ],
      "op": "PUSH32",
      "path": "13",
      "value": "0x0"
    },
    "2862": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5433,
        5456
      ],
      "op": "AND",
      "path": "13"
    },
    "2863": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5433,
        5456
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2864": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5433,
        5456
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x22895118"
    },
    "2869": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5433,
        5456
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2870": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5464,
        5480
      ],
      "op": "PUSH32",
      "path": "13",
      "value": "0x0"
    },
    "2903": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5464,
        5480
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2904": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5433,
        5605
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xB71"
    },
    "2907": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5433,
        5605
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2908": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5495,
        5502
      ],
      "op": "DUP12",
      "path": "13"
    },
    "2909": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5495,
        5502
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2910": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5495,
        5502
      ],
      "op": "DUP12",
      "path": "13"
    },
    "2911": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5495,
        5502
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2912": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5516,
        5539
      ],
      "op": "DUP12",
      "path": "13"
    },
    "2913": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5516,
        5539
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2914": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5516,
        5539
      ],
      "op": "DUP12",
      "path": "13"
    },
    "2915": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5516,
        5539
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2916": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5553,
        5563
      ],
      "op": "DUP12",
      "path": "13"
    },
    "2917": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5553,
        5563
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2918": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5553,
        5563
      ],
      "op": "DUP12",
      "path": "13"
    },
    "2919": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5553,
        5563
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2920": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5577,
        5595
      ],
      "op": "DUP12",
      "path": "13"
    },
    "2921": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5577,
        5595
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2922": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5433,
        5605
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "2924": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5433,
        5605
      ],
      "op": "ADD",
      "path": "13"
    },
    "2925": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5433,
        5605
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x16C1"
    },
    "2928": {
      "fn": "StakingPool.depositValidator",
      "jump": "i",
      "offset": [
        5433,
        5605
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2929": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5433,
        5605
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2930": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5433,
        5605
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2932": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5433,
        5605
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2934": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5433,
        5605
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2935": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5433,
        5605
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2936": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5433,
        5605
      ],
      "op": "DUP4",
      "path": "13"
    },
    "2937": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5433,
        5605
      ],
      "op": "SUB",
      "path": "13"
    },
    "2938": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5433,
        5605
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2939": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5433,
        5605
      ],
      "op": "DUP6",
      "path": "13"
    },
    "2940": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5433,
        5605
      ],
      "op": "DUP9",
      "path": "13"
    },
    "2941": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5433,
        5605
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2942": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5433,
        5605
      ],
      "op": "EXTCODESIZE",
      "path": "13"
    },
    "2943": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5433,
        5605
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2944": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5433,
        5605
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2945": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5433,
        5605
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2946": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5433,
        5605
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xB8A"
    },
    "2949": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5433,
        5605
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "2950": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5433,
        5605
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2952": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5433,
        5605
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2953": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5433,
        5605
      ],
      "op": "REVERT",
      "path": "13"
    },
    "2954": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5433,
        5605
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2955": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5433,
        5605
      ],
      "op": "POP",
      "path": "13"
    },
    "2956": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5433,
        5605
      ],
      "op": "GAS",
      "path": "13"
    },
    "2957": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5433,
        5605
      ],
      "op": "CALL",
      "path": "13"
    },
    "2958": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5433,
        5605
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2959": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5433,
        5605
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2960": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5433,
        5605
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2961": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5433,
        5605
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xB9E"
    },
    "2964": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5433,
        5605
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "2965": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5433,
        5605
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "2966": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5433,
        5605
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2968": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5433,
        5605
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2969": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5433,
        5605
      ],
      "op": "RETURNDATACOPY",
      "path": "13"
    },
    "2970": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5433,
        5605
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "2971": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5433,
        5605
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2973": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5433,
        5605
      ],
      "op": "REVERT",
      "path": "13"
    },
    "2974": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5433,
        5605
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2975": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5433,
        5605
      ],
      "op": "POP",
      "path": "13"
    },
    "2976": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5433,
        5605
      ],
      "op": "POP",
      "path": "13"
    },
    "2977": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5433,
        5605
      ],
      "op": "POP",
      "path": "13"
    },
    "2978": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5433,
        5605
      ],
      "op": "POP",
      "path": "13"
    },
    "2979": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5433,
        5605
      ],
      "op": "POP",
      "path": "13"
    },
    "2980": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5682,
        5706
      ],
      "op": "PUSH32",
      "path": "13",
      "statement": 22,
      "value": "0x144679C9E19454710222D38E13B257573A15B6CA6A4D10A1254EBC2480CB6863"
    },
    "3013": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5698,
        5705
      ],
      "op": "DUP8",
      "path": "13"
    },
    "3014": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5698,
        5705
      ],
      "op": "DUP8",
      "path": "13"
    },
    "3015": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5682,
        5706
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "3017": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5682,
        5706
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "3018": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5682,
        5706
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xBD4"
    },
    "3021": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5682,
        5706
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "3022": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5682,
        5706
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "3023": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5682,
        5706
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3024": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5682,
        5706
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1712"
    },
    "3027": {
      "fn": "StakingPool.depositValidator",
      "jump": "i",
      "offset": [
        5682,
        5706
      ],
      "op": "JUMP",
      "path": "13"
    },
    "3028": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5682,
        5706
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3029": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5682,
        5706
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "3031": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5682,
        5706
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "3032": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5682,
        5706
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3033": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5682,
        5706
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "3034": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5682,
        5706
      ],
      "op": "SUB",
      "path": "13"
    },
    "3035": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5682,
        5706
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3036": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5682,
        5706
      ],
      "op": "LOG1",
      "path": "13"
    },
    "3037": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5174,
        5713
      ],
      "op": "POP",
      "path": "13"
    },
    "3038": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5174,
        5713
      ],
      "op": "POP",
      "path": "13"
    },
    "3039": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5174,
        5713
      ],
      "op": "POP",
      "path": "13"
    },
    "3040": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5174,
        5713
      ],
      "op": "POP",
      "path": "13"
    },
    "3041": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5174,
        5713
      ],
      "op": "POP",
      "path": "13"
    },
    "3042": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5174,
        5713
      ],
      "op": "POP",
      "path": "13"
    },
    "3043": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5174,
        5713
      ],
      "op": "POP",
      "path": "13"
    },
    "3044": {
      "fn": "StakingPool.depositValidator",
      "jump": "o",
      "offset": [
        5174,
        5713
      ],
      "op": "JUMP",
      "path": "13"
    },
    "3045": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        2974,
        3115
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3046": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3061,
        3067
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "3048": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3061,
        3067
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3049": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3061,
        3067
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "3050": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3061,
        3080
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "3052": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3061,
        3080
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3053": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3061,
        3080
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "3054": {
      "op": "PUSH4",
      "value": "0x87269729"
    },
    "3059": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3061": {
      "op": "SHL"
    },
    "3062": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3061,
        3080
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3063": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3061,
        3080
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3064": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3061,
        3080
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3065": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3061,
        3080
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "3066": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3020,
        3027
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "3068": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3020,
        3027
      ],
      "op": "SWAP4",
      "path": "13"
    },
    "3069": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3020,
        3027
      ],
      "op": "DUP5",
      "path": "13"
    },
    "3070": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3020,
        3027
      ],
      "op": "SWAP4",
      "path": "13"
    },
    "3071": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3073": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3075": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3077": {
      "op": "SHL"
    },
    "3078": {
      "op": "SUB"
    },
    "3079": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3061,
        3067
      ],
      "op": "AND",
      "path": "13"
    },
    "3080": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3061,
        3067
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "3081": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3061,
        3078
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x87269729"
    },
    "3086": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3061,
        3078
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "3087": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3061,
        3080
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3088": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3061,
        3080
      ],
      "op": "DUP4",
      "path": "13"
    },
    "3089": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3061,
        3080
      ],
      "op": "ADD",
      "path": "13"
    },
    "3090": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3061,
        3080
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "3091": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3061,
        3080
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "3093": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3061,
        3080
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "3094": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3061,
        3080
      ],
      "op": "DUP3",
      "path": "13"
    },
    "3095": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3061,
        3080
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3096": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3061,
        3080
      ],
      "op": "SUB",
      "path": "13"
    },
    "3097": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3061,
        3080
      ],
      "op": "ADD",
      "path": "13"
    },
    "3098": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3061,
        3080
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3099": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3061,
        3067
      ],
      "op": "DUP7",
      "path": "13"
    },
    "3100": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3061,
        3080
      ],
      "op": "GAS",
      "path": "13"
    },
    "3101": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3061,
        3080
      ],
      "op": "STATICCALL",
      "path": "13"
    },
    "3102": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3061,
        3080
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "3103": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3061,
        3080
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3104": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3061,
        3080
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "3105": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3061,
        3080
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xC2E"
    },
    "3108": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3061,
        3080
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "3109": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3061,
        3080
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "3110": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3061,
        3080
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "3112": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3061,
        3080
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3113": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3061,
        3080
      ],
      "op": "RETURNDATACOPY",
      "path": "13"
    },
    "3114": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3061,
        3080
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "3115": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3061,
        3080
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "3117": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3061,
        3080
      ],
      "op": "REVERT",
      "path": "13"
    },
    "3118": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3061,
        3080
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3119": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3061,
        3080
      ],
      "op": "POP",
      "path": "13"
    },
    "3120": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3061,
        3080
      ],
      "op": "POP",
      "path": "13"
    },
    "3121": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3061,
        3080
      ],
      "op": "POP",
      "path": "13"
    },
    "3122": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3061,
        3080
      ],
      "op": "POP",
      "path": "13"
    },
    "3123": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3061,
        3080
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "3125": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3061,
        3080
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "3126": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3061,
        3080
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "3127": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3061,
        3080
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1F"
    },
    "3129": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3061,
        3080
      ],
      "op": "NOT",
      "path": "13"
    },
    "3130": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3061,
        3080
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1F"
    },
    "3132": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3061,
        3080
      ],
      "op": "DUP3",
      "path": "13"
    },
    "3133": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3061,
        3080
      ],
      "op": "ADD",
      "path": "13"
    },
    "3134": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3061,
        3080
      ],
      "op": "AND",
      "path": "13"
    },
    "3135": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3061,
        3080
      ],
      "op": "DUP3",
      "path": "13"
    },
    "3136": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3061,
        3080
      ],
      "op": "ADD",
      "path": "13"
    },
    "3137": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3061,
        3080
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3138": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3061,
        3080
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "3140": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3061,
        3080
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3141": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3061,
        3080
      ],
      "op": "POP",
      "path": "13"
    },
    "3142": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3061,
        3080
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3143": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3061,
        3080
      ],
      "op": "ADD",
      "path": "13"
    },
    "3144": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3061,
        3080
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3145": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3061,
        3080
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xC52"
    },
    "3148": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3061,
        3080
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "3149": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3061,
        3080
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3150": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3061,
        3080
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1437"
    },
    "3153": {
      "fn": "StakingPool.getShareprice",
      "jump": "i",
      "offset": [
        3061,
        3080
      ],
      "op": "JUMP",
      "path": "13"
    },
    "3154": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3061,
        3080
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3155": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3039,
        3080
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "3156": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        2974,
        3115
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "3157": {
      "op": "POP"
    },
    "3158": {
      "op": "POP"
    },
    "3159": {
      "fn": "StakingPool.getShareprice",
      "jump": "o",
      "offset": [
        2974,
        3115
      ],
      "op": "JUMP",
      "path": "13"
    },
    "3160": {
      "fn": "StakingPool.updateOperators",
      "offset": [
        3230,
        3396
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3161": {
      "offset": [
        1094,
        1107
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC60"
    },
    "3164": {
      "offset": [
        1094,
        1105
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD21"
    },
    "3167": {
      "jump": "i",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3168": {
      "fn": "StakingPool.updateOperators",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3169": {
      "fn": "StakingPool.updateOperators",
      "offset": [
        3314,
        3341
      ],
      "op": "PUSH2",
      "path": "13",
      "statement": 23,
      "value": "0xC6D"
    },
    "3172": {
      "fn": "StakingPool.updateOperators",
      "offset": [
        3314,
        3325
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x7"
    },
    "3174": {
      "fn": "StakingPool.updateOperators",
      "offset": [
        3328,
        3341
      ],
      "op": "DUP3",
      "path": "13"
    },
    "3175": {
      "fn": "StakingPool.updateOperators",
      "offset": [
        3314,
        3341
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "3177": {
      "fn": "StakingPool.updateOperators",
      "offset": [
        3314,
        3341
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xE76"
    },
    "3180": {
      "fn": "StakingPool.updateOperators",
      "jump": "i",
      "offset": [
        3314,
        3341
      ],
      "op": "JUMP",
      "path": "13"
    },
    "3181": {
      "fn": "StakingPool.updateOperators",
      "offset": [
        3314,
        3341
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3182": {
      "fn": "StakingPool.updateOperators",
      "offset": [
        3314,
        3341
      ],
      "op": "POP",
      "path": "13"
    },
    "3183": {
      "fn": "StakingPool.updateOperators",
      "offset": [
        3356,
        3389
      ],
      "op": "PUSH32",
      "path": "13",
      "statement": 24,
      "value": "0xA31D33307023A78B2B477792A91EFBED5EE91448638292C891E81233CB6108F8"
    },
    "3216": {
      "fn": "StakingPool.updateOperators",
      "offset": [
        3375,
        3388
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3217": {
      "fn": "StakingPool.updateOperators",
      "offset": [
        3356,
        3389
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "3219": {
      "fn": "StakingPool.updateOperators",
      "offset": [
        3356,
        3389
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "3220": {
      "fn": "StakingPool.updateOperators",
      "offset": [
        3356,
        3389
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xC9D"
    },
    "3223": {
      "fn": "StakingPool.updateOperators",
      "offset": [
        3356,
        3389
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "3224": {
      "fn": "StakingPool.updateOperators",
      "offset": [
        3356,
        3389
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3225": {
      "fn": "StakingPool.updateOperators",
      "offset": [
        3356,
        3389
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xFA0"
    },
    "3228": {
      "fn": "StakingPool.updateOperators",
      "jump": "i",
      "offset": [
        3356,
        3389
      ],
      "op": "JUMP",
      "path": "13"
    },
    "3229": {
      "fn": "StakingPool.updateOperators",
      "offset": [
        3356,
        3389
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3230": {
      "fn": "StakingPool.updateOperators",
      "offset": [
        3356,
        3389
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "3232": {
      "fn": "StakingPool.updateOperators",
      "offset": [
        3356,
        3389
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "3233": {
      "fn": "StakingPool.updateOperators",
      "offset": [
        3356,
        3389
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3234": {
      "fn": "StakingPool.updateOperators",
      "offset": [
        3356,
        3389
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "3235": {
      "fn": "StakingPool.updateOperators",
      "offset": [
        3356,
        3389
      ],
      "op": "SUB",
      "path": "13"
    },
    "3236": {
      "fn": "StakingPool.updateOperators",
      "offset": [
        3356,
        3389
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3237": {
      "fn": "StakingPool.updateOperators",
      "offset": [
        3356,
        3389
      ],
      "op": "LOG1",
      "path": "13"
    },
    "3238": {
      "fn": "StakingPool.updateOperators",
      "offset": [
        3230,
        3396
      ],
      "op": "POP",
      "path": "13"
    },
    "3239": {
      "fn": "StakingPool.updateOperators",
      "jump": "o",
      "offset": [
        3230,
        3396
      ],
      "op": "JUMP",
      "path": "13"
    },
    "3240": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3241": {
      "offset": [
        1094,
        1107
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCB0"
    },
    "3244": {
      "offset": [
        1094,
        1105
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD21"
    },
    "3247": {
      "jump": "i",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3248": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3249": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3251": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3253": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3255": {
      "op": "SHL"
    },
    "3256": {
      "op": "SUB"
    },
    "3257": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2169,
        2191
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 25
    },
    "3258": {
      "branch": 35,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2169,
        2191
      ],
      "op": "AND",
      "path": "2"
    },
    "3259": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD15"
    },
    "3262": {
      "branch": 35,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3263": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3265": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3266": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3270": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3272": {
      "op": "SHL"
    },
    "3273": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3274": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3275": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3277": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3279": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3280": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "ADD",
      "path": "2"
    },
    "3281": {
      "op": "MSTORE"
    },
    "3282": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "3284": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3286": {
      "op": "DUP3"
    },
    "3287": {
      "op": "ADD"
    },
    "3288": {
      "op": "MSTORE"
    },
    "3289": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "3322": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3324": {
      "op": "DUP3"
    },
    "3325": {
      "op": "ADD"
    },
    "3326": {
      "op": "MSTORE"
    },
    "3327": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "3334": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "3336": {
      "op": "SHL"
    },
    "3337": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3339": {
      "op": "DUP3"
    },
    "3340": {
      "op": "ADD"
    },
    "3341": {
      "op": "MSTORE"
    },
    "3342": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3344": {
      "op": "ADD"
    },
    "3345": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x598"
    },
    "3348": {
      "op": "JUMP"
    },
    "3349": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3350": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2244,
        2272
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 26,
      "value": "0xD1E"
    },
    "3353": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2263,
        2271
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3354": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2244,
        2262
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE08"
    },
    "3357": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2244,
        2272
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3358": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2244,
        2272
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3359": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "POP",
      "path": "2"
    },
    "3360": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3361": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1359,
        1489
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3362": {
      "fn": "Ownable.owner",
      "offset": [
        1247,
        1254
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3364": {
      "fn": "Ownable.owner",
      "offset": [
        1273,
        1279
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3365": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3367": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3369": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3371": {
      "op": "SHL"
    },
    "3372": {
      "op": "SUB"
    },
    "3373": {
      "fn": "Ownable.owner",
      "offset": [
        1273,
        1279
      ],
      "op": "AND",
      "path": "2"
    },
    "3374": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "7",
      "statement": 27
    },
    "3375": {
      "branch": 36,
      "fn": "Ownable._checkOwner",
      "offset": [
        1422,
        1445
      ],
      "op": "EQ",
      "path": "2",
      "statement": 28
    },
    "3376": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x869"
    },
    "3379": {
      "branch": 36,
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3380": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3382": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3383": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3387": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3389": {
      "op": "SHL"
    },
    "3390": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3391": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3392": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3394": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3396": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3397": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "ADD",
      "path": "2"
    },
    "3398": {
      "op": "DUP2"
    },
    "3399": {
      "op": "SWAP1"
    },
    "3400": {
      "op": "MSTORE"
    },
    "3401": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3403": {
      "op": "DUP3"
    },
    "3404": {
      "op": "ADD"
    },
    "3405": {
      "op": "MSTORE"
    },
    "3406": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "3439": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3441": {
      "op": "DUP3"
    },
    "3442": {
      "op": "ADD"
    },
    "3443": {
      "op": "MSTORE"
    },
    "3444": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3446": {
      "op": "ADD"
    },
    "3447": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x598"
    },
    "3450": {
      "op": "JUMP"
    },
    "3451": {
      "fn": "StakingPool.updateSharePrice",
      "offset": [
        7608,
        7771
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3452": {
      "fn": "StakingPool.updateSharePrice",
      "offset": [
        7677,
        7683
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 29,
      "value": "0x4"
    },
    "3454": {
      "fn": "StakingPool.updateSharePrice",
      "offset": [
        7677,
        7683
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3455": {
      "fn": "StakingPool.updateSharePrice",
      "offset": [
        7677,
        7683
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "3456": {
      "fn": "StakingPool.updateSharePrice",
      "offset": [
        7677,
        7716
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "3458": {
      "fn": "StakingPool.updateSharePrice",
      "offset": [
        7677,
        7716
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "3459": {
      "op": "PUSH4",
      "value": "0x41640201"
    },
    "3464": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3466": {
      "op": "SHL"
    },
    "3467": {
      "fn": "StakingPool.updateSharePrice",
      "offset": [
        7677,
        7716
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3468": {
      "fn": "StakingPool.updateSharePrice",
      "offset": [
        7677,
        7716
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3469": {
      "fn": "StakingPool.updateSharePrice",
      "offset": [
        7677,
        7716
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "3470": {
      "fn": "StakingPool.updateSharePrice",
      "offset": [
        7677,
        7716
      ],
      "op": "DUP3",
      "path": "13"
    },
    "3471": {
      "fn": "StakingPool.updateSharePrice",
      "offset": [
        7677,
        7716
      ],
      "op": "ADD",
      "path": "13"
    },
    "3472": {
      "op": "DUP4"
    },
    "3473": {
      "op": "SWAP1"
    },
    "3474": {
      "op": "MSTORE"
    },
    "3475": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3477": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3479": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3481": {
      "op": "SHL"
    },
    "3482": {
      "op": "SUB"
    },
    "3483": {
      "fn": "StakingPool.updateSharePrice",
      "offset": [
        7677,
        7683
      ],
      "op": "AND",
      "path": "13"
    },
    "3484": {
      "fn": "StakingPool.updateSharePrice",
      "offset": [
        7677,
        7683
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3485": {
      "fn": "StakingPool.updateSharePrice",
      "offset": [
        7677,
        7700
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x41640201"
    },
    "3490": {
      "fn": "StakingPool.updateSharePrice",
      "offset": [
        7677,
        7700
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3491": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3493": {
      "op": "ADD"
    },
    "3494": {
      "fn": "StakingPool.updateSharePrice",
      "offset": [
        7677,
        7716
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "3496": {
      "fn": "StakingPool.updateSharePrice",
      "offset": [
        7677,
        7716
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "3498": {
      "fn": "StakingPool.updateSharePrice",
      "offset": [
        7677,
        7716
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "3499": {
      "fn": "StakingPool.updateSharePrice",
      "offset": [
        7677,
        7716
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3500": {
      "fn": "StakingPool.updateSharePrice",
      "offset": [
        7677,
        7716
      ],
      "op": "DUP4",
      "path": "13"
    },
    "3501": {
      "fn": "StakingPool.updateSharePrice",
      "offset": [
        7677,
        7716
      ],
      "op": "SUB",
      "path": "13"
    },
    "3502": {
      "fn": "StakingPool.updateSharePrice",
      "offset": [
        7677,
        7716
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3503": {
      "fn": "StakingPool.updateSharePrice",
      "offset": [
        7677,
        7716
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "3505": {
      "fn": "StakingPool.updateSharePrice",
      "offset": [
        7677,
        7716
      ],
      "op": "DUP8",
      "path": "13"
    },
    "3506": {
      "fn": "StakingPool.updateSharePrice",
      "offset": [
        7677,
        7716
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3507": {
      "fn": "StakingPool.updateSharePrice",
      "offset": [
        7677,
        7716
      ],
      "op": "EXTCODESIZE",
      "path": "13"
    },
    "3508": {
      "fn": "StakingPool.updateSharePrice",
      "offset": [
        7677,
        7716
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "3509": {
      "fn": "StakingPool.updateSharePrice",
      "offset": [
        7677,
        7716
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3510": {
      "fn": "StakingPool.updateSharePrice",
      "offset": [
        7677,
        7716
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "3511": {
      "fn": "StakingPool.updateSharePrice",
      "offset": [
        7677,
        7716
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xDBF"
    },
    "3514": {
      "fn": "StakingPool.updateSharePrice",
      "offset": [
        7677,
        7716
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "3515": {
      "fn": "StakingPool.updateSharePrice",
      "offset": [
        7677,
        7716
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "3517": {
      "fn": "StakingPool.updateSharePrice",
      "offset": [
        7677,
        7716
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3518": {
      "fn": "StakingPool.updateSharePrice",
      "offset": [
        7677,
        7716
      ],
      "op": "REVERT",
      "path": "13"
    },
    "3519": {
      "fn": "StakingPool.updateSharePrice",
      "offset": [
        7677,
        7716
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3520": {
      "fn": "StakingPool.updateSharePrice",
      "offset": [
        7677,
        7716
      ],
      "op": "POP",
      "path": "13"
    },
    "3521": {
      "fn": "StakingPool.updateSharePrice",
      "offset": [
        7677,
        7716
      ],
      "op": "GAS",
      "path": "13"
    },
    "3522": {
      "fn": "StakingPool.updateSharePrice",
      "offset": [
        7677,
        7716
      ],
      "op": "CALL",
      "path": "13"
    },
    "3523": {
      "fn": "StakingPool.updateSharePrice",
      "offset": [
        7677,
        7716
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "3524": {
      "fn": "StakingPool.updateSharePrice",
      "offset": [
        7677,
        7716
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3525": {
      "fn": "StakingPool.updateSharePrice",
      "offset": [
        7677,
        7716
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "3526": {
      "fn": "StakingPool.updateSharePrice",
      "offset": [
        7677,
        7716
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xDD3"
    },
    "3529": {
      "fn": "StakingPool.updateSharePrice",
      "offset": [
        7677,
        7716
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "3530": {
      "fn": "StakingPool.updateSharePrice",
      "offset": [
        7677,
        7716
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "3531": {
      "fn": "StakingPool.updateSharePrice",
      "offset": [
        7677,
        7716
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "3533": {
      "fn": "StakingPool.updateSharePrice",
      "offset": [
        7677,
        7716
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3534": {
      "fn": "StakingPool.updateSharePrice",
      "offset": [
        7677,
        7716
      ],
      "op": "RETURNDATACOPY",
      "path": "13"
    },
    "3535": {
      "fn": "StakingPool.updateSharePrice",
      "offset": [
        7677,
        7716
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "3536": {
      "fn": "StakingPool.updateSharePrice",
      "offset": [
        7677,
        7716
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "3538": {
      "fn": "StakingPool.updateSharePrice",
      "offset": [
        7677,
        7716
      ],
      "op": "REVERT",
      "path": "13"
    },
    "3539": {
      "fn": "StakingPool.updateSharePrice",
      "offset": [
        7677,
        7716
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3540": {
      "fn": "StakingPool.updateSharePrice",
      "offset": [
        7677,
        7716
      ],
      "op": "POP",
      "path": "13"
    },
    "3541": {
      "fn": "StakingPool.updateSharePrice",
      "offset": [
        7677,
        7716
      ],
      "op": "POP",
      "path": "13"
    },
    "3542": {
      "fn": "StakingPool.updateSharePrice",
      "offset": [
        7677,
        7716
      ],
      "op": "POP",
      "path": "13"
    },
    "3543": {
      "fn": "StakingPool.updateSharePrice",
      "offset": [
        7677,
        7716
      ],
      "op": "POP",
      "path": "13"
    },
    "3544": {
      "fn": "StakingPool.updateSharePrice",
      "offset": [
        7731,
        7764
      ],
      "op": "PUSH32",
      "path": "13",
      "statement": 30,
      "value": "0xCE44720B7462058F31DDECAB3DAA427921E5975D9ACB555F043682DADA866569"
    },
    "3577": {
      "fn": "StakingPool.updateSharePrice",
      "offset": [
        7749,
        7763
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3578": {
      "fn": "StakingPool.updateSharePrice",
      "offset": [
        7731,
        7764
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "3580": {
      "fn": "StakingPool.updateSharePrice",
      "offset": [
        7731,
        7764
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "3581": {
      "fn": "StakingPool.updateSharePrice",
      "offset": [
        7731,
        7764
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xC9D"
    },
    "3584": {
      "fn": "StakingPool.updateSharePrice",
      "offset": [
        7731,
        7764
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "3585": {
      "op": "DUP2"
    },
    "3586": {
      "op": "MSTORE"
    },
    "3587": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3589": {
      "op": "ADD"
    },
    "3590": {
      "op": "SWAP1"
    },
    "3591": {
      "op": "JUMP"
    },
    "3592": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2433,
        2620
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3593": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2506,
        2522
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3595": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3596": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3597": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3599": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3601": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3603": {
      "op": "SHL"
    },
    "3604": {
      "op": "SUB"
    },
    "3605": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 31
    },
    "3606": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3607": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "AND",
      "path": "2"
    },
    "3608": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3610": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3612": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3614": {
      "op": "SHL"
    },
    "3615": {
      "op": "SUB"
    },
    "3616": {
      "op": "NOT"
    },
    "3617": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3618": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "AND",
      "path": "2"
    },
    "3619": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3620": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "OR",
      "path": "2"
    },
    "3621": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3622": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "3623": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2573,
        2613
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 32,
      "value": "0x40"
    },
    "3625": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2573,
        2613
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3626": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3627": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3628": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3629": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "AND",
      "path": "2"
    },
    "3630": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3631": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3632": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3633": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2573,
        2613
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "3666": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2573,
        2613
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3667": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2506,
        2522
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3668": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2573,
        2613
      ],
      "op": "LOG3",
      "path": "2"
    },
    "3669": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2496,
        2620
      ],
      "op": "POP",
      "path": "2"
    },
    "3670": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2433,
        2620
      ],
      "op": "POP",
      "path": "2"
    },
    "3671": {
      "fn": "Ownable._transferOwnership",
      "jump": "o",
      "offset": [
        2433,
        2620
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3672": {
      "op": "JUMPDEST"
    },
    "3673": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3675": {
      "op": "MLOAD"
    },
    "3676": {
      "op": "DUP1"
    },
    "3677": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3679": {
      "op": "ADD"
    },
    "3680": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3682": {
      "op": "MSTORE"
    },
    "3683": {
      "op": "DUP1"
    },
    "3684": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3686": {
      "op": "SWAP1"
    },
    "3687": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3689": {
      "op": "DUP3"
    },
    "3690": {
      "op": "MUL"
    },
    "3691": {
      "op": "DUP1"
    },
    "3692": {
      "op": "CALLDATASIZE"
    },
    "3693": {
      "op": "DUP4"
    },
    "3694": {
      "op": "CALLDATACOPY"
    },
    "3695": {
      "op": "POP"
    },
    "3696": {
      "op": "SWAP2"
    },
    "3697": {
      "op": "SWAP3"
    },
    "3698": {
      "op": "SWAP2"
    },
    "3699": {
      "op": "POP"
    },
    "3700": {
      "op": "POP"
    },
    "3701": {
      "jump": "o",
      "op": "JUMP"
    },
    "3702": {
      "op": "JUMPDEST"
    },
    "3703": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3705": {
      "op": "DUP4"
    },
    "3706": {
      "op": "ADD"
    },
    "3707": {
      "op": "SWAP2"
    },
    "3708": {
      "op": "DUP4"
    },
    "3709": {
      "op": "SWAP1"
    },
    "3710": {
      "op": "DUP3"
    },
    "3711": {
      "op": "ISZERO"
    },
    "3712": {
      "op": "PUSH2",
      "value": "0xF02"
    },
    "3715": {
      "op": "JUMPI"
    },
    "3716": {
      "op": "SWAP2"
    },
    "3717": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3719": {
      "op": "MUL"
    },
    "3720": {
      "op": "DUP3"
    },
    "3721": {
      "op": "ADD"
    },
    "3722": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3724": {
      "op": "JUMPDEST"
    },
    "3725": {
      "op": "DUP4"
    },
    "3726": {
      "op": "DUP3"
    },
    "3727": {
      "op": "GT"
    },
    "3728": {
      "op": "ISZERO"
    },
    "3729": {
      "op": "PUSH2",
      "value": "0xED0"
    },
    "3732": {
      "op": "JUMPI"
    },
    "3733": {
      "op": "DUP4"
    },
    "3734": {
      "op": "MLOAD"
    },
    "3735": {
      "op": "DUP4"
    },
    "3736": {
      "op": "DUP3"
    },
    "3737": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "3740": {
      "op": "EXP"
    },
    "3741": {
      "op": "DUP2"
    },
    "3742": {
      "op": "SLOAD"
    },
    "3743": {
      "op": "DUP2"
    },
    "3744": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "3749": {
      "op": "MUL"
    },
    "3750": {
      "op": "NOT"
    },
    "3751": {
      "op": "AND"
    },
    "3752": {
      "op": "SWAP1"
    },
    "3753": {
      "op": "DUP4"
    },
    "3754": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "3759": {
      "op": "AND"
    },
    "3760": {
      "op": "MUL"
    },
    "3761": {
      "op": "OR"
    },
    "3762": {
      "op": "SWAP1"
    },
    "3763": {
      "op": "SSTORE"
    },
    "3764": {
      "op": "POP"
    },
    "3765": {
      "op": "SWAP3"
    },
    "3766": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3768": {
      "op": "ADD"
    },
    "3769": {
      "op": "SWAP3"
    },
    "3770": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3772": {
      "op": "ADD"
    },
    "3773": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3775": {
      "op": "DUP2"
    },
    "3776": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "3778": {
      "op": "ADD"
    },
    "3779": {
      "op": "DIV"
    },
    "3780": {
      "op": "SWAP3"
    },
    "3781": {
      "op": "DUP4"
    },
    "3782": {
      "op": "ADD"
    },
    "3783": {
      "op": "SWAP3"
    },
    "3784": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3786": {
      "op": "SUB"
    },
    "3787": {
      "op": "MUL"
    },
    "3788": {
      "op": "PUSH2",
      "value": "0xE8C"
    },
    "3791": {
      "op": "JUMP"
    },
    "3792": {
      "op": "JUMPDEST"
    },
    "3793": {
      "op": "DUP1"
    },
    "3794": {
      "op": "ISZERO"
    },
    "3795": {
      "op": "PUSH2",
      "value": "0xF00"
    },
    "3798": {
      "op": "JUMPI"
    },
    "3799": {
      "op": "DUP3"
    },
    "3800": {
      "op": "DUP2"
    },
    "3801": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "3804": {
      "op": "EXP"
    },
    "3805": {
      "op": "DUP2"
    },
    "3806": {
      "op": "SLOAD"
    },
    "3807": {
      "op": "SWAP1"
    },
    "3808": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "3813": {
      "op": "MUL"
    },
    "3814": {
      "op": "NOT"
    },
    "3815": {
      "op": "AND"
    },
    "3816": {
      "op": "SWAP1"
    },
    "3817": {
      "op": "SSTORE"
    },
    "3818": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3820": {
      "op": "ADD"
    },
    "3821": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3823": {
      "op": "DUP2"
    },
    "3824": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "3826": {
      "op": "ADD"
    },
    "3827": {
      "op": "DIV"
    },
    "3828": {
      "op": "SWAP3"
    },
    "3829": {
      "op": "DUP4"
    },
    "3830": {
      "op": "ADD"
    },
    "3831": {
      "op": "SWAP3"
    },
    "3832": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3834": {
      "op": "SUB"
    },
    "3835": {
      "op": "MUL"
    },
    "3836": {
      "op": "PUSH2",
      "value": "0xED0"
    },
    "3839": {
      "op": "JUMP"
    },
    "3840": {
      "op": "JUMPDEST"
    },
    "3841": {
      "op": "POP"
    },
    "3842": {
      "op": "JUMPDEST"
    },
    "3843": {
      "op": "POP"
    },
    "3844": {
      "op": "PUSH2",
      "value": "0xF0E"
    },
    "3847": {
      "op": "SWAP3"
    },
    "3848": {
      "op": "SWAP2"
    },
    "3849": {
      "op": "POP"
    },
    "3850": {
      "op": "PUSH2",
      "value": "0xF12"
    },
    "3853": {
      "jump": "i",
      "op": "JUMP"
    },
    "3854": {
      "op": "JUMPDEST"
    },
    "3855": {
      "op": "POP"
    },
    "3856": {
      "op": "SWAP1"
    },
    "3857": {
      "jump": "o",
      "op": "JUMP"
    },
    "3858": {
      "op": "JUMPDEST"
    },
    "3859": {
      "op": "JUMPDEST"
    },
    "3860": {
      "op": "DUP1"
    },
    "3861": {
      "op": "DUP3"
    },
    "3862": {
      "op": "GT"
    },
    "3863": {
      "op": "ISZERO"
    },
    "3864": {
      "op": "PUSH2",
      "value": "0xF0E"
    },
    "3867": {
      "op": "JUMPI"
    },
    "3868": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3870": {
      "op": "DUP2"
    },
    "3871": {
      "op": "SSTORE"
    },
    "3872": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3874": {
      "op": "ADD"
    },
    "3875": {
      "op": "PUSH2",
      "value": "0xF13"
    },
    "3878": {
      "op": "JUMP"
    },
    "3879": {
      "op": "JUMPDEST"
    },
    "3880": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3882": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3884": {
      "op": "DUP3"
    },
    "3885": {
      "op": "DUP5"
    },
    "3886": {
      "op": "SUB"
    },
    "3887": {
      "op": "SLT"
    },
    "3888": {
      "op": "ISZERO"
    },
    "3889": {
      "op": "PUSH2",
      "value": "0xF39"
    },
    "3892": {
      "op": "JUMPI"
    },
    "3893": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3895": {
      "op": "DUP1"
    },
    "3896": {
      "op": "REVERT"
    },
    "3897": {
      "op": "JUMPDEST"
    },
    "3898": {
      "op": "POP"
    },
    "3899": {
      "op": "CALLDATALOAD"
    },
    "3900": {
      "op": "SWAP2"
    },
    "3901": {
      "op": "SWAP1"
    },
    "3902": {
      "op": "POP"
    },
    "3903": {
      "jump": "o",
      "op": "JUMP"
    },
    "3904": {
      "op": "JUMPDEST"
    },
    "3905": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3907": {
      "op": "DUP2"
    },
    "3908": {
      "op": "MLOAD"
    },
    "3909": {
      "op": "DUP1"
    },
    "3910": {
      "op": "DUP5"
    },
    "3911": {
      "op": "MSTORE"
    },
    "3912": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3914": {
      "op": "JUMPDEST"
    },
    "3915": {
      "op": "DUP2"
    },
    "3916": {
      "op": "DUP2"
    },
    "3917": {
      "op": "LT"
    },
    "3918": {
      "op": "ISZERO"
    },
    "3919": {
      "op": "PUSH2",
      "value": "0xF66"
    },
    "3922": {
      "op": "JUMPI"
    },
    "3923": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3925": {
      "op": "DUP2"
    },
    "3926": {
      "op": "DUP6"
    },
    "3927": {
      "op": "ADD"
    },
    "3928": {
      "op": "DUP2"
    },
    "3929": {
      "op": "ADD"
    },
    "3930": {
      "op": "MLOAD"
    },
    "3931": {
      "op": "DUP7"
    },
    "3932": {
      "op": "DUP4"
    },
    "3933": {
      "op": "ADD"
    },
    "3934": {
      "op": "DUP3"
    },
    "3935": {
      "op": "ADD"
    },
    "3936": {
      "op": "MSTORE"
    },
    "3937": {
      "op": "ADD"
    },
    "3938": {
      "op": "PUSH2",
      "value": "0xF4A"
    },
    "3941": {
      "op": "JUMP"
    },
    "3942": {
      "op": "JUMPDEST"
    },
    "3943": {
      "op": "POP"
    },
    "3944": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3946": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3948": {
      "op": "DUP3"
    },
    "3949": {
      "op": "DUP7"
    },
    "3950": {
      "op": "ADD"
    },
    "3951": {
      "op": "ADD"
    },
    "3952": {
      "op": "MSTORE"
    },
    "3953": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3955": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3957": {
      "op": "NOT"
    },
    "3958": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3960": {
      "op": "DUP4"
    },
    "3961": {
      "op": "ADD"
    },
    "3962": {
      "op": "AND"
    },
    "3963": {
      "op": "DUP6"
    },
    "3964": {
      "op": "ADD"
    },
    "3965": {
      "op": "ADD"
    },
    "3966": {
      "op": "SWAP2"
    },
    "3967": {
      "op": "POP"
    },
    "3968": {
      "op": "POP"
    },
    "3969": {
      "op": "SWAP3"
    },
    "3970": {
      "op": "SWAP2"
    },
    "3971": {
      "op": "POP"
    },
    "3972": {
      "op": "POP"
    },
    "3973": {
      "jump": "o",
      "op": "JUMP"
    },
    "3974": {
      "op": "JUMPDEST"
    },
    "3975": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3977": {
      "op": "DUP2"
    },
    "3978": {
      "op": "MSTORE"
    },
    "3979": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3981": {
      "op": "PUSH2",
      "value": "0xF99"
    },
    "3984": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3986": {
      "op": "DUP4"
    },
    "3987": {
      "op": "ADD"
    },
    "3988": {
      "op": "DUP5"
    },
    "3989": {
      "op": "PUSH2",
      "value": "0xF40"
    },
    "3992": {
      "jump": "i",
      "op": "JUMP"
    },
    "3993": {
      "op": "JUMPDEST"
    },
    "3994": {
      "op": "SWAP4"
    },
    "3995": {
      "op": "SWAP3"
    },
    "3996": {
      "op": "POP"
    },
    "3997": {
      "op": "POP"
    },
    "3998": {
      "op": "POP"
    },
    "3999": {
      "jump": "o",
      "op": "JUMP"
    },
    "4000": {
      "op": "JUMPDEST"
    },
    "4001": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4003": {
      "op": "DUP2"
    },
    "4004": {
      "op": "ADD"
    },
    "4005": {
      "op": "DUP2"
    },
    "4006": {
      "op": "DUP4"
    },
    "4007": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4009": {
      "op": "JUMPDEST"
    },
    "4010": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4012": {
      "op": "DUP2"
    },
    "4013": {
      "op": "LT"
    },
    "4014": {
      "op": "ISZERO"
    },
    "4015": {
      "op": "PUSH2",
      "value": "0xFCE"
    },
    "4018": {
      "op": "JUMPI"
    },
    "4019": {
      "op": "DUP2"
    },
    "4020": {
      "op": "MLOAD"
    },
    "4021": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "4026": {
      "op": "AND"
    },
    "4027": {
      "op": "DUP4"
    },
    "4028": {
      "op": "MSTORE"
    },
    "4029": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4031": {
      "op": "SWAP3"
    },
    "4032": {
      "op": "DUP4"
    },
    "4033": {
      "op": "ADD"
    },
    "4034": {
      "op": "SWAP3"
    },
    "4035": {
      "op": "SWAP1"
    },
    "4036": {
      "op": "SWAP2"
    },
    "4037": {
      "op": "ADD"
    },
    "4038": {
      "op": "SWAP1"
    },
    "4039": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4041": {
      "op": "ADD"
    },
    "4042": {
      "op": "PUSH2",
      "value": "0xFA9"
    },
    "4045": {
      "op": "JUMP"
    },
    "4046": {
      "op": "JUMPDEST"
    },
    "4047": {
      "op": "POP"
    },
    "4048": {
      "op": "POP"
    },
    "4049": {
      "op": "POP"
    },
    "4050": {
      "op": "SWAP3"
    },
    "4051": {
      "op": "SWAP2"
    },
    "4052": {
      "op": "POP"
    },
    "4053": {
      "op": "POP"
    },
    "4054": {
      "jump": "o",
      "op": "JUMP"
    },
    "4055": {
      "op": "JUMPDEST"
    },
    "4056": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4058": {
      "op": "DUP1"
    },
    "4059": {
      "op": "DUP4"
    },
    "4060": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4062": {
      "op": "DUP5"
    },
    "4063": {
      "op": "ADD"
    },
    "4064": {
      "op": "SLT"
    },
    "4065": {
      "op": "PUSH2",
      "value": "0xFE9"
    },
    "4068": {
      "op": "JUMPI"
    },
    "4069": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4071": {
      "op": "DUP1"
    },
    "4072": {
      "op": "REVERT"
    },
    "4073": {
      "op": "JUMPDEST"
    },
    "4074": {
      "op": "POP"
    },
    "4075": {
      "op": "DUP2"
    },
    "4076": {
      "op": "CALLDATALOAD"
    },
    "4077": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4086": {
      "op": "DUP2"
    },
    "4087": {
      "op": "GT"
    },
    "4088": {
      "op": "ISZERO"
    },
    "4089": {
      "op": "PUSH2",
      "value": "0x1001"
    },
    "4092": {
      "op": "JUMPI"
    },
    "4093": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4095": {
      "op": "DUP1"
    },
    "4096": {
      "op": "REVERT"
    },
    "4097": {
      "op": "JUMPDEST"
    },
    "4098": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4100": {
      "op": "DUP4"
    },
    "4101": {
      "op": "ADD"
    },
    "4102": {
      "op": "SWAP2"
    },
    "4103": {
      "op": "POP"
    },
    "4104": {
      "op": "DUP4"
    },
    "4105": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4107": {
      "op": "DUP3"
    },
    "4108": {
      "op": "DUP6"
    },
    "4109": {
      "op": "ADD"
    },
    "4110": {
      "op": "ADD"
    },
    "4111": {
      "op": "GT"
    },
    "4112": {
      "op": "ISZERO"
    },
    "4113": {
      "op": "PUSH2",
      "value": "0x1019"
    },
    "4116": {
      "op": "JUMPI"
    },
    "4117": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4119": {
      "op": "DUP1"
    },
    "4120": {
      "op": "REVERT"
    },
    "4121": {
      "op": "JUMPDEST"
    },
    "4122": {
      "op": "SWAP3"
    },
    "4123": {
      "op": "POP"
    },
    "4124": {
      "op": "SWAP3"
    },
    "4125": {
      "op": "SWAP1"
    },
    "4126": {
      "op": "POP"
    },
    "4127": {
      "jump": "o",
      "op": "JUMP"
    },
    "4128": {
      "op": "JUMPDEST"
    },
    "4129": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4134": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4136": {
      "op": "SHL"
    },
    "4137": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4139": {
      "op": "MSTORE"
    },
    "4140": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "4142": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4144": {
      "op": "MSTORE"
    },
    "4145": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4147": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4149": {
      "op": "REVERT"
    },
    "4150": {
      "op": "JUMPDEST"
    },
    "4151": {
      "op": "DUP1"
    },
    "4152": {
      "op": "CALLDATALOAD"
    },
    "4153": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "4158": {
      "op": "DUP2"
    },
    "4159": {
      "op": "AND"
    },
    "4160": {
      "op": "DUP2"
    },
    "4161": {
      "op": "EQ"
    },
    "4162": {
      "op": "PUSH2",
      "value": "0x104A"
    },
    "4165": {
      "op": "JUMPI"
    },
    "4166": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4168": {
      "op": "DUP1"
    },
    "4169": {
      "op": "REVERT"
    },
    "4170": {
      "op": "JUMPDEST"
    },
    "4171": {
      "op": "SWAP2"
    },
    "4172": {
      "op": "SWAP1"
    },
    "4173": {
      "op": "POP"
    },
    "4174": {
      "jump": "o",
      "op": "JUMP"
    },
    "4175": {
      "op": "JUMPDEST"
    },
    "4176": {
      "op": "DUP1"
    },
    "4177": {
      "op": "CALLDATALOAD"
    },
    "4178": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4187": {
      "op": "DUP2"
    },
    "4188": {
      "op": "AND"
    },
    "4189": {
      "op": "DUP2"
    },
    "4190": {
      "op": "EQ"
    },
    "4191": {
      "op": "PUSH2",
      "value": "0x104A"
    },
    "4194": {
      "op": "JUMPI"
    },
    "4195": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4197": {
      "op": "DUP1"
    },
    "4198": {
      "op": "REVERT"
    },
    "4199": {
      "op": "JUMPDEST"
    },
    "4200": {
      "op": "DUP1"
    },
    "4201": {
      "op": "ISZERO"
    },
    "4202": {
      "op": "ISZERO"
    },
    "4203": {
      "op": "DUP2"
    },
    "4204": {
      "op": "EQ"
    },
    "4205": {
      "op": "PUSH2",
      "value": "0xD1E"
    },
    "4208": {
      "op": "JUMPI"
    },
    "4209": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4211": {
      "op": "DUP1"
    },
    "4212": {
      "op": "REVERT"
    },
    "4213": {
      "op": "JUMPDEST"
    },
    "4214": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4216": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4218": {
      "op": "DUP3"
    },
    "4219": {
      "op": "DUP5"
    },
    "4220": {
      "op": "SUB"
    },
    "4221": {
      "op": "SLT"
    },
    "4222": {
      "op": "ISZERO"
    },
    "4223": {
      "op": "PUSH2",
      "value": "0x1087"
    },
    "4226": {
      "op": "JUMPI"
    },
    "4227": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4229": {
      "op": "DUP1"
    },
    "4230": {
      "op": "REVERT"
    },
    "4231": {
      "op": "JUMPDEST"
    },
    "4232": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4234": {
      "op": "MLOAD"
    },
    "4235": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4237": {
      "op": "DUP2"
    },
    "4238": {
      "op": "ADD"
    },
    "4239": {
      "op": "DUP2"
    },
    "4240": {
      "op": "DUP2"
    },
    "4241": {
      "op": "LT"
    },
    "4242": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4251": {
      "op": "DUP3"
    },
    "4252": {
      "op": "GT"
    },
    "4253": {
      "op": "OR"
    },
    "4254": {
      "op": "ISZERO"
    },
    "4255": {
      "op": "PUSH2",
      "value": "0x10AA"
    },
    "4258": {
      "op": "JUMPI"
    },
    "4259": {
      "op": "PUSH2",
      "value": "0x10AA"
    },
    "4262": {
      "op": "PUSH2",
      "value": "0x1020"
    },
    "4265": {
      "jump": "i",
      "op": "JUMP"
    },
    "4266": {
      "op": "JUMPDEST"
    },
    "4267": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4269": {
      "op": "MSTORE"
    },
    "4270": {
      "op": "SWAP1"
    },
    "4271": {
      "op": "POP"
    },
    "4272": {
      "op": "DUP1"
    },
    "4273": {
      "op": "PUSH2",
      "value": "0x10B9"
    },
    "4276": {
      "op": "DUP4"
    },
    "4277": {
      "op": "PUSH2",
      "value": "0x1036"
    },
    "4280": {
      "jump": "i",
      "op": "JUMP"
    },
    "4281": {
      "op": "JUMPDEST"
    },
    "4282": {
      "op": "DUP2"
    },
    "4283": {
      "op": "MSTORE"
    },
    "4284": {
      "op": "PUSH2",
      "value": "0x10C7"
    },
    "4287": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4289": {
      "op": "DUP5"
    },
    "4290": {
      "op": "ADD"
    },
    "4291": {
      "op": "PUSH2",
      "value": "0x104F"
    },
    "4294": {
      "jump": "i",
      "op": "JUMP"
    },
    "4295": {
      "op": "JUMPDEST"
    },
    "4296": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4298": {
      "op": "DUP3"
    },
    "4299": {
      "op": "ADD"
    },
    "4300": {
      "op": "MSTORE"
    },
    "4301": {
      "op": "PUSH2",
      "value": "0x10D8"
    },
    "4304": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4306": {
      "op": "DUP5"
    },
    "4307": {
      "op": "ADD"
    },
    "4308": {
      "op": "PUSH2",
      "value": "0x104F"
    },
    "4311": {
      "jump": "i",
      "op": "JUMP"
    },
    "4312": {
      "op": "JUMPDEST"
    },
    "4313": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4315": {
      "op": "DUP3"
    },
    "4316": {
      "op": "ADD"
    },
    "4317": {
      "op": "MSTORE"
    },
    "4318": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4320": {
      "op": "DUP4"
    },
    "4321": {
      "op": "ADD"
    },
    "4322": {
      "op": "CALLDATALOAD"
    },
    "4323": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4325": {
      "op": "DUP3"
    },
    "4326": {
      "op": "ADD"
    },
    "4327": {
      "op": "MSTORE"
    },
    "4328": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4330": {
      "op": "DUP4"
    },
    "4331": {
      "op": "ADD"
    },
    "4332": {
      "op": "CALLDATALOAD"
    },
    "4333": {
      "op": "PUSH2",
      "value": "0x10F5"
    },
    "4336": {
      "op": "DUP2"
    },
    "4337": {
      "op": "PUSH2",
      "value": "0x1067"
    },
    "4340": {
      "jump": "i",
      "op": "JUMP"
    },
    "4341": {
      "op": "JUMPDEST"
    },
    "4342": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4344": {
      "op": "SWAP2"
    },
    "4345": {
      "op": "SWAP1"
    },
    "4346": {
      "op": "SWAP2"
    },
    "4347": {
      "op": "ADD"
    },
    "4348": {
      "op": "MSTORE"
    },
    "4349": {
      "op": "SWAP3"
    },
    "4350": {
      "op": "SWAP2"
    },
    "4351": {
      "op": "POP"
    },
    "4352": {
      "op": "POP"
    },
    "4353": {
      "jump": "o",
      "op": "JUMP"
    },
    "4354": {
      "op": "JUMPDEST"
    },
    "4355": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4357": {
      "op": "DUP1"
    },
    "4358": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4360": {
      "op": "DUP1"
    },
    "4361": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4363": {
      "op": "DUP1"
    },
    "4364": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4366": {
      "op": "DUP1"
    },
    "4367": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "4370": {
      "op": "DUP10"
    },
    "4371": {
      "op": "DUP12"
    },
    "4372": {
      "op": "SUB"
    },
    "4373": {
      "op": "SLT"
    },
    "4374": {
      "op": "ISZERO"
    },
    "4375": {
      "op": "PUSH2",
      "value": "0x111F"
    },
    "4378": {
      "op": "JUMPI"
    },
    "4379": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4381": {
      "op": "DUP1"
    },
    "4382": {
      "op": "REVERT"
    },
    "4383": {
      "op": "JUMPDEST"
    },
    "4384": {
      "op": "DUP9"
    },
    "4385": {
      "op": "CALLDATALOAD"
    },
    "4386": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4395": {
      "op": "DUP1"
    },
    "4396": {
      "op": "DUP3"
    },
    "4397": {
      "op": "GT"
    },
    "4398": {
      "op": "ISZERO"
    },
    "4399": {
      "op": "PUSH2",
      "value": "0x1137"
    },
    "4402": {
      "op": "JUMPI"
    },
    "4403": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4405": {
      "op": "DUP1"
    },
    "4406": {
      "op": "REVERT"
    },
    "4407": {
      "op": "JUMPDEST"
    },
    "4408": {
      "op": "PUSH2",
      "value": "0x1143"
    },
    "4411": {
      "op": "DUP13"
    },
    "4412": {
      "op": "DUP4"
    },
    "4413": {
      "op": "DUP14"
    },
    "4414": {
      "op": "ADD"
    },
    "4415": {
      "op": "PUSH2",
      "value": "0xFD7"
    },
    "4418": {
      "jump": "i",
      "op": "JUMP"
    },
    "4419": {
      "op": "JUMPDEST"
    },
    "4420": {
      "op": "SWAP1"
    },
    "4421": {
      "op": "SWAP11"
    },
    "4422": {
      "op": "POP"
    },
    "4423": {
      "op": "SWAP9"
    },
    "4424": {
      "op": "POP"
    },
    "4425": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4427": {
      "op": "DUP12"
    },
    "4428": {
      "op": "ADD"
    },
    "4429": {
      "op": "CALLDATALOAD"
    },
    "4430": {
      "op": "SWAP2"
    },
    "4431": {
      "op": "POP"
    },
    "4432": {
      "op": "DUP1"
    },
    "4433": {
      "op": "DUP3"
    },
    "4434": {
      "op": "GT"
    },
    "4435": {
      "op": "ISZERO"
    },
    "4436": {
      "op": "PUSH2",
      "value": "0x115C"
    },
    "4439": {
      "op": "JUMPI"
    },
    "4440": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4442": {
      "op": "DUP1"
    },
    "4443": {
      "op": "REVERT"
    },
    "4444": {
      "op": "JUMPDEST"
    },
    "4445": {
      "op": "DUP2"
    },
    "4446": {
      "op": "DUP12"
    },
    "4447": {
      "op": "ADD"
    },
    "4448": {
      "op": "SWAP2"
    },
    "4449": {
      "op": "POP"
    },
    "4450": {
      "op": "DUP12"
    },
    "4451": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4453": {
      "op": "DUP4"
    },
    "4454": {
      "op": "ADD"
    },
    "4455": {
      "op": "SLT"
    },
    "4456": {
      "op": "PUSH2",
      "value": "0x1170"
    },
    "4459": {
      "op": "JUMPI"
    },
    "4460": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4462": {
      "op": "DUP1"
    },
    "4463": {
      "op": "REVERT"
    },
    "4464": {
      "op": "JUMPDEST"
    },
    "4465": {
      "op": "DUP2"
    },
    "4466": {
      "op": "CALLDATALOAD"
    },
    "4467": {
      "op": "DUP2"
    },
    "4468": {
      "op": "DUP2"
    },
    "4469": {
      "op": "GT"
    },
    "4470": {
      "op": "ISZERO"
    },
    "4471": {
      "op": "PUSH2",
      "value": "0x117F"
    },
    "4474": {
      "op": "JUMPI"
    },
    "4475": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4477": {
      "op": "DUP1"
    },
    "4478": {
      "op": "REVERT"
    },
    "4479": {
      "op": "JUMPDEST"
    },
    "4480": {
      "op": "DUP13"
    },
    "4481": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4483": {
      "op": "DUP3"
    },
    "4484": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "4486": {
      "op": "SHL"
    },
    "4487": {
      "op": "DUP6"
    },
    "4488": {
      "op": "ADD"
    },
    "4489": {
      "op": "ADD"
    },
    "4490": {
      "op": "GT"
    },
    "4491": {
      "op": "ISZERO"
    },
    "4492": {
      "op": "PUSH2",
      "value": "0x1194"
    },
    "4495": {
      "op": "JUMPI"
    },
    "4496": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4498": {
      "op": "DUP1"
    },
    "4499": {
      "op": "REVERT"
    },
    "4500": {
      "op": "JUMPDEST"
    },
    "4501": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4503": {
      "op": "DUP4"
    },
    "4504": {
      "op": "ADD"
    },
    "4505": {
      "op": "SWAP9"
    },
    "4506": {
      "op": "POP"
    },
    "4507": {
      "op": "DUP1"
    },
    "4508": {
      "op": "SWAP8"
    },
    "4509": {
      "op": "POP"
    },
    "4510": {
      "op": "POP"
    },
    "4511": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4513": {
      "op": "DUP12"
    },
    "4514": {
      "op": "ADD"
    },
    "4515": {
      "op": "CALLDATALOAD"
    },
    "4516": {
      "op": "SWAP2"
    },
    "4517": {
      "op": "POP"
    },
    "4518": {
      "op": "DUP1"
    },
    "4519": {
      "op": "DUP3"
    },
    "4520": {
      "op": "GT"
    },
    "4521": {
      "op": "ISZERO"
    },
    "4522": {
      "op": "PUSH2",
      "value": "0x11B2"
    },
    "4525": {
      "op": "JUMPI"
    },
    "4526": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4528": {
      "op": "DUP1"
    },
    "4529": {
      "op": "REVERT"
    },
    "4530": {
      "op": "JUMPDEST"
    },
    "4531": {
      "op": "POP"
    },
    "4532": {
      "op": "PUSH2",
      "value": "0x11BF"
    },
    "4535": {
      "op": "DUP12"
    },
    "4536": {
      "op": "DUP3"
    },
    "4537": {
      "op": "DUP13"
    },
    "4538": {
      "op": "ADD"
    },
    "4539": {
      "op": "PUSH2",
      "value": "0xFD7"
    },
    "4542": {
      "jump": "i",
      "op": "JUMP"
    },
    "4543": {
      "op": "JUMPDEST"
    },
    "4544": {
      "op": "SWAP1"
    },
    "4545": {
      "op": "SWAP6"
    },
    "4546": {
      "op": "POP"
    },
    "4547": {
      "op": "SWAP4"
    },
    "4548": {
      "op": "POP"
    },
    "4549": {
      "op": "POP"
    },
    "4550": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4552": {
      "op": "DUP10"
    },
    "4553": {
      "op": "ADD"
    },
    "4554": {
      "op": "CALLDATALOAD"
    },
    "4555": {
      "op": "SWAP2"
    },
    "4556": {
      "op": "POP"
    },
    "4557": {
      "op": "PUSH2",
      "value": "0x11D9"
    },
    "4560": {
      "op": "DUP11"
    },
    "4561": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4563": {
      "op": "DUP12"
    },
    "4564": {
      "op": "ADD"
    },
    "4565": {
      "op": "PUSH2",
      "value": "0x1075"
    },
    "4568": {
      "jump": "i",
      "op": "JUMP"
    },
    "4569": {
      "op": "JUMPDEST"
    },
    "4570": {
      "op": "SWAP1"
    },
    "4571": {
      "op": "POP"
    },
    "4572": {
      "op": "SWAP3"
    },
    "4573": {
      "op": "SWAP6"
    },
    "4574": {
      "op": "SWAP9"
    },
    "4575": {
      "op": "POP"
    },
    "4576": {
      "op": "SWAP3"
    },
    "4577": {
      "op": "SWAP6"
    },
    "4578": {
      "op": "SWAP9"
    },
    "4579": {
      "op": "SWAP1"
    },
    "4580": {
      "op": "SWAP4"
    },
    "4581": {
      "op": "SWAP7"
    },
    "4582": {
      "op": "POP"
    },
    "4583": {
      "jump": "o",
      "op": "JUMP"
    },
    "4584": {
      "op": "JUMPDEST"
    },
    "4585": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4587": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4589": {
      "op": "DUP1"
    },
    "4590": {
      "op": "DUP4"
    },
    "4591": {
      "op": "ADD"
    },
    "4592": {
      "op": "DUP2"
    },
    "4593": {
      "op": "DUP5"
    },
    "4594": {
      "op": "MSTORE"
    },
    "4595": {
      "op": "DUP1"
    },
    "4596": {
      "op": "DUP6"
    },
    "4597": {
      "op": "MLOAD"
    },
    "4598": {
      "op": "DUP1"
    },
    "4599": {
      "op": "DUP4"
    },
    "4600": {
      "op": "MSTORE"
    },
    "4601": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4603": {
      "op": "DUP7"
    },
    "4604": {
      "op": "ADD"
    },
    "4605": {
      "op": "SWAP2"
    },
    "4606": {
      "op": "POP"
    },
    "4607": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4609": {
      "op": "DUP2"
    },
    "4610": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "4612": {
      "op": "SHL"
    },
    "4613": {
      "op": "DUP8"
    },
    "4614": {
      "op": "ADD"
    },
    "4615": {
      "op": "ADD"
    },
    "4616": {
      "op": "SWAP3"
    },
    "4617": {
      "op": "POP"
    },
    "4618": {
      "op": "DUP4"
    },
    "4619": {
      "op": "DUP8"
    },
    "4620": {
      "op": "ADD"
    },
    "4621": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4623": {
      "op": "JUMPDEST"
    },
    "4624": {
      "op": "DUP3"
    },
    "4625": {
      "op": "DUP2"
    },
    "4626": {
      "op": "LT"
    },
    "4627": {
      "op": "ISZERO"
    },
    "4628": {
      "op": "PUSH2",
      "value": "0x123D"
    },
    "4631": {
      "op": "JUMPI"
    },
    "4632": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "4634": {
      "op": "NOT"
    },
    "4635": {
      "op": "DUP9"
    },
    "4636": {
      "op": "DUP7"
    },
    "4637": {
      "op": "SUB"
    },
    "4638": {
      "op": "ADD"
    },
    "4639": {
      "op": "DUP5"
    },
    "4640": {
      "op": "MSTORE"
    },
    "4641": {
      "op": "PUSH2",
      "value": "0x122B"
    },
    "4644": {
      "op": "DUP6"
    },
    "4645": {
      "op": "DUP4"
    },
    "4646": {
      "op": "MLOAD"
    },
    "4647": {
      "op": "PUSH2",
      "value": "0xF40"
    },
    "4650": {
      "jump": "i",
      "op": "JUMP"
    },
    "4651": {
      "op": "JUMPDEST"
    },
    "4652": {
      "op": "SWAP5"
    },
    "4653": {
      "op": "POP"
    },
    "4654": {
      "op": "SWAP3"
    },
    "4655": {
      "op": "DUP6"
    },
    "4656": {
      "op": "ADD"
    },
    "4657": {
      "op": "SWAP3"
    },
    "4658": {
      "op": "SWAP1"
    },
    "4659": {
      "op": "DUP6"
    },
    "4660": {
      "op": "ADD"
    },
    "4661": {
      "op": "SWAP1"
    },
    "4662": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4664": {
      "op": "ADD"
    },
    "4665": {
      "op": "PUSH2",
      "value": "0x120F"
    },
    "4668": {
      "op": "JUMP"
    },
    "4669": {
      "op": "JUMPDEST"
    },
    "4670": {
      "op": "POP"
    },
    "4671": {
      "op": "SWAP3"
    },
    "4672": {
      "op": "SWAP8"
    },
    "4673": {
      "op": "SWAP7"
    },
    "4674": {
      "op": "POP"
    },
    "4675": {
      "op": "POP"
    },
    "4676": {
      "op": "POP"
    },
    "4677": {
      "op": "POP"
    },
    "4678": {
      "op": "POP"
    },
    "4679": {
      "op": "POP"
    },
    "4680": {
      "op": "POP"
    },
    "4681": {
      "jump": "o",
      "op": "JUMP"
    },
    "4682": {
      "op": "JUMPDEST"
    },
    "4683": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4685": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4687": {
      "op": "DUP3"
    },
    "4688": {
      "op": "DUP5"
    },
    "4689": {
      "op": "SUB"
    },
    "4690": {
      "op": "SLT"
    },
    "4691": {
      "op": "ISZERO"
    },
    "4692": {
      "op": "PUSH2",
      "value": "0x125C"
    },
    "4695": {
      "op": "JUMPI"
    },
    "4696": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4698": {
      "op": "DUP1"
    },
    "4699": {
      "op": "REVERT"
    },
    "4700": {
      "op": "JUMPDEST"
    },
    "4701": {
      "op": "DUP2"
    },
    "4702": {
      "op": "CALLDATALOAD"
    },
    "4703": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4705": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4707": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4709": {
      "op": "SHL"
    },
    "4710": {
      "op": "SUB"
    },
    "4711": {
      "op": "DUP2"
    },
    "4712": {
      "op": "AND"
    },
    "4713": {
      "op": "DUP2"
    },
    "4714": {
      "op": "EQ"
    },
    "4715": {
      "op": "PUSH2",
      "value": "0xF99"
    },
    "4718": {
      "op": "JUMPI"
    },
    "4719": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4721": {
      "op": "DUP1"
    },
    "4722": {
      "op": "REVERT"
    },
    "4723": {
      "op": "JUMPDEST"
    },
    "4724": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4726": {
      "op": "DUP1"
    },
    "4727": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4729": {
      "op": "DUP1"
    },
    "4730": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4732": {
      "op": "DUP1"
    },
    "4733": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4735": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4737": {
      "op": "DUP9"
    },
    "4738": {
      "op": "DUP11"
    },
    "4739": {
      "op": "SUB"
    },
    "4740": {
      "op": "SLT"
    },
    "4741": {
      "op": "ISZERO"
    },
    "4742": {
      "op": "PUSH2",
      "value": "0x128E"
    },
    "4745": {
      "op": "JUMPI"
    },
    "4746": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4748": {
      "op": "DUP1"
    },
    "4749": {
      "op": "REVERT"
    },
    "4750": {
      "op": "JUMPDEST"
    },
    "4751": {
      "op": "DUP8"
    },
    "4752": {
      "op": "CALLDATALOAD"
    },
    "4753": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4762": {
      "op": "DUP1"
    },
    "4763": {
      "op": "DUP3"
    },
    "4764": {
      "op": "GT"
    },
    "4765": {
      "op": "ISZERO"
    },
    "4766": {
      "op": "PUSH2",
      "value": "0x12A6"
    },
    "4769": {
      "op": "JUMPI"
    },
    "4770": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4772": {
      "op": "DUP1"
    },
    "4773": {
      "op": "REVERT"
    },
    "4774": {
      "op": "JUMPDEST"
    },
    "4775": {
      "op": "PUSH2",
      "value": "0x12B2"
    },
    "4778": {
      "op": "DUP12"
    },
    "4779": {
      "op": "DUP4"
    },
    "4780": {
      "op": "DUP13"
    },
    "4781": {
      "op": "ADD"
    },
    "4782": {
      "op": "PUSH2",
      "value": "0xFD7"
    },
    "4785": {
      "jump": "i",
      "op": "JUMP"
    },
    "4786": {
      "op": "JUMPDEST"
    },
    "4787": {
      "op": "SWAP1"
    },
    "4788": {
      "op": "SWAP10"
    },
    "4789": {
      "op": "POP"
    },
    "4790": {
      "op": "SWAP8"
    },
    "4791": {
      "op": "POP"
    },
    "4792": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4794": {
      "op": "DUP11"
    },
    "4795": {
      "op": "ADD"
    },
    "4796": {
      "op": "CALLDATALOAD"
    },
    "4797": {
      "op": "SWAP2"
    },
    "4798": {
      "op": "POP"
    },
    "4799": {
      "op": "DUP1"
    },
    "4800": {
      "op": "DUP3"
    },
    "4801": {
      "op": "GT"
    },
    "4802": {
      "op": "ISZERO"
    },
    "4803": {
      "op": "PUSH2",
      "value": "0x12CB"
    },
    "4806": {
      "op": "JUMPI"
    },
    "4807": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4809": {
      "op": "DUP1"
    },
    "4810": {
      "op": "REVERT"
    },
    "4811": {
      "op": "JUMPDEST"
    },
    "4812": {
      "op": "PUSH2",
      "value": "0x12D7"
    },
    "4815": {
      "op": "DUP12"
    },
    "4816": {
      "op": "DUP4"
    },
    "4817": {
      "op": "DUP13"
    },
    "4818": {
      "op": "ADD"
    },
    "4819": {
      "op": "PUSH2",
      "value": "0xFD7"
    },
    "4822": {
      "jump": "i",
      "op": "JUMP"
    },
    "4823": {
      "op": "JUMPDEST"
    },
    "4824": {
      "op": "SWAP1"
    },
    "4825": {
      "op": "SWAP8"
    },
    "4826": {
      "op": "POP"
    },
    "4827": {
      "op": "SWAP6"
    },
    "4828": {
      "op": "POP"
    },
    "4829": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4831": {
      "op": "DUP11"
    },
    "4832": {
      "op": "ADD"
    },
    "4833": {
      "op": "CALLDATALOAD"
    },
    "4834": {
      "op": "SWAP2"
    },
    "4835": {
      "op": "POP"
    },
    "4836": {
      "op": "DUP1"
    },
    "4837": {
      "op": "DUP3"
    },
    "4838": {
      "op": "GT"
    },
    "4839": {
      "op": "ISZERO"
    },
    "4840": {
      "op": "PUSH2",
      "value": "0x12F0"
    },
    "4843": {
      "op": "JUMPI"
    },
    "4844": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4846": {
      "op": "DUP1"
    },
    "4847": {
      "op": "REVERT"
    },
    "4848": {
      "op": "JUMPDEST"
    },
    "4849": {
      "op": "POP"
    },
    "4850": {
      "op": "PUSH2",
      "value": "0x12FD"
    },
    "4853": {
      "op": "DUP11"
    },
    "4854": {
      "op": "DUP3"
    },
    "4855": {
      "op": "DUP12"
    },
    "4856": {
      "op": "ADD"
    },
    "4857": {
      "op": "PUSH2",
      "value": "0xFD7"
    },
    "4860": {
      "jump": "i",
      "op": "JUMP"
    },
    "4861": {
      "op": "JUMPDEST"
    },
    "4862": {
      "op": "SWAP9"
    },
    "4863": {
      "op": "SWAP12"
    },
    "4864": {
      "op": "SWAP8"
    },
    "4865": {
      "op": "SWAP11"
    },
    "4866": {
      "op": "POP"
    },
    "4867": {
      "op": "SWAP6"
    },
    "4868": {
      "op": "SWAP9"
    },
    "4869": {
      "op": "SWAP5"
    },
    "4870": {
      "op": "SWAP8"
    },
    "4871": {
      "op": "SWAP6"
    },
    "4872": {
      "op": "SWAP7"
    },
    "4873": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4875": {
      "op": "SWAP1"
    },
    "4876": {
      "op": "SWAP6"
    },
    "4877": {
      "op": "ADD"
    },
    "4878": {
      "op": "CALLDATALOAD"
    },
    "4879": {
      "op": "SWAP5"
    },
    "4880": {
      "op": "SWAP4"
    },
    "4881": {
      "op": "POP"
    },
    "4882": {
      "op": "POP"
    },
    "4883": {
      "op": "POP"
    },
    "4884": {
      "op": "POP"
    },
    "4885": {
      "jump": "o",
      "op": "JUMP"
    },
    "4886": {
      "op": "JUMPDEST"
    },
    "4887": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4889": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4891": {
      "op": "DUP3"
    },
    "4892": {
      "op": "DUP5"
    },
    "4893": {
      "op": "SUB"
    },
    "4894": {
      "op": "SLT"
    },
    "4895": {
      "op": "ISZERO"
    },
    "4896": {
      "op": "PUSH2",
      "value": "0x1328"
    },
    "4899": {
      "op": "JUMPI"
    },
    "4900": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4902": {
      "op": "DUP1"
    },
    "4903": {
      "op": "REVERT"
    },
    "4904": {
      "op": "JUMPDEST"
    },
    "4905": {
      "op": "DUP3"
    },
    "4906": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4908": {
      "op": "DUP4"
    },
    "4909": {
      "op": "ADD"
    },
    "4910": {
      "op": "SLT"
    },
    "4911": {
      "op": "PUSH2",
      "value": "0x1337"
    },
    "4914": {
      "op": "JUMPI"
    },
    "4915": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4917": {
      "op": "DUP1"
    },
    "4918": {
      "op": "REVERT"
    },
    "4919": {
      "op": "JUMPDEST"
    },
    "4920": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4922": {
      "op": "MLOAD"
    },
    "4923": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4925": {
      "op": "DUP2"
    },
    "4926": {
      "op": "ADD"
    },
    "4927": {
      "op": "DUP2"
    },
    "4928": {
      "op": "DUP2"
    },
    "4929": {
      "op": "LT"
    },
    "4930": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4939": {
      "op": "DUP3"
    },
    "4940": {
      "op": "GT"
    },
    "4941": {
      "op": "OR"
    },
    "4942": {
      "op": "ISZERO"
    },
    "4943": {
      "op": "PUSH2",
      "value": "0x135A"
    },
    "4946": {
      "op": "JUMPI"
    },
    "4947": {
      "op": "PUSH2",
      "value": "0x135A"
    },
    "4950": {
      "op": "PUSH2",
      "value": "0x1020"
    },
    "4953": {
      "jump": "i",
      "op": "JUMP"
    },
    "4954": {
      "op": "JUMPDEST"
    },
    "4955": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4957": {
      "op": "MSTORE"
    },
    "4958": {
      "op": "DUP1"
    },
    "4959": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4961": {
      "op": "DUP5"
    },
    "4962": {
      "op": "ADD"
    },
    "4963": {
      "op": "DUP6"
    },
    "4964": {
      "op": "DUP2"
    },
    "4965": {
      "op": "GT"
    },
    "4966": {
      "op": "ISZERO"
    },
    "4967": {
      "op": "PUSH2",
      "value": "0x136F"
    },
    "4970": {
      "op": "JUMPI"
    },
    "4971": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4973": {
      "op": "DUP1"
    },
    "4974": {
      "op": "REVERT"
    },
    "4975": {
      "op": "JUMPDEST"
    },
    "4976": {
      "op": "DUP5"
    },
    "4977": {
      "op": "JUMPDEST"
    },
    "4978": {
      "op": "DUP2"
    },
    "4979": {
      "op": "DUP2"
    },
    "4980": {
      "op": "LT"
    },
    "4981": {
      "op": "ISZERO"
    },
    "4982": {
      "op": "PUSH2",
      "value": "0x1390"
    },
    "4985": {
      "op": "JUMPI"
    },
    "4986": {
      "op": "PUSH2",
      "value": "0x1382"
    },
    "4989": {
      "op": "DUP2"
    },
    "4990": {
      "op": "PUSH2",
      "value": "0x1036"
    },
    "4993": {
      "jump": "i",
      "op": "JUMP"
    },
    "4994": {
      "op": "JUMPDEST"
    },
    "4995": {
      "op": "DUP4"
    },
    "4996": {
      "op": "MSTORE"
    },
    "4997": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4999": {
      "op": "SWAP3"
    },
    "5000": {
      "op": "DUP4"
    },
    "5001": {
      "op": "ADD"
    },
    "5002": {
      "op": "SWAP3"
    },
    "5003": {
      "op": "ADD"
    },
    "5004": {
      "op": "PUSH2",
      "value": "0x1371"
    },
    "5007": {
      "op": "JUMP"
    },
    "5008": {
      "op": "JUMPDEST"
    },
    "5009": {
      "op": "POP"
    },
    "5010": {
      "op": "SWAP2"
    },
    "5011": {
      "op": "SWAP6"
    },
    "5012": {
      "op": "SWAP5"
    },
    "5013": {
      "op": "POP"
    },
    "5014": {
      "op": "POP"
    },
    "5015": {
      "op": "POP"
    },
    "5016": {
      "op": "POP"
    },
    "5017": {
      "op": "POP"
    },
    "5018": {
      "jump": "o",
      "op": "JUMP"
    },
    "5019": {
      "op": "JUMPDEST"
    },
    "5020": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5025": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5027": {
      "op": "SHL"
    },
    "5028": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5030": {
      "op": "MSTORE"
    },
    "5031": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "5033": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5035": {
      "op": "MSTORE"
    },
    "5036": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5038": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5040": {
      "op": "REVERT"
    },
    "5041": {
      "op": "JUMPDEST"
    },
    "5042": {
      "op": "DUP1"
    },
    "5043": {
      "op": "DUP3"
    },
    "5044": {
      "op": "ADD"
    },
    "5045": {
      "op": "DUP1"
    },
    "5046": {
      "op": "DUP3"
    },
    "5047": {
      "op": "GT"
    },
    "5048": {
      "op": "ISZERO"
    },
    "5049": {
      "op": "PUSH2",
      "value": "0xC52"
    },
    "5052": {
      "op": "JUMPI"
    },
    "5053": {
      "op": "PUSH2",
      "value": "0xC52"
    },
    "5056": {
      "op": "PUSH2",
      "value": "0x139B"
    },
    "5059": {
      "jump": "i",
      "op": "JUMP"
    },
    "5060": {
      "op": "JUMPDEST"
    },
    "5061": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5063": {
      "op": "DUP2"
    },
    "5064": {
      "op": "DUP2"
    },
    "5065": {
      "op": "SHR"
    },
    "5066": {
      "op": "SWAP1"
    },
    "5067": {
      "op": "DUP3"
    },
    "5068": {
      "op": "AND"
    },
    "5069": {
      "op": "DUP1"
    },
    "5070": {
      "op": "PUSH2",
      "value": "0x13D8"
    },
    "5073": {
      "op": "JUMPI"
    },
    "5074": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "5076": {
      "op": "DUP3"
    },
    "5077": {
      "op": "AND"
    },
    "5078": {
      "op": "SWAP2"
    },
    "5079": {
      "op": "POP"
    },
    "5080": {
      "op": "JUMPDEST"
    },
    "5081": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5083": {
      "op": "DUP3"
    },
    "5084": {
      "op": "LT"
    },
    "5085": {
      "op": "DUP2"
    },
    "5086": {
      "op": "SUB"
    },
    "5087": {
      "op": "PUSH2",
      "value": "0x13F8"
    },
    "5090": {
      "op": "JUMPI"
    },
    "5091": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5096": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5098": {
      "op": "SHL"
    },
    "5099": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5101": {
      "op": "MSTORE"
    },
    "5102": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "5104": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5106": {
      "op": "MSTORE"
    },
    "5107": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5109": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5111": {
      "op": "REVERT"
    },
    "5112": {
      "op": "JUMPDEST"
    },
    "5113": {
      "op": "POP"
    },
    "5114": {
      "op": "SWAP2"
    },
    "5115": {
      "op": "SWAP1"
    },
    "5116": {
      "op": "POP"
    },
    "5117": {
      "jump": "o",
      "op": "JUMP"
    },
    "5118": {
      "op": "JUMPDEST"
    },
    "5119": {
      "op": "DUP1"
    },
    "5120": {
      "op": "DUP3"
    },
    "5121": {
      "op": "MUL"
    },
    "5122": {
      "op": "DUP2"
    },
    "5123": {
      "op": "ISZERO"
    },
    "5124": {
      "op": "DUP3"
    },
    "5125": {
      "op": "DUP3"
    },
    "5126": {
      "op": "DIV"
    },
    "5127": {
      "op": "DUP5"
    },
    "5128": {
      "op": "EQ"
    },
    "5129": {
      "op": "OR"
    },
    "5130": {
      "op": "PUSH2",
      "value": "0xC52"
    },
    "5133": {
      "op": "JUMPI"
    },
    "5134": {
      "op": "PUSH2",
      "value": "0xC52"
    },
    "5137": {
      "op": "PUSH2",
      "value": "0x139B"
    },
    "5140": {
      "jump": "i",
      "op": "JUMP"
    },
    "5141": {
      "op": "JUMPDEST"
    },
    "5142": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5144": {
      "op": "DUP3"
    },
    "5145": {
      "op": "PUSH2",
      "value": "0x1432"
    },
    "5148": {
      "op": "JUMPI"
    },
    "5149": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5154": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5156": {
      "op": "SHL"
    },
    "5157": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5159": {
      "op": "MSTORE"
    },
    "5160": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "5162": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5164": {
      "op": "MSTORE"
    },
    "5165": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5167": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5169": {
      "op": "REVERT"
    },
    "5170": {
      "op": "JUMPDEST"
    },
    "5171": {
      "op": "POP"
    },
    "5172": {
      "op": "DIV"
    },
    "5173": {
      "op": "SWAP1"
    },
    "5174": {
      "jump": "o",
      "op": "JUMP"
    },
    "5175": {
      "op": "JUMPDEST"
    },
    "5176": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5178": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5180": {
      "op": "DUP3"
    },
    "5181": {
      "op": "DUP5"
    },
    "5182": {
      "op": "SUB"
    },
    "5183": {
      "op": "SLT"
    },
    "5184": {
      "op": "ISZERO"
    },
    "5185": {
      "op": "PUSH2",
      "value": "0x1449"
    },
    "5188": {
      "op": "JUMPI"
    },
    "5189": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5191": {
      "op": "DUP1"
    },
    "5192": {
      "op": "REVERT"
    },
    "5193": {
      "op": "JUMPDEST"
    },
    "5194": {
      "op": "POP"
    },
    "5195": {
      "op": "MLOAD"
    },
    "5196": {
      "op": "SWAP2"
    },
    "5197": {
      "op": "SWAP1"
    },
    "5198": {
      "op": "POP"
    },
    "5199": {
      "jump": "o",
      "op": "JUMP"
    },
    "5200": {
      "op": "JUMPDEST"
    },
    "5201": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5203": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5205": {
      "op": "DUP3"
    },
    "5206": {
      "op": "DUP5"
    },
    "5207": {
      "op": "SUB"
    },
    "5208": {
      "op": "SLT"
    },
    "5209": {
      "op": "ISZERO"
    },
    "5210": {
      "op": "PUSH2",
      "value": "0x1462"
    },
    "5213": {
      "op": "JUMPI"
    },
    "5214": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5216": {
      "op": "DUP1"
    },
    "5217": {
      "op": "REVERT"
    },
    "5218": {
      "op": "JUMPDEST"
    },
    "5219": {
      "op": "DUP2"
    },
    "5220": {
      "op": "MLOAD"
    },
    "5221": {
      "op": "PUSH2",
      "value": "0xF99"
    },
    "5224": {
      "op": "DUP2"
    },
    "5225": {
      "op": "PUSH2",
      "value": "0x1067"
    },
    "5228": {
      "jump": "i",
      "op": "JUMP"
    },
    "5229": {
      "op": "JUMPDEST"
    },
    "5230": {
      "op": "DUP2"
    },
    "5231": {
      "op": "DUP2"
    },
    "5232": {
      "op": "SUB"
    },
    "5233": {
      "op": "DUP2"
    },
    "5234": {
      "op": "DUP2"
    },
    "5235": {
      "op": "GT"
    },
    "5236": {
      "op": "ISZERO"
    },
    "5237": {
      "op": "PUSH2",
      "value": "0xC52"
    },
    "5240": {
      "op": "JUMPI"
    },
    "5241": {
      "op": "PUSH2",
      "value": "0xC52"
    },
    "5244": {
      "op": "PUSH2",
      "value": "0x139B"
    },
    "5247": {
      "jump": "i",
      "op": "JUMP"
    },
    "5248": {
      "op": "JUMPDEST"
    },
    "5249": {
      "op": "DUP2"
    },
    "5250": {
      "op": "DUP4"
    },
    "5251": {
      "op": "MSTORE"
    },
    "5252": {
      "op": "DUP2"
    },
    "5253": {
      "op": "DUP2"
    },
    "5254": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5256": {
      "op": "DUP6"
    },
    "5257": {
      "op": "ADD"
    },
    "5258": {
      "op": "CALLDATACOPY"
    },
    "5259": {
      "op": "POP"
    },
    "5260": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5262": {
      "op": "DUP3"
    },
    "5263": {
      "op": "DUP3"
    },
    "5264": {
      "op": "ADD"
    },
    "5265": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5267": {
      "op": "SWAP1"
    },
    "5268": {
      "op": "DUP2"
    },
    "5269": {
      "op": "ADD"
    },
    "5270": {
      "op": "SWAP2"
    },
    "5271": {
      "op": "SWAP1"
    },
    "5272": {
      "op": "SWAP2"
    },
    "5273": {
      "op": "MSTORE"
    },
    "5274": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5276": {
      "op": "SWAP1"
    },
    "5277": {
      "op": "SWAP2"
    },
    "5278": {
      "op": "ADD"
    },
    "5279": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5281": {
      "op": "NOT"
    },
    "5282": {
      "op": "AND"
    },
    "5283": {
      "op": "SWAP1"
    },
    "5284": {
      "op": "SWAP2"
    },
    "5285": {
      "op": "ADD"
    },
    "5286": {
      "op": "ADD"
    },
    "5287": {
      "op": "SWAP1"
    },
    "5288": {
      "jump": "o",
      "op": "JUMP"
    },
    "5289": {
      "op": "JUMPDEST"
    },
    "5290": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5292": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "5295": {
      "op": "DUP1"
    },
    "5296": {
      "op": "DUP4"
    },
    "5297": {
      "op": "MSTORE"
    },
    "5298": {
      "op": "PUSH2",
      "value": "0x14BE"
    },
    "5301": {
      "op": "DUP2"
    },
    "5302": {
      "op": "DUP5"
    },
    "5303": {
      "op": "ADD"
    },
    "5304": {
      "op": "DUP12"
    },
    "5305": {
      "op": "DUP14"
    },
    "5306": {
      "op": "PUSH2",
      "value": "0x1480"
    },
    "5309": {
      "jump": "i",
      "op": "JUMP"
    },
    "5310": {
      "op": "JUMPDEST"
    },
    "5311": {
      "op": "DUP4"
    },
    "5312": {
      "op": "DUP2"
    },
    "5313": {
      "op": "SUB"
    },
    "5314": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5316": {
      "op": "DUP6"
    },
    "5317": {
      "op": "DUP2"
    },
    "5318": {
      "op": "ADD"
    },
    "5319": {
      "op": "SWAP2"
    },
    "5320": {
      "op": "SWAP1"
    },
    "5321": {
      "op": "SWAP2"
    },
    "5322": {
      "op": "MSTORE"
    },
    "5323": {
      "op": "DUP10"
    },
    "5324": {
      "op": "DUP3"
    },
    "5325": {
      "op": "MSTORE"
    },
    "5326": {
      "op": "DUP11"
    },
    "5327": {
      "op": "SWAP3"
    },
    "5328": {
      "op": "POP"
    },
    "5329": {
      "op": "SWAP1"
    },
    "5330": {
      "op": "DUP2"
    },
    "5331": {
      "op": "ADD"
    },
    "5332": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5334": {
      "op": "JUMPDEST"
    },
    "5335": {
      "op": "DUP11"
    },
    "5336": {
      "op": "DUP2"
    },
    "5337": {
      "op": "LT"
    },
    "5338": {
      "op": "ISZERO"
    },
    "5339": {
      "op": "PUSH2",
      "value": "0x1503"
    },
    "5342": {
      "op": "JUMPI"
    },
    "5343": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5352": {
      "op": "PUSH2",
      "value": "0x14F0"
    },
    "5355": {
      "op": "DUP6"
    },
    "5356": {
      "op": "PUSH2",
      "value": "0x104F"
    },
    "5359": {
      "jump": "i",
      "op": "JUMP"
    },
    "5360": {
      "op": "JUMPDEST"
    },
    "5361": {
      "op": "AND"
    },
    "5362": {
      "op": "DUP3"
    },
    "5363": {
      "op": "MSTORE"
    },
    "5364": {
      "op": "SWAP3"
    },
    "5365": {
      "op": "DUP3"
    },
    "5366": {
      "op": "ADD"
    },
    "5367": {
      "op": "SWAP3"
    },
    "5368": {
      "op": "SWAP1"
    },
    "5369": {
      "op": "DUP3"
    },
    "5370": {
      "op": "ADD"
    },
    "5371": {
      "op": "SWAP1"
    },
    "5372": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5374": {
      "op": "ADD"
    },
    "5375": {
      "op": "PUSH2",
      "value": "0x14D6"
    },
    "5378": {
      "op": "JUMP"
    },
    "5379": {
      "op": "JUMPDEST"
    },
    "5380": {
      "op": "POP"
    },
    "5381": {
      "op": "DUP5"
    },
    "5382": {
      "op": "DUP2"
    },
    "5383": {
      "op": "SUB"
    },
    "5384": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5386": {
      "op": "DUP7"
    },
    "5387": {
      "op": "ADD"
    },
    "5388": {
      "op": "MSTORE"
    },
    "5389": {
      "op": "PUSH2",
      "value": "0x1517"
    },
    "5392": {
      "op": "DUP2"
    },
    "5393": {
      "op": "DUP10"
    },
    "5394": {
      "op": "DUP12"
    },
    "5395": {
      "op": "PUSH2",
      "value": "0x1480"
    },
    "5398": {
      "jump": "i",
      "op": "JUMP"
    },
    "5399": {
      "op": "JUMPDEST"
    },
    "5400": {
      "op": "SWAP4"
    },
    "5401": {
      "op": "POP"
    },
    "5402": {
      "op": "POP"
    },
    "5403": {
      "op": "DUP6"
    },
    "5404": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5406": {
      "op": "DUP6"
    },
    "5407": {
      "op": "ADD"
    },
    "5408": {
      "op": "MSTORE"
    },
    "5409": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "5414": {
      "op": "DUP6"
    },
    "5415": {
      "op": "MLOAD"
    },
    "5416": {
      "op": "AND"
    },
    "5417": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5419": {
      "op": "DUP6"
    },
    "5420": {
      "op": "ADD"
    },
    "5421": {
      "op": "MSTORE"
    },
    "5422": {
      "op": "DUP1"
    },
    "5423": {
      "op": "DUP6"
    },
    "5424": {
      "op": "ADD"
    },
    "5425": {
      "op": "MLOAD"
    },
    "5426": {
      "op": "SWAP2"
    },
    "5427": {
      "op": "POP"
    },
    "5428": {
      "op": "POP"
    },
    "5429": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5438": {
      "op": "DUP1"
    },
    "5439": {
      "op": "DUP3"
    },
    "5440": {
      "op": "AND"
    },
    "5441": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5443": {
      "op": "DUP6"
    },
    "5444": {
      "op": "ADD"
    },
    "5445": {
      "op": "MSTORE"
    },
    "5446": {
      "op": "DUP1"
    },
    "5447": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5449": {
      "op": "DUP7"
    },
    "5450": {
      "op": "ADD"
    },
    "5451": {
      "op": "MLOAD"
    },
    "5452": {
      "op": "AND"
    },
    "5453": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "5455": {
      "op": "DUP6"
    },
    "5456": {
      "op": "ADD"
    },
    "5457": {
      "op": "MSTORE"
    },
    "5458": {
      "op": "POP"
    },
    "5459": {
      "op": "POP"
    },
    "5460": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5462": {
      "op": "DUP4"
    },
    "5463": {
      "op": "ADD"
    },
    "5464": {
      "op": "MLOAD"
    },
    "5465": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5467": {
      "op": "DUP4"
    },
    "5468": {
      "op": "ADD"
    },
    "5469": {
      "op": "MSTORE"
    },
    "5470": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5472": {
      "op": "DUP4"
    },
    "5473": {
      "op": "ADD"
    },
    "5474": {
      "op": "MLOAD"
    },
    "5475": {
      "op": "ISZERO"
    },
    "5476": {
      "op": "ISZERO"
    },
    "5477": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "5480": {
      "op": "DUP4"
    },
    "5481": {
      "op": "ADD"
    },
    "5482": {
      "op": "MSTORE"
    },
    "5483": {
      "op": "SWAP10"
    },
    "5484": {
      "op": "SWAP9"
    },
    "5485": {
      "op": "POP"
    },
    "5486": {
      "op": "POP"
    },
    "5487": {
      "op": "POP"
    },
    "5488": {
      "op": "POP"
    },
    "5489": {
      "op": "POP"
    },
    "5490": {
      "op": "POP"
    },
    "5491": {
      "op": "POP"
    },
    "5492": {
      "op": "POP"
    },
    "5493": {
      "op": "POP"
    },
    "5494": {
      "jump": "o",
      "op": "JUMP"
    },
    "5495": {
      "op": "JUMPDEST"
    },
    "5496": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5498": {
      "op": "DUP3"
    },
    "5499": {
      "op": "GT"
    },
    "5500": {
      "op": "ISZERO"
    },
    "5501": {
      "op": "PUSH2",
      "value": "0x15C1"
    },
    "5504": {
      "op": "JUMPI"
    },
    "5505": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5507": {
      "op": "DUP2"
    },
    "5508": {
      "op": "DUP2"
    },
    "5509": {
      "op": "MSTORE"
    },
    "5510": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5512": {
      "op": "DUP2"
    },
    "5513": {
      "op": "KECCAK256"
    },
    "5514": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5516": {
      "op": "DUP6"
    },
    "5517": {
      "op": "ADD"
    },
    "5518": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "5520": {
      "op": "SHR"
    },
    "5521": {
      "op": "DUP2"
    },
    "5522": {
      "op": "ADD"
    },
    "5523": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5525": {
      "op": "DUP7"
    },
    "5526": {
      "op": "LT"
    },
    "5527": {
      "op": "ISZERO"
    },
    "5528": {
      "op": "PUSH2",
      "value": "0x159E"
    },
    "5531": {
      "op": "JUMPI"
    },
    "5532": {
      "op": "POP"
    },
    "5533": {
      "op": "DUP1"
    },
    "5534": {
      "op": "JUMPDEST"
    },
    "5535": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5537": {
      "op": "DUP6"
    },
    "5538": {
      "op": "ADD"
    },
    "5539": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "5541": {
      "op": "SHR"
    },
    "5542": {
      "op": "DUP3"
    },
    "5543": {
      "op": "ADD"
    },
    "5544": {
      "op": "SWAP2"
    },
    "5545": {
      "op": "POP"
    },
    "5546": {
      "op": "JUMPDEST"
    },
    "5547": {
      "op": "DUP2"
    },
    "5548": {
      "op": "DUP2"
    },
    "5549": {
      "op": "LT"
    },
    "5550": {
      "op": "ISZERO"
    },
    "5551": {
      "op": "PUSH2",
      "value": "0x15BD"
    },
    "5554": {
      "op": "JUMPI"
    },
    "5555": {
      "op": "DUP3"
    },
    "5556": {
      "op": "DUP2"
    },
    "5557": {
      "op": "SSTORE"
    },
    "5558": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5560": {
      "op": "ADD"
    },
    "5561": {
      "op": "PUSH2",
      "value": "0x15AA"
    },
    "5564": {
      "op": "JUMP"
    },
    "5565": {
      "op": "JUMPDEST"
    },
    "5566": {
      "op": "POP"
    },
    "5567": {
      "op": "POP"
    },
    "5568": {
      "op": "POP"
    },
    "5569": {
      "op": "JUMPDEST"
    },
    "5570": {
      "op": "POP"
    },
    "5571": {
      "op": "POP"
    },
    "5572": {
      "op": "POP"
    },
    "5573": {
      "jump": "o",
      "op": "JUMP"
    },
    "5574": {
      "op": "JUMPDEST"
    },
    "5575": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5584": {
      "op": "DUP4"
    },
    "5585": {
      "op": "GT"
    },
    "5586": {
      "op": "ISZERO"
    },
    "5587": {
      "op": "PUSH2",
      "value": "0x15DE"
    },
    "5590": {
      "op": "JUMPI"
    },
    "5591": {
      "op": "PUSH2",
      "value": "0x15DE"
    },
    "5594": {
      "op": "PUSH2",
      "value": "0x1020"
    },
    "5597": {
      "jump": "i",
      "op": "JUMP"
    },
    "5598": {
      "op": "JUMPDEST"
    },
    "5599": {
      "op": "PUSH2",
      "value": "0x15F2"
    },
    "5602": {
      "op": "DUP4"
    },
    "5603": {
      "op": "PUSH2",
      "value": "0x15EC"
    },
    "5606": {
      "op": "DUP4"
    },
    "5607": {
      "op": "SLOAD"
    },
    "5608": {
      "op": "PUSH2",
      "value": "0x13C4"
    },
    "5611": {
      "jump": "i",
      "op": "JUMP"
    },
    "5612": {
      "op": "JUMPDEST"
    },
    "5613": {
      "op": "DUP4"
    },
    "5614": {
      "op": "PUSH2",
      "value": "0x1577"
    },
    "5617": {
      "jump": "i",
      "op": "JUMP"
    },
    "5618": {
      "op": "JUMPDEST"
    },
    "5619": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5621": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5623": {
      "op": "DUP5"
    },
    "5624": {
      "op": "GT"
    },
    "5625": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5627": {
      "op": "DUP2"
    },
    "5628": {
      "op": "EQ"
    },
    "5629": {
      "op": "PUSH2",
      "value": "0x1626"
    },
    "5632": {
      "op": "JUMPI"
    },
    "5633": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5635": {
      "op": "DUP6"
    },
    "5636": {
      "op": "ISZERO"
    },
    "5637": {
      "op": "PUSH2",
      "value": "0x160E"
    },
    "5640": {
      "op": "JUMPI"
    },
    "5641": {
      "op": "POP"
    },
    "5642": {
      "op": "DUP4"
    },
    "5643": {
      "op": "DUP3"
    },
    "5644": {
      "op": "ADD"
    },
    "5645": {
      "op": "CALLDATALOAD"
    },
    "5646": {
      "op": "JUMPDEST"
    },
    "5647": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5649": {
      "op": "NOT"
    },
    "5650": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "5652": {
      "op": "DUP8"
    },
    "5653": {
      "op": "SWAP1"
    },
    "5654": {
      "op": "SHL"
    },
    "5655": {
      "op": "SHR"
    },
    "5656": {
      "op": "NOT"
    },
    "5657": {
      "op": "AND"
    },
    "5658": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5660": {
      "op": "DUP7"
    },
    "5661": {
      "op": "SWAP1"
    },
    "5662": {
      "op": "SHL"
    },
    "5663": {
      "op": "OR"
    },
    "5664": {
      "op": "DUP4"
    },
    "5665": {
      "op": "SSTORE"
    },
    "5666": {
      "op": "PUSH2",
      "value": "0x1680"
    },
    "5669": {
      "op": "JUMP"
    },
    "5670": {
      "op": "JUMPDEST"
    },
    "5671": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5673": {
      "op": "DUP4"
    },
    "5674": {
      "op": "DUP2"
    },
    "5675": {
      "op": "MSTORE"
    },
    "5676": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5678": {
      "op": "SWAP1"
    },
    "5679": {
      "op": "KECCAK256"
    },
    "5680": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5682": {
      "op": "NOT"
    },
    "5683": {
      "op": "DUP7"
    },
    "5684": {
      "op": "AND"
    },
    "5685": {
      "op": "SWAP1"
    },
    "5686": {
      "op": "DUP4"
    },
    "5687": {
      "op": "JUMPDEST"
    },
    "5688": {
      "op": "DUP3"
    },
    "5689": {
      "op": "DUP2"
    },
    "5690": {
      "op": "LT"
    },
    "5691": {
      "op": "ISZERO"
    },
    "5692": {
      "op": "PUSH2",
      "value": "0x1657"
    },
    "5695": {
      "op": "JUMPI"
    },
    "5696": {
      "op": "DUP7"
    },
    "5697": {
      "op": "DUP6"
    },
    "5698": {
      "op": "ADD"
    },
    "5699": {
      "op": "CALLDATALOAD"
    },
    "5700": {
      "op": "DUP3"
    },
    "5701": {
      "op": "SSTORE"
    },
    "5702": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5704": {
      "op": "SWAP5"
    },
    "5705": {
      "op": "DUP6"
    },
    "5706": {
      "op": "ADD"
    },
    "5707": {
      "op": "SWAP5"
    },
    "5708": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5710": {
      "op": "SWAP1"
    },
    "5711": {
      "op": "SWAP3"
    },
    "5712": {
      "op": "ADD"
    },
    "5713": {
      "op": "SWAP2"
    },
    "5714": {
      "op": "ADD"
    },
    "5715": {
      "op": "PUSH2",
      "value": "0x1637"
    },
    "5718": {
      "op": "JUMP"
    },
    "5719": {
      "op": "JUMPDEST"
    },
    "5720": {
      "op": "POP"
    },
    "5721": {
      "op": "DUP7"
    },
    "5722": {
      "op": "DUP3"
    },
    "5723": {
      "op": "LT"
    },
    "5724": {
      "op": "ISZERO"
    },
    "5725": {
      "op": "PUSH2",
      "value": "0x1674"
    },
    "5728": {
      "op": "JUMPI"
    },
    "5729": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5731": {
      "op": "NOT"
    },
    "5732": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "5734": {
      "op": "DUP9"
    },
    "5735": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "5737": {
      "op": "SHL"
    },
    "5738": {
      "op": "AND"
    },
    "5739": {
      "op": "SHR"
    },
    "5740": {
      "op": "NOT"
    },
    "5741": {
      "op": "DUP5"
    },
    "5742": {
      "op": "DUP8"
    },
    "5743": {
      "op": "ADD"
    },
    "5744": {
      "op": "CALLDATALOAD"
    },
    "5745": {
      "op": "AND"
    },
    "5746": {
      "op": "DUP2"
    },
    "5747": {
      "op": "SSTORE"
    },
    "5748": {
      "op": "JUMPDEST"
    },
    "5749": {
      "op": "POP"
    },
    "5750": {
      "op": "POP"
    },
    "5751": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5753": {
      "op": "DUP6"
    },
    "5754": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5756": {
      "op": "SHL"
    },
    "5757": {
      "op": "ADD"
    },
    "5758": {
      "op": "DUP4"
    },
    "5759": {
      "op": "SSTORE"
    },
    "5760": {
      "op": "JUMPDEST"
    },
    "5761": {
      "op": "POP"
    },
    "5762": {
      "op": "POP"
    },
    "5763": {
      "op": "POP"
    },
    "5764": {
      "op": "POP"
    },
    "5765": {
      "op": "POP"
    },
    "5766": {
      "jump": "o",
      "op": "JUMP"
    },
    "5767": {
      "op": "JUMPDEST"
    },
    "5768": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5770": {
      "op": "DUP2"
    },
    "5771": {
      "op": "MSTORE"
    },
    "5772": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5774": {
      "op": "PUSH2",
      "value": "0x169B"
    },
    "5777": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5779": {
      "op": "DUP4"
    },
    "5780": {
      "op": "ADD"
    },
    "5781": {
      "op": "DUP8"
    },
    "5782": {
      "op": "DUP10"
    },
    "5783": {
      "op": "PUSH2",
      "value": "0x1480"
    },
    "5786": {
      "jump": "i",
      "op": "JUMP"
    },
    "5787": {
      "op": "JUMPDEST"
    },
    "5788": {
      "op": "DUP3"
    },
    "5789": {
      "op": "DUP2"
    },
    "5790": {
      "op": "SUB"
    },
    "5791": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5793": {
      "op": "DUP5"
    },
    "5794": {
      "op": "ADD"
    },
    "5795": {
      "op": "MSTORE"
    },
    "5796": {
      "op": "PUSH2",
      "value": "0x16AE"
    },
    "5799": {
      "op": "DUP2"
    },
    "5800": {
      "op": "DUP7"
    },
    "5801": {
      "op": "DUP9"
    },
    "5802": {
      "op": "PUSH2",
      "value": "0x1480"
    },
    "5805": {
      "jump": "i",
      "op": "JUMP"
    },
    "5806": {
      "op": "JUMPDEST"
    },
    "5807": {
      "op": "SWAP2"
    },
    "5808": {
      "op": "POP"
    },
    "5809": {
      "op": "POP"
    },
    "5810": {
      "op": "DUP3"
    },
    "5811": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5813": {
      "op": "DUP4"
    },
    "5814": {
      "op": "ADD"
    },
    "5815": {
      "op": "MSTORE"
    },
    "5816": {
      "op": "SWAP7"
    },
    "5817": {
      "op": "SWAP6"
    },
    "5818": {
      "op": "POP"
    },
    "5819": {
      "op": "POP"
    },
    "5820": {
      "op": "POP"
    },
    "5821": {
      "op": "POP"
    },
    "5822": {
      "op": "POP"
    },
    "5823": {
      "op": "POP"
    },
    "5824": {
      "jump": "o",
      "op": "JUMP"
    },
    "5825": {
      "op": "JUMPDEST"
    },
    "5826": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5828": {
      "op": "DUP2"
    },
    "5829": {
      "op": "MSTORE"
    },
    "5830": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5832": {
      "op": "PUSH2",
      "value": "0x16D5"
    },
    "5835": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5837": {
      "op": "DUP4"
    },
    "5838": {
      "op": "ADD"
    },
    "5839": {
      "op": "DUP10"
    },
    "5840": {
      "op": "DUP12"
    },
    "5841": {
      "op": "PUSH2",
      "value": "0x1480"
    },
    "5844": {
      "jump": "i",
      "op": "JUMP"
    },
    "5845": {
      "op": "JUMPDEST"
    },
    "5846": {
      "op": "DUP3"
    },
    "5847": {
      "op": "DUP2"
    },
    "5848": {
      "op": "SUB"
    },
    "5849": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5851": {
      "op": "DUP5"
    },
    "5852": {
      "op": "ADD"
    },
    "5853": {
      "op": "MSTORE"
    },
    "5854": {
      "op": "PUSH2",
      "value": "0x16E8"
    },
    "5857": {
      "op": "DUP2"
    },
    "5858": {
      "op": "DUP9"
    },
    "5859": {
      "op": "DUP11"
    },
    "5860": {
      "op": "PUSH2",
      "value": "0x1480"
    },
    "5863": {
      "jump": "i",
      "op": "JUMP"
    },
    "5864": {
      "op": "JUMPDEST"
    },
    "5865": {
      "op": "SWAP1"
    },
    "5866": {
      "op": "POP"
    },
    "5867": {
      "op": "DUP3"
    },
    "5868": {
      "op": "DUP2"
    },
    "5869": {
      "op": "SUB"
    },
    "5870": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5872": {
      "op": "DUP5"
    },
    "5873": {
      "op": "ADD"
    },
    "5874": {
      "op": "MSTORE"
    },
    "5875": {
      "op": "PUSH2",
      "value": "0x16FD"
    },
    "5878": {
      "op": "DUP2"
    },
    "5879": {
      "op": "DUP7"
    },
    "5880": {
      "op": "DUP9"
    },
    "5881": {
      "op": "PUSH2",
      "value": "0x1480"
    },
    "5884": {
      "jump": "i",
      "op": "JUMP"
    },
    "5885": {
      "op": "JUMPDEST"
    },
    "5886": {
      "op": "SWAP2"
    },
    "5887": {
      "op": "POP"
    },
    "5888": {
      "op": "POP"
    },
    "5889": {
      "op": "DUP3"
    },
    "5890": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5892": {
      "op": "DUP4"
    },
    "5893": {
      "op": "ADD"
    },
    "5894": {
      "op": "MSTORE"
    },
    "5895": {
      "op": "SWAP9"
    },
    "5896": {
      "op": "SWAP8"
    },
    "5897": {
      "op": "POP"
    },
    "5898": {
      "op": "POP"
    },
    "5899": {
      "op": "POP"
    },
    "5900": {
      "op": "POP"
    },
    "5901": {
      "op": "POP"
    },
    "5902": {
      "op": "POP"
    },
    "5903": {
      "op": "POP"
    },
    "5904": {
      "op": "POP"
    },
    "5905": {
      "jump": "o",
      "op": "JUMP"
    },
    "5906": {
      "op": "JUMPDEST"
    },
    "5907": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5909": {
      "op": "DUP2"
    },
    "5910": {
      "op": "MSTORE"
    },
    "5911": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5913": {
      "op": "PUSH2",
      "value": "0x1726"
    },
    "5916": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5918": {
      "op": "DUP4"
    },
    "5919": {
      "op": "ADD"
    },
    "5920": {
      "op": "DUP5"
    },
    "5921": {
      "op": "DUP7"
    },
    "5922": {
      "op": "PUSH2",
      "value": "0x1480"
    },
    "5925": {
      "jump": "i",
      "op": "JUMP"
    },
    "5926": {
      "op": "JUMPDEST"
    },
    "5927": {
      "op": "SWAP5"
    },
    "5928": {
      "op": "SWAP4"
    },
    "5929": {
      "op": "POP"
    },
    "5930": {
      "op": "POP"
    },
    "5931": {
      "op": "POP"
    },
    "5932": {
      "op": "POP"
    },
    "5933": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "9c01e499f807ba97624a9456faaf1e6adca297b9",
  "source": "//SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"../interfaces/IDepositContract.sol\";\nimport \"../interfaces/mocks/ISSVNetwork.sol\";\nimport \"./SSVETH.sol\";\n\n/** this contract utilizes custom errors to optimize gas usage, instead of normal `require` conditionals. \n * By using custom errors instead, we don't need to use up storage space on the `require`'s revert string messages.\n * This also allows developers and users to see customizable output values when the custom error is invoked */\nerror StakingPool__CantStakeZeroAmount(uint valueSent);\nerror StakingPool__OnlyWhitelistAddress(address caller, address whitelistedAddress);\n\ncontract StakingPool is Ownable, ReentrancyGuard {\n    address public WhitelistKeyGenerator;\n    address public WITHDRAWAL_ADDRESS;\n    IDepositContract immutable DepositContract;\n    SSVETH public ssvETH;\n    uint256 public immutable VALIDATOR_AMOUNT = 32 * 1e18;\n    address public SSV_TOKEN_ADDR;\n    address public SSV_CONTRACT_ADDR;\n    uint32[4] OperatorIDs;\n    bytes[] public Validators;\n    // address public Oracle_address; \n    \n    uint256 beaconRewards;\n    uint256 executionRewards;\n\n    mapping(address => uint256) private userStake;\n\n    event UserStaked(address user_address, uint256 amount);\n    event PubKeyDeposited(bytes pubkey);\n    event OperatorIDsChanged(uint32[4] newOperators);\n    event SharePriceUpdated(uint256 newPrice);\n    event KeySharesDeposited(\n        bytes pubkey,\n        bytes sharesPublicKeys,\n        uint256 amount\n    );\n\n    constructor(\n        address keyGenerator,\n        address depositAddress,\n        address withdrawal,\n        address ssv_contract,\n        address ssv_token,\n        uint32[4] memory ids\n    ) {\n        WITHDRAWAL_ADDRESS = withdrawal;\n        WhitelistKeyGenerator = keyGenerator;\n        DepositContract = IDepositContract(depositAddress);\n        SSVETH _ssvETH = new SSVETH();\n        ssvETH = SSVETH(address(_ssvETH));\n        SSV_CONTRACT_ADDR = ssv_contract;\n        SSV_TOKEN_ADDR = ssv_token;\n        OperatorIDs = ids;\n    }\n\n    /** \n     * @notice called when the contract receives eth\n     */\n    receive() external payable {\n        updateExecutionRewards(msg.value);\n    }\n\n    /**\n     * @notice Get operator ids, check operators here https://explorer.ssv.network/\n     */\n    function getOperators() public view returns (uint32[4] memory) {\n        return OperatorIDs;\n    }\n\n    /**\n     * @notice Get validators array\n     */\n    function getValidators() public view returns (bytes[] memory) {\n        return Validators;\n    }\n\n    /**\n     * @notice Get user's staked amount\n     */\n    function getUserStake(address _userAddress) public view returns (uint256) {\n        return userStake[_userAddress];\n    }\n\n    /**\n     * @notice Get share price\n     */\n    function getShareprice() public view returns (uint256) {\n        uint256 _sharePrice = ssvETH.sharePrice();\n        return _sharePrice;\n    }\n\n    /**\n     * @dev Update operators\n     * @param _newOperators: Array of the the new operators Ids\n     */\n    function updateOperators(uint32[4] memory _newOperators) public onlyOwner {\n        OperatorIDs = _newOperators;\n        emit OperatorIDsChanged(_newOperators);\n    }\n\n    /**\n     * @dev Update share price of the staking pool\n     * @param _newBeaconRewards: The new beacon rewards amount\n     */\n    function updateBeaconRewards(uint256 _newBeaconRewards) external onlyOwner {\n        beaconRewards = _newBeaconRewards;\n        uint256 _newSharePrice = (beaconRewards +\n            executionRewards +\n            (Validators.length * 32)) / (Validators.length * 32);\n        updateSharePrice(_newSharePrice);\n    }\n\n    /**\n     * @notice Stake tokens\n     */\n\n    function stake() public payable {\n        /** Ensuring that the caller has passed atleast some value to the function/contract. \n        This contract utilizes custom errors to optimize gas usage, instead of normal `require` conditionals */\n        if(msg.value <= 0) {\n            revert StakingPool__CantStakeZeroAmount(msg.value);\n        }\n        uint256 amount_minted = (msg.value * ssvETH.sharePrice()) / 1e18;\n        ssvETH.mint(msg.sender, amount_minted);\n        emit UserStaked(msg.sender, msg.value);\n        userStake[msg.sender] += msg.value;\n    }\n\n    /**\n     * @notice Unstake tokens\n     * @param _amount: Amount to be unstaked\n     */\n    function unStake(uint256 _amount) public {\n        ssvETH.transferFrom(msg.sender, address(this), _amount);\n        uint256 _amount_to_transfer = (_amount / ssvETH.sharePrice()) * 1e18;\n        payable(msg.sender).transfer(_amount_to_transfer);\n        userStake[msg.sender] -= _amount;\n    }\n\n    /**\n     * @notice Deposit a validator to the deposit contract\n     * @param _pubkey: Public key of the validator\n     * @param _withdrawal_credentials: Withdrawal credentials of the validator\n     * @param _signature: Signature of the deposit data\n     * @param _deposit_data_root: Root of the deposit data\n     */\n    function depositValidator(\n        bytes calldata _pubkey,\n        bytes calldata _withdrawal_credentials,\n        bytes calldata _signature,\n        bytes32 _deposit_data_root\n    ) external {\n        // Deposit the validator to the deposit contract\n        DepositContract.deposit{value: VALIDATOR_AMOUNT}(\n            _pubkey,\n            _withdrawal_credentials,\n            _signature,\n            _deposit_data_root\n        );\n        // Emit an event to log the deposit of the public key\n        emit PubKeyDeposited(_pubkey);\n    }\n\n    /**\n     * @notice Deposit shares for a validator\n     * @param _pubkey: Public key of the validator\n     * @param _operatorIds: IDs of the validator's operators\n     * @param _shares: Public keys of the shares\n     * @param _amount: Amount of tokens to be deposited\n     * @param _cluster: Latest Cluster information\n     * @dev Callable by the whitelisted address\n     */\n    function depositShares(\n        bytes calldata _pubkey,\n        uint64[] calldata _operatorIds,\n        bytes calldata _shares,\n        uint256 _amount,\n        ISSVNetworkCore.Cluster memory _cluster\n    ) external {\n        /* Check if the message sender is the whitelisted address\n         * This contract utilizes custom errors to optimize gas usage, instead of normal `require` conditionals */\n        if(msg.sender != WhitelistKeyGenerator) {\n            revert StakingPool__OnlyWhitelistAddress(msg.sender, WhitelistKeyGenerator);\n        }\n        // Approve the transfer of tokens to the SSV contract\n        IERC20(SSV_TOKEN_ADDR).approve(SSV_CONTRACT_ADDR, _amount);\n        // Register the validator and deposit the shares\n        ISSVNetwork(SSV_CONTRACT_ADDR).registerValidator(\n            _pubkey,\n            _operatorIds,\n            _shares,\n            _amount,\n            _cluster\n        );\n        // Add the public key to the list of validators\n        Validators.push(_pubkey);\n        // Emit an event to log the deposit of shares\n        emit KeySharesDeposited(_pubkey, _shares, _amount);\n    }\n\n    /**\n     * @notice update execution rewards\n     * @param _newExecutionRewards:  Execution rewards amount added\n     */\n    function updateExecutionRewards(uint256 _newExecutionRewards) internal {\n        executionRewards += _newExecutionRewards;\n    }\n\n    /**\n     * @dev Update share price of the staking pool\n     * @param _newSharePrice: The new share price amount\n     */\n    function updateSharePrice(uint256 _newSharePrice) internal {\n        ssvETH.changeSharePrice(_newSharePrice);\n        emit SharePriceUpdated(_newSharePrice);\n    }\n\n}\n",
  "sourceMap": "820:6954:13:-:0;;;1074:9;1030:53;;1691:536;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:2;719:10:7;936:18:2;:32::i;:::-;1716:1:3;1821:22;;1896:18:13;:31;;-1:-1:-1;;;;;1896:31:13;;;-1:-1:-1;;;;;;1896:31:13;;;;;;;1937:21;:36;;;;;;;;;;;;;1983:50;;;;2060:12;;1896:18;;2060:12;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2082:6:13;:33;;-1:-1:-1;;;;;2082:33:13;;;-1:-1:-1;;;;;;2082:33:13;;;;;;2125:17;:32;;;;;;;;;;;2167:14;:26;;;;;;;;;;;;2043:29;;-1:-1:-1;2203:17:13;;:11;;2217:3;;2203:17;:::i;:::-;;1886:341;1691:536;;;;;;820:6954;;2433:187:2;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:2;;;-1:-1:-1;;;;;;2541:17:2;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;820:6954:13:-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;820:6954:13;;;-1:-1:-1;820:6954:13;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:177:19;93:13;;-1:-1:-1;;;;;135:31:19;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:127::-;257:10;252:3;248:20;245:1;238:31;288:4;285:1;278:15;312:4;309:1;302:15;328:167;406:13;;459:10;448:22;;438:33;;428:61;;485:1;482;475:12;500:1250;637:6;645;653;661;669;677;708:3;752:2;740:9;731:7;727:23;723:32;720:52;;;768:1;765;758:12;720:52;791:40;821:9;791:40;:::i;:::-;781:50;;850:2;871:49;916:2;905:9;901:18;871:49;:::i;:::-;861:59;;939:49;984:2;973:9;969:18;939:49;:::i;:::-;929:59;;1007:49;1052:2;1041:9;1037:18;1007:49;:::i;:::-;997:59;;1075:50;1120:3;1109:9;1105:19;1075:50;:::i;:::-;1065:60;;1169:7;1163:3;1152:9;1148:19;1144:33;1134:61;;1191:1;1188;1181:12;1134:61;1224:2;1218:9;1266:3;1254:16;;-1:-1:-1;;;;;1285:34:19;;1321:22;;;1282:62;1279:88;;;1347:18;;:::i;:::-;1383:2;1376:22;1447:18;;;;1418:6;1477:19;;;1474:39;;;1509:1;1506;1499:12;1474:39;1548:3;1537:9;1533:19;1561:158;1577:6;1572:3;1569:15;1561:158;;;1643:33;1672:3;1643:33;:::i;:::-;1631:46;;1697:12;;;;1594;;1561:158;;;1565:3;;1738:6;1728:16;;;;;500:1250;;;;;;;;:::o;:::-;820:6954:13;;;;;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/StakingPool.sol",
  "type": "contract"
}